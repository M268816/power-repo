- d_layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutGap: =
      LayoutMode: =LayoutMode.Auto
      Width: =Parent.Width
      X: =
    Children:
    - d_header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =varColor1
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =varPadding
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =varPadding
          PaddingLeft: =varPadding
          PaddingRight: =varPadding
          PaddingTop: =varPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - d_collect:
            Control: Classic/Button
            Properties:
              OnSelect: |-
                =/*Start*/
                Set(varLoading,{Visible: true, Value: 1, Text: "Loading"});


                /*Capture Local Date Selection*/
                UpdateContext({
                    locEndDate: d_end_date.SelectedDate,
                    locStartDate: d_start_date.SelectedDate
                });

                Set(varLoading,{Visible: true, Value: 10, Text: "Checking for Updates"});
                /*Check if collections need updating*/
                Set(varUpdateDowntime,
                    Or(    
                        Not(First(Sort(Downtime,ID,SortOrder.Descending)).ID = First(Sort(collectDowntime,id,SortOrder.Descending)).id),
                        Not(varEndDate = locEndDate),
                        Not(varStartDate = locStartDate)
                    )
                );

                /*Set collection dates from selected local dates*/
                If( Not(varEndDate = locEndDate), Set(varEndDate, locEndDate));
                If( Not(varStartDate = locStartDate), Set(varStartDate, locStartDate));

                /*Collect Downtime*/
                Set(varLoading,{Visible: true, Value: 20, Text: "Collecting Downtime Data"});
                If(varUpdateDowntime,
                    If(
                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,
                        Set(varLoading,{Visible: true, Value: 75, Text: "Retrieving Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Filter(Downtime,
                                    Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                    Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,
                        Set(varLoading,{Visible: true, Value: 75, Text: "Parsing PowerAutomate Flow for Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_downtime_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    started: DateTimeValue(Value._started),
                                    ended: DateTimeValue(Value._ended),
                                    reason: Text(Value._reason),
                                    total: Value(Value._total),
                                    comments: Text(Value._comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,
                        Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Downtime Dataset 1"});
                        Collect(material_1,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                    )
                                ),
                                Ended,
                                SortOrder.Ascending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Downtime Dataset 2"});
                        Collect(material_2,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Ended,
                                SortOrder.Descending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 40, Text: "Joining Downtime Dataset 1"});
                        ClearCollect(fusion, material_1);

                        Set(varLoading,{Visible: true, Value: 60, Text: "Joining Downtime Dataset 2"});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );

                        Set(varLoading,{Visible: true, Value: 75, Text: "Collecting Joined Downtime Data"});
                        ClearCollect(
                            collectDowntime,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 90, Text: "Garbage Collection"});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    )
                );

                Set(varLoading,{Visible: true, Value: 95, Text: "Finishing Up"});
                Select(d_update);
              Text: ="collect"
              Visible: =false
              X: =20
              Y: =20
        - d_update:
            Control: Classic/Button
            Properties:
              OnSelect: |-
                =/*Update Code*/
                Set(varLoading,{Visible: true, Value: 20, Text: "Updating"});

                /*Clear collections for top downtime reasons*/
                Clear(collectTopDowntime);
                Clear(collectHasReason);

                UpdateContext({
                    locStartDate: d_start_date.SelectedDate,
                    locEndDate: d_end_date.SelectedDate
                });

                /*Create a Default filter*/
                UpdateContext({
                    locDefaultDowntimeFilter:
                        Filter(
                                collectDowntime,
                                And(
                                    started >= DateAdd(
                                        DateValue(locStartDate),
                                        -1,
                                        TimeUnit.Hours
                                    ),
                                    ended <= DateAdd(
                                        DateValue(locEndDate),
                                        23,
                                        TimeUnit.Hours
                                    )
                                ),
                                If(
                                    d_shift.Selected.Value = "All",
                                    shift = shift,
                                    shift = d_shift.Selected.Value
                                ),
                                If(
                                    d_line.Selected.Value = "All",
                                    line = line,
                                    line = d_line.Selected.Value
                                )
                            )
                });


                /*For all downtime reasons, collect the total sum of downtime, if downtime is greater than 0, add to has reason collection*/
                Set(varLoading,{Visible: true, Value: 40, Text: "Collecting Downtime Sums"});
                ForAll(
                    collectDowntimeReasons,
                    If(
                        Sum(
                            Filter(
                                locDefaultDowntimeFilter,
                                reason = Downtime_Reason
                            ),
                            total
                        ) > 0,
                        Collect(
                            collectHasReason,
                            {Downtime_Reason: Downtime_Reason}
                        )
                    )
                );
                /*For all downtime that has an amount/reason, collect the total sum of downtime, sort by total amount*/
                Set(varLoading,{Visible: true, Value: 60, Text: "Building Top Downtime List"});
                ForAll(
                    collectHasReason,
                    Collect(
                        collectTopDowntime,
                        {
                            Downtime_Reason: Downtime_Reason,
                            
                            Downtime_Total: Sum(
                                Filter(
                                    locDefaultDowntimeFilter,
                                    reason = Downtime_Reason
                                ),
                                total
                            ),
                            
                            Downtime_Comments:
                                Concat(
                                    Filter(
                                        locDefaultDowntimeFilter,
                                        !IsBlankOrError(comments),
                                        reason = Downtime_Reason
                                ),
                                    comments,
                                    " ¶ "
                                )
                        }
                    )
                );



                /*Clear for garbage collection*/
                Set(varLoading,{Visible: true, Value: 95, Text: "Finishing Up"});

                UpdateContext({
                    locDefaultDowntimeFilter: Blank()
                });

                /*End*/
                Set(varLoading,{Value: 100, Text: "Completed"});
                Set(varLoading,{Visible: false, Value: -1, Text: "Not Loading"});
              Text: ="update"
              Visible: =false
              X: =20
              Y: =20
        - d_logo:
            Control: Image
            Properties:
              Image: =LOGO_MSIG_SBlue_FIT_ALPHA
              FillPortions: =1
              LayoutMinHeight: =1
              LayoutMinWidth: =1
              Width: =10
        - d_h_title:
            Control: Label
            Properties:
              Text: ="Encapsualtion Daily Managmenet System"
              Align: =Align.Center
              Color: =varColor5
              FillPortions: =6
              LayoutMinHeight: =1
              LayoutMinWidth: =1
              Size: =Self.Height / 2
        - d_h_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =varPadding
              LayoutJustifyContent: =LayoutJustifyContent.Center
              LayoutMinHeight: =1
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
              Width: =d_h_n_reload.Width * 3 + varPadding * 4
            Children:
            - d_h_n_reload:
                Control: Image
                Properties:
                  OnSelect: |-
                    =/*Start*/
                    Set(varLoading,{Visible: true, Value: 1, Text: "Loading"});

                    UpdateContext({
                        locStartDate: d_start_date.SelectedDate,
                        locEndDate: d_end_date.SelectedDate
                    });

                    /*Collect Downtime*/
                    If(
                        DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 10,
                        Set(varLoading,{Visible: true, Value: 50, Text: "Collecting Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Filter(Downtime,
                                    Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours),
                                    Started >= DateAdd(locStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        ),

                        DateDiff( locStartDate, locEndDate, TimeUnit.Days) > 20,
                        Set(varLoading,{Visible: true, Value: 50, Text: "Parsing PowerAutomate Flow for Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_downtime_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(locEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(locStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    started: DateTimeValue(Value._started),
                                    ended: DateTimeValue(Value._ended),
                                    reason: Text(Value._reason),
                                    total: Value(Value._total),
                                    comments: Text(Value._comments)
                                }
                            )
                        ),

                        DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 20,
                        Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Downtime Dataset 1"});
                         Collect(material_1,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Started >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                        Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                    )
                                ),
                                Ended,
                                SortOrder.Ascending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 35, Text: "Collecting Downtime Dataset 2"});
                        Collect(material_2,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Started >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                        Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                    )
                                ),
                                Ended,
                                SortOrder.Descending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 40, Text: "Joining Downtime Dataset 1"});
                        ClearCollect(fusion, material_1);

                        Set(varLoading,{Visible: true, Value: 45, Text: "Joining Downtime Dataset 2"});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );

                        Set(varLoading,{Visible: true, Value: 50, Text: "Collecting Joined Downtime Data"});
                        ClearCollect(
                            collectDowntime,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 51, Text: "Garbage Collection"});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    );

                    Set(varLoading,{Visible: true, Value: 52, Text: "Finshing up"});

                    /*Update*/
                    Select(d_update);
                  Image: =gblAppIcons.Reload
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =d_h_n_settings.X - Self.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - d_h_n_bugs:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Bugs)
                  Image: =gblAppIcons.Bug
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width
                  Y: =Parent.Height/2 - Self.Height/2
            - d_h_n_settings:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Settings)
                  Image: =gblAppIcons.Settings
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width - d_h_n_bugs.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - d_h_n_user:
                Control: Image
                Properties:
                  Image: |
                    =If(IsBlankOrError(User().Image), gblAppIcons.Employee, User().Image)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  RadiusBottomLeft: =Self.Height / 2
                  RadiusBottomRight: =Self.Height / 2
                  RadiusTopLeft: =Self.Height / 2
                  RadiusTopRight: =Self.Height / 2
                  Width: =Self.Height
    - d_body:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          FillPortions: =15
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
        Children:
        - d_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =varColor3
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =varPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =varPadding
              PaddingLeft: =varPadding
              PaddingRight: =varPadding
              PaddingTop: =varPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - d_n_title:
                Control: Text
                Properties:
                  Align: ='TextCanvas.Align'.Center
                  Size: =Self.Height / 3
                  Text: ="Downtime"
                  VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                  Weight: ='TextCanvas.Weight'.Semibold
                  FillPortions: =1
            - d_n_seperator:
                Control: Rectangle
                Properties:
                  Height: =1
                  Width: =Parent.Width * 0.95
            - d_n_gallery:
                Control: Gallery
                Variant: galleryVertical
                Properties:
                  Items: =collectNavigation
                  DelayItemLoading: =true
                  FillPortions: =13
                  Layout: =Layout.Vertical
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  LoadingSpinner: =LoadingSpinner.Data
                  ShowScrollbar: =false
                  TemplatePadding: =0
                  TemplateSize: =(Self.Height - ((Self.AllItemsCount+1) * Self.TemplatePadding)) / Self.AllItemsCount
                Children:
                - d_n_button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Navigate(ThisItem.ScreenName);
                      Text: =ThisItem.Title
                      Color: =varColor0
                      DisplayMode: =If(App.ActiveScreen = ThisItem.ScreenName, DisplayMode.Disabled, DisplayMode.Edit)
                      Fill: =varColorAccent
                      FontWeight: =FontWeight.Normal
                      Height: =Parent.TemplateHeight - varPadding
                      Size: =Self.Width / 16
                      Width: =Parent.TemplateWidth - Self.BorderThickness
                      X: =Center(Parent.TemplateWidth, Self.Width)
                      Y: =Center(Parent.TemplateHeight, Self.Height)
            - d_n_footer:
                Control: GroupContainer
                Variant: manualLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =2
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - d_n_f_text:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =8
                      Text: ="MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                      VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                      Height: =Parent.Height
                      Width: =Parent.Width
        - d_main:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              FillPortions: =11
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =varPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =varPadding
              PaddingLeft: =varPadding
              PaddingRight: =varPadding
              PaddingTop: =varPadding
            Children:
            - d_controls:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =varColor4
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutGap: =varPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =varPadding
                  PaddingLeft: =varPadding
                  PaddingRight: =varPadding
                  PaddingTop: =varPadding
                Children:
                - d_start_date_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Starting Date"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_start_date:
                    Control: DatePicker
                    Properties:
                      FontSize: =Self.Width / 10
                      Format: ="Short"
                      SelectedDate: =varNowDay
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_seperator_0:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_end_date_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Ending Date"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_end_date:
                    Control: DatePicker
                    Properties:
                      FontSize: =Self.Width / 10
                      Format: ="Short"
                      SelectedDate: =varNowDay
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_seperator_1:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Select(d_collect);
                      Text: ="Update Date Range"
                      Color: =varColor0
                      Fill: =varColorAccent
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Width / 16
                - d_seperator_2:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_shift_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Shift"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_shift:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(d_update);
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "All"}
                      FontSize: =Self.Width / 10
                      Items: =["All", "C", "A", "B"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_seperator_3:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_line_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Line"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_line:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(d_update);
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "All"}
                      FontSize: =Self.Width / 10
                      Items: =["All","SSC","SSC2","XL1","XL2","XL3","XL4","XL5","XLT","XLT2","XLT3"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_seperator_4:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_reason_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Reason"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_reason:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      FontSize: =Self.Width / 10
                      Items: =collectTopDowntime
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                    Children:
                    - Downtime_Reason2:
                        Control: PowerApps_CoreControls_DropdownCanvasTemplate_dataField
                        Variant: textualColumn
                        Properties:
                          FieldDisplayName: ="Downtime_Reason"
                          FieldName: ="Downtime_Reason"
                          FieldType: ="s"
                          Order: =1
                - d_seperator_5:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - d_sort_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Sort by:"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_sort_by:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "Line"}
                      FontSize: =Self.Width / 10
                      Items: =["Line", "Shift", "Time", "Minutes Down"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_sort_order:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "Ascending"}
                      FontSize: =Self.Width / 10
                      Items: =["Ascending", "Descending"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - d_c_footer:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.None
                      FillPortions: =2
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
            - d_section:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =9
                  LayoutAlignItems: =LayoutAlignItems.Center
                  LayoutGap: =varPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =varPadding
                  PaddingLeft: =varPadding
                  PaddingRight: =varPadding
                  PaddingTop: =varPadding
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - d_top_downtime:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      DropShadow: =DropShadow.Semilight
                      FillPortions: =1.5
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =1
                      LayoutMinWidth: =1
                      LayoutMode: =LayoutMode.Auto
                      Visible: =locShowTop
                    Children:
                    - d_td_total_title:
                        Control: Label
                        Properties:
                          Text: ="Total Downtime"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: =1
                          Font: =Font.Verdana
                          Height: =Parent.Height
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                          Size: =Self.Height / 3
                          Width: =Parent.Width
                    - d_td_total:
                        Control: Label
                        Properties:
                          Text: =Sum(collectTopDowntime, Downtime_Total) & " Minutes"
                          Align: =Align.Center
                          Color: =varColor0
                          Fill: =varColor4
                          FillPortions: =1
                          Font: =Font.Verdana
                          Height: =Parent.Height
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                          Size: =Self.Height / 3.5
                          Width: =Parent.Width
                    - d_c_t_header:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DropShadow: =DropShadow.None
                          Fill: =varColor2
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width
                        Children:
                        - d_c_t_h_title:
                            Control: Label
                            Properties:
                              Text: ="Top Downtime Reasons"
                              Align: =Align.Center
                              Color: =varColor5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Height / 3
                              Width: =Parent.Width
                    - d_c_t_columns:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DropShadow: =DropShadow.None
                          Fill: =varColor3
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width
                        Children:
                        - d_c_t_c_amount:
                            Control: Label
                            Properties:
                              Text: ="Downtime Amount"
                              Align: =Align.Center
                              Color: =varColor5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Width / 14
                              Width: =Parent.Width / 2
                              X: =d_c_t_c_reason.X + d_c_t_c_reason.Width
                        - d_c_t_c_reason:
                            Control: Label
                            Properties:
                              Text: ="Downtime Reason"
                              Align: =Align.Center
                              Color: =varColor5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Width / 14
                              Width: =Parent.Width / 2
                    - d_c_t_gallery:
                        Control: Gallery
                        Variant: galleryVertical
                        Properties:
                          Items: =Sort(collectTopDowntime, Downtime_Total, SortOrder.Descending)
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DelayItemLoading: =true
                          FillPortions: =10
                          Layout: =Layout.Vertical
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LoadingSpinner: =LoadingSpinner.Data
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 10
                        Children:
                        - d_c_t_g_amount:
                            Control: Label
                            Properties:
                              OnSelect: =Select(Parent)
                              Text: =ThisItem.Downtime_Total
                              Align: =Align.Center
                              Font: =Font.Verdana
                              Height: =Parent.TemplateHeight - d_c_t_g_seperator.Height
                              Size: =Self.Width / 14
                              Width: =Parent.TemplateWidth/2
                              X: =d_c_t_g_reason.X + d_c_t_g_reason.Width
                              Y: =1-1
                        - d_c_t_g_reason:
                            Control: Label
                            Properties:
                              OnSelect: =Select(Parent)
                              Text: =ThisItem.Downtime_Reason
                              Align: =Align.Center
                              Font: =Font.Verdana
                              Height: =Parent.TemplateHeight - d_c_t_g_seperator.Height
                              Size: =Self.Width / 14
                              Width: =Parent.TemplateWidth/2
                              X: =1-1
                              Y: =1-1
                        - d_c_t_g_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Select(Parent)
                              Fill: =varColor1
                              Height: =Parent.TemplateHeight * 0.025
                              Width: =Parent.Width
                              Y: =Parent.TemplateHeight - Self.Height
                    - d_c_t_copy:
                        Control: Classic/Button
                        Properties:
                          OnSelect: |-
                            =IfError(
                                Copy(
                                    Concat(
                                        FirstN(
                                            Sort(
                                                collectTopDowntime,
                                                Downtime_Total,
                                                SortOrder.Descending
                                                ),
                                            6
                                            ),
                                        Downtime_Reason & Char(9) & Downtime_Total & Char(9) & Downtime_Comments,
                                        Char(13)
                                    )
                                ),
                                Notify("Cannot copy data from new Teams, or other embeded tools. Please open this app in a web browser to copy items.", NotificationType.Error)
                            );

                            If(
                                d_line.Selected.Value = "All",
                                Notify("Cannot copy Downtime for all lines together. Please select one Line at a time." , NotificationType.Information),
                                d_shift.Selected.Value = "All",
                                Notify("Cannot copy Downtime for all shifts together. Please select one Shift at a time." , NotificationType.Information),
                                Notify("Copied top downtime for " & d_line.Selected.Value, NotificationType.Success)
                            );
                          Text: ="Copy Downtime for DOR"
                          Color: =varColor0
                          Fill: =varColorAccent
                          FillPortions: =2
                          Font: =Font.Verdana
                          HoverColor: =varColor5
                          HoverFill: =ColorFade(Self.Fill, -50%)
                          LayoutMinHeight: =0
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =4
                          RadiusBottomRight: =4
                          RadiusTopLeft: '=4   '
                          RadiusTopRight: '=4   '
                          Size: =Self.Width / 24
                          Width: =Parent.Width
                - now_d_downtime:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      DropShadow: =DropShadow.Semilight
                      FillPortions: =If(locShowTop, 5.5, 7.5)
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMode: =LayoutMode.Auto
                    Children:
                    - d_c_d_header:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DropShadow: =DropShadow.None
                          Fill: =varColor2
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - d_c_d_h_title:
                            Control: Label
                            Properties:
                              Text: |-
                                =If(
                                    And(
                                        d_shift.Selected.Value = "All",
                                        d_line.Selected.Value = "All"
                                    ),
                                    "All Downtime",
                                    d_shift.Selected.Value = "All",
                                    d_shift.Selected.Value & " " & d_line.Selected.Value & " Downtime",
                                    d_line.Selected.Value & " " & d_shift.Selected.Value & " Shift Downtime"

                                )
                              Align: =Align.Center
                              Color: =varColor5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Height / 2
                              Width: =Parent.Width
                        - d_c_d_h_view:
                            Control: Classic/Button
                            Properties:
                              OnSelect: =UpdateContext({locShowTop:!locShowTop});
                              Text: |-
                                =If(
                                    locShowTop,
                                    "Hide Top Downtime",
                                    "Show Top Downtime"
                                )
                              Color: =varColor0
                              Fill: =varColorAccent
                              Font: =Font.Verdana
                              Height: =Parent.Height * 0.80
                              HoverColor: =varColor5
                              HoverFill: =ColorFade(Self.Fill, -50%)
                              Size: =Self.Width / 16
                              Width: =Parent.Width * 0.15
                              X: =Parent.Width * 0.01
                              Y: =Parent.Height/2 - Self.Height/2
                        - d_c_d_h_add:
                            Control: Classic/Button
                            Properties:
                              OnSelect: |-
                                =Set(varDowntimeMode, FormMode.New);
                                Navigate(Modify_Downtime);
                              Text: ="Add Downtime"
                              Color: =varColor0
                              Fill: =varColorAccent
                              Font: =Font.Verdana
                              Height: =Parent.Height * 0.80
                              HoverColor: =varColor5
                              HoverFill: =ColorFade(Self.Fill, -50%)
                              Size: =Self.Width / 16
                              Width: =Parent.Width * 0.15
                              X: =Parent.Width * 0.99 - Self.Width
                              Y: =Parent.Height/2 - Self.Height/2
                    - d_c_d_columns:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DropShadow: =DropShadow.None
                          Fill: =varColor3
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LayoutMode: =LayoutMode.Auto
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - d_c_d_c_line:
                            Control: Label
                            Properties:
                              Text: ="Line"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                              Width: =Parent.Width / 10
                              X: =d_c_d_c_shift.X + d_c_d_c_shift.Width
                        - d_c_d_c_shift:
                            Control: Label
                            Properties:
                              Text: ="Shift"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =0.5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =d_c_d_c_line.Size * 0.95
                              Width: =(Parent.Width / 10) * 0.5
                        - d_c_d_c_time:
                            Control: Label
                            Properties:
                              Text: ="Time"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                              Width: =Parent.Width / 10
                              X: =d_c_d_c_shift.X + d_c_d_c_shift.Width
                        - d_c_d_c_catalog:
                            Control: Label
                            Properties:
                              Text: ="Catalog"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                              Width: =Parent.Width / 10
                              X: =d_c_d_c_line.X + d_c_d_c_line.Width * 1
                        - d_c_d_c_lot:
                            Control: Label
                            Properties:
                              Text: ="Lot"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                              Width: =Parent.Width / 10
                              X: =d_c_d_c_line.X + d_c_d_c_line.Width * 2
                        - d_c_d_c_total:
                            Control: Label
                            Properties:
                              Text: ="Minutes Down"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 10
                              Width: =Parent.Width / 10
                              X: =d_c_d_c_reason.X + d_c_d_c_reason.Width
                        - d_c_d_c_reason:
                            Control: Label
                            Properties:
                              Text: ="Reason"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                              Width: =(Parent.Width / 10) * 1.5
                              X: =d_c_d_c_line.X + d_c_d_c_line.Width * 5
                        - d_c_d_c_comments:
                            Control: Label
                            Properties:
                              Text: ="Comments"
                              Align: =Align.Center
                              Color: =varColor5
                              FillPortions: =2.5
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =1
                              Size: =d_c_d_c_line.Size
                              Width: =(Parent.Width / 10) * 2
                              X: =d_c_d_c_total.X + d_c_d_c_total.Width
                    - d_c_d_gallery:
                        Control: Gallery
                        Variant: galleryVertical
                        Properties:
                          OnSelect: |-
                            =Set(varDowntimeID, d_c_d_gallery.Selected.id);
                            Set(varDowntimeMode, FormMode.Edit);
                            Navigate(Modify_Downtime);
                          Items: |-
                            =SortByColumns(
                                Filter(
                                    collectDowntime,
                                    started >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                    If(
                                        d_shift.Selected.Value = "All",
                                        shift = shift,
                                        shift = d_shift.Selected.Value
                                        ),
                                    If(
                                        d_line.Selected.Value = "All",
                                        line = line,
                                        line = d_line.Selected.Value
                                        ),
                                    If(
                                        IsBlank(d_reason.Selected.Downtime_Reason),
                                        reason = reason,
                                        reason = d_reason.Selected.Downtime_Reason
                                        )
                                ),
                                
                                Switch(
                                    d_sort_by.Selected.Value,
                                    "Line",
                                    "line",
                                    "Shift",
                                    "shift",
                                    "Time",
                                    "ended",
                                    "Minutes Down",
                                    "total"
                                ),
                                
                                Switch(
                                    d_sort_order.Selected.Value,
                                    "Ascending",
                                    SortOrder.Ascending,
                                    "Descending",
                                    SortOrder.Descending,
                                    SortOrder.Ascending
                                )

                            )
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DelayItemLoading: =true
                          FillPortions: =12
                          Layout: =Layout.Vertical
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LoadingSpinner: =LoadingSpinner.Data
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 10
                        Children:
                        - d_c_d_g_parent:
                            Control: GroupContainer
                            Variant: horizontalAutoLayoutContainer
                            Properties:
                              Height: =Parent.TemplateHeight - d_c_d_g_seperator.Height
                              LayoutMode: =LayoutMode.Auto
                              Width: =Parent.TemplateWidth
                            Children:
                            - d_c_d_g_line:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.line
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: =Self.Width / 8
                                  Width: =Parent.Width / 10
                                  X: =d_c_d_g_shift.X + d_c_d_g_shift.Width
                            - d_c_d_g_shift:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.shift
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =0.5
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: =d_c_d_g_line.Size
                                  Width: =(Parent.Width / 10) * 0.5
                            - d_c_d_g_time:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =1
                                  LayoutMinWidth: =1
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - d_c_d_g_t_start:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(d_c_d_gallery);
                                      Text: =TimeValue(ThisItem.started)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =Parent.Height
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Width / 8
                                      Width: =Parent.Width
                                      X: =d_c_d_g_shift.X + d_c_d_g_shift.Width
                                - d_c_d_g_t_end:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(d_c_d_gallery);
                                      Text: =TimeValue(ThisItem.ended)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =Parent.Height
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Width / 8
                                      Width: =Parent.Width
                                      X: =d_c_d_g_shift.X + d_c_d_g_shift.Width
                            - d_c_d_g_catalog:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.catalog
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: =Self.Width / 12
                                  Width: =Parent.Width / 10
                                  X: =d_c_d_g_line.X + d_c_d_g_line.Width * 1
                            - d_c_d_g_lot:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.lot
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: =Self.Width / 12
                                  Width: =Parent.Width / 10
                                  X: =d_c_d_g_line.X + d_c_d_g_line.Width * 2
                            - d_c_d_g_total:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.total
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: =Self.Width / 8
                                  Width: =Parent.Width / 10
                                  X: =d_c_d_g_reason.X + d_c_d_g_reason.Width
                            - d_c_d_g_reason:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.reason
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Size: |-
                                    =If(
                                        Len(Self.Text) <= 20,
                                        Self.Width / 12,
                                        Self.Width / (Len(Self.Text)*0.50)
                                    )
                                  Width: =(Parent.Width / 10) * 1.5
                                  X: =d_c_d_g_line.X + d_c_d_g_line.Width * 5
                            - d_c_d_g_comments:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(d_c_d_gallery);
                                  Text: =ThisItem.comments
                                  Align: =Align.Center
                                  Color: =varColor0
                                  FillPortions: =2.5
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =1
                                  Overflow: =Overflow.Scroll
                                  Size: =d_c_d_g_catalog.Size
                                  Width: =(Parent.Width / 10) * 2
                                  X: =d_c_d_g_total.X + d_c_d_g_total.Width
                        - d_c_d_g_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Select(Parent)
                              Fill: =varColor1
                              Height: =Parent.TemplateHeight * 0.025
                              Width: =Parent.Width
                              Y: =Parent.TemplateHeight - Self.Height
