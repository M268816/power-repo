- pLayout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Fill: =gblTheme.Background
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
    Children:
    - pCollect:
        Control: Classic/Button
        Properties:
          OnSelect: |-
            =/*Start*/
            Patch(recPopups,First(recPopups),{Visible: true, Value: 10, Display_Text: "Loading"});

            /*Collect Production*/
            Patch(recPopups,First(recPopups),{Value: 20, Display_Text: "Collecting Production Data"});
            ClearCollect(colProduction,
                ForAll(
                    Filter(Production,
                        Hour_Ending <= DateAdd(pDate.SelectedDate, 23, TimeUnit.Hours),
                        Hour_Starting >= DateAdd(pDate.SelectedDate, -1, TimeUnit.Hours)
                    ),
                    {
                        Id: Value(ThisRecord.ID),
                        Shift: Text(ThisRecord.Shift_Letter),
                        Line: Text(ThisRecord.Line.Value),
                        Lot: Text(ThisRecord.Lot),
                        Catalog: Text(ThisRecord.Catalog),
                        Size: Text(ThisRecord.Size),
                        Hour_Ending: DateTimeValue(ThisRecord.Hour_Ending),
                        Hour_Starting: DateTimeValue(ThisRecord.Hour_Starting),
                        Goal: Value(ThisRecord.Hourly_Goal),
                        Amount_Built: Value(ThisRecord.Amount_Built),
                        Unit_Starting: Value(ThisRecord.Unit_Starting),
                        Unit_Ending: Value(ThisRecord.Unit_Ending),
                        Reject_Llabels: Value(ThisRecord.Reject_Labels),
                        Reject_Cartridges: Value(ThisRecord.Reject_Cartridges),
                        Reject_Units: Value(ThisRecord.Reject_Units),
                        QA_Units: Value(ThisRecord.QA_Units)
                    }
                )
            );

            /*Collect Downtime*/
            Patch(recPopups,First(recPopups),{Value: 30, Display_Text: "Collecting Downtime Data"});
            ClearCollect(colDowntime,
                ForAll(
                    Filter(Downtime,
                        Ended <= DateAdd(pDate.SelectedDate, 23, TimeUnit.Hours),
                        Started >= DateAdd(pDate.SelectedDate, -1, TimeUnit.Hours)
                    ),
                    {
                        Id: Value(ThisRecord.ID),
                        Shift: Text(ThisRecord.Shift_Letter),
                        Line: Text(ThisRecord.Line.Value),
                        Lot: Text(ThisRecord.Lot),
                        Catalog: Text(ThisRecord.Catalog),
                        Size: Text(ThisRecord.Size),
                        started: DateTimeValue(ThisRecord.Started),
                        Ended: DateTimeValue(ThisRecord.Ended),
                        Reason: Text(ThisRecord.Reason.Value),
                        Total: Value(ThisRecord.Total_Downtime),
                        Comments: Text(ThisRecord.Comments)
                    }
                )
            );

            Select(pUpdate);
          Text: ="collect"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - pSequentialCollect:
        Control: Timer
        Properties:
          Text: =Text(Time(0, 0, Self.Duration/1000 - Self.Value/1000), "hh:mm:ss")
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - pUpdate:
        Control: Classic/Button
        Properties:
          OnSelect: "=/*Update Code*/\nPatch(recPopups,First(recPopups),{Visible: true, Value: 40, Display_Text:\"Updating\"});\n\n/*Default Filters*/\nPatch(recPopups,First(recPopups),{Value: 50, Display_Text:\"Updating\"});\nUpdateContext({\n    /*Production*/\n    locProduction:\n        Filter(\n            colProduction,\n            Hour_Starting >= DateAdd(pDate.SelectedDate, -1, TimeUnit.Hours),\n            Hour_Ending <= DateAdd(pDate.SelectedDate, 23, TimeUnit.Hours),\n            If(\n                pShift.Selected.Value = \"All\",\n                Shift = Shift,\n                Shift = pShift.Selected.Value\n            )\n        ),\n\n    /*Downtime*/\n    locDowntime:\n        Filter(\n            colDowntime,\n            Started >= DateAdd(pDate.SelectedDate, -1, TimeUnit.Hours),\n            Ended <= DateAdd(pDate.SelectedDate, 23, TimeUnit.Hours),\n            If(\n                pShift.Selected.Value = \"All\",\n                Shift = Shift,\n                Shift = pShift.Selected.Value\n            )\n        )\n\n});\n\nPatch(recPopups,First(recPopups),{Value: 60, Display_Text:\"Collecting Performance Metrics\"});\n/*Create a collection by itterating through the Line schema*/\nClear(colPerformance);\nForAll(\n    gblLists.Lines,\n    \n    /*Collect data for Graphs*/\n    Collect(\n        colPerformance,\n        {\n            /*Enter each Line*/\n            Line: Value,\n\n            Amount_Built:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built\n                        ),\n                        0\n                    ),\n                    0\n                ),\n\n            Goal_Sum:\n                IfError(\n                    Round(            \n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Goal\n                        ),\n                        0\n                    ),\n                    0\n                ),\n\n            Goal:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built\n                        ) /\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Goal\n                        ) * 100,\n                        0\n                    ),\n                    0\n                ),\n            \n            Downtime_Sum:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(\n                                locDowntime,\n                                Line = Value\n                            ),\n                            Total\n                        ),\n                        0\n                    ),\n                    0\n                ),\n\n            Downtime:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(\n                                locDowntime,\n                                Line = Value\n                            ),\n                            Total\n                        ) /\n                        If(pShift.Selected.Value = \"All\", 1440 , 480) *\n                        100,\n                        0\n                    ),\n                    0\n                ),\n\n            Yield_Sum:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built + Reject_Units + Reject_Cartridges\n                        ),\n                        0\n                    ),\n                    0\n                ),\n\n            Yield_Total:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built\n                        ),\n                        0\n                    ),\n                    0\n                ),\n            \n            Yield:\n                IfError(\n                    Round(\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built\n                        ) /\n                        Sum(\n                            Filter(locProduction, Line = Value),\n                            Amount_Built + Reject_Units + Reject_Cartridges\n                        ) * 100,\n                        0\n                    ),\n                    0\n                ),\n            \n            Performance:\n                /*Goal*/\n                (IfError(\n                    Sum(\n                        Filter(locProduction, Line = Value),\n                        Amount_Built\n                    ) /\n                    Sum(\n                        Filter(locProduction, Line = Value),\n                        Goal\n                    ),\n                    0\n                )) *\n                /*downtime*/\n                (IfError(\n                    1-(Sum(\n                        Filter(\n                            locDowntime,\n                            Line = Value\n                        ),\n                        Total\n                    ) /\n                    If(pShift.Selected.Value = \"All\", 1440 , 480)),\n                    0\n                )) *\n                /*yield*/\n                (IfError(\n                    Sum(\n                        Filter(locProduction, Line = Value),\n                        Amount_Built\n                    ) /\n                    Sum(\n                        Filter(locProduction, Line = Value),\n                        Amount_Built + Reject_Units + Reject_Cartridges\n                    ),\n                    0\n                )) * 100\n        }\n    )\n);\n\n/*Clear for garbage collection*/\nUpdateContext({\n    locProduction: Blank(),\n    locDowntime: Blank()\n});\n\nPatch(recPopups,First(recPopups),{Visible: false, Value: -1, Display_Text:\"Finishing Up\", Popup: \"\"});"
          Text: ="update"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - pHeader:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =gblTheme.Primary
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =gblPadding
          LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =gblPadding
          PaddingLeft: =gblPadding
          PaddingRight: =gblPadding
          PaddingTop: =gblPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - pLogo:
            Control: Image
            Properties:
              Image: =If(gblTheme.Mode = "Light", logo1, logo2)
              LayoutMinHeight: =10
              Width: =pNavigationTitle.Width
        - pTitle:
            Control: Label
            Properties:
              Text: ="App Title"
              Color: =gblTheme.Text_Light
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Size: =Self.Height / 3
        - pMode:
            Control: Classic/Icon
            Variant: HalfFilledCircle
            Properties:
              OnSelect: =If(gblTheme.Mode = "Light", Set(gblTheme, gblThemeMode.Dark),Set(gblTheme, gblThemeMode.Light))
              Color: =gblTheme.Text_On_Dark
              Height: =10
              HoverColor: =gblTheme.Text_On_Light
              Icon: =Icon.HalfFilledCircle
              LayoutMinHeight: =10
              PaddingBottom: =4
              PaddingLeft: =4
              PaddingRight: =4
              PaddingTop: =4
              Rotation: =If(gblTheme.Mode = "Light", 0, 180)
              Width: =Self.Height
        - pBugs:
            Control: Image
            Properties:
              OnSelect: =Navigate(Bugs,ScreenTransition.Fade)
              Image: =gblIcons.Bug
              HoverFill: =gblTheme.Pri_Complement
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
        - pUserImg:
            Control: Image
            Properties:
              Image: =User().Image
              Fill: =RGBA(0, 0, 0, 1)
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
    - pMain:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =11
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - pNavigation:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =gblTheme.Midground
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gblPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gblPadding
              PaddingLeft: =gblPadding
              PaddingRight: =gblPadding
              PaddingTop: =gblPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - pNavigationTitle:
                Control: Label
                Properties:
                  Text: =App.ActiveScreen.Name
                  Align: =Align.Center
                  Color: =gblTheme.Text_On_Light
                  LayoutMinWidth: =10
                  Size: =Self.Height / 3
            - pNavigationSeparator:
                Control: Rectangle
                Properties:
                  Fill: =gblTheme.Pri_Complement
                  Height: =Round(gblPadding/2,0)
                  LayoutMinWidth: =10
                  Width: =10
            - pNavigationGallery:
                Control: Gallery
                Variant: galleryVertical
                Properties:
                  Items: =colNavigation
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DelayItemLoading: =true
                  FillPortions: =4
                  Layout: =Layout.Vertical
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LoadingSpinner: =LoadingSpinner.Data
                  TemplatePadding: =gblPadding
                  TemplateSize: =30
                Children:
                - pNavigationGalleryButton:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Navigate(ThisItem.Screen,ScreenTransition.Fade)
                      Text: =ThisItem.Label
                      BorderThickness: =1
                      Color: =gblTheme.Text_Dark
                      DisplayMode: =If(App.ActiveScreen.Name = ThisItem.Screen.Name, DisplayMode.Disabled, DisplayMode.Edit)
                      Fill: =gblTheme.Accent
                      FontWeight: =FontWeight.Normal
                      Height: =Parent.TemplateHeight
                      RadiusBottomLeft: =100
                      RadiusBottomRight: =100
                      RadiusTopLeft: =100
                      RadiusTopRight: =100
                      Size: =Self.Height / 4
                      Width: =Parent.TemplateWidth
            - pNavigationFooter:
                Control: Label
                Properties:
                  Text: |-
                    =
                    "MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                    &Char(13)&Char(13)&
                    "© 2025 EMD Millipore. All rights reserved."
                  Align: =Align.Center
                  Color: =gblTheme.Text_On_Light
                  FillPortions: =1
                  Height: =200
                  LayoutMinWidth: =10
                  Size: =Self.Height / 24
                  VerticalAlign: =VerticalAlign.Bottom
        - pFilterParent:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =gblTheme.Background
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gblPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gblPadding
              PaddingLeft: =gblPadding
              PaddingRight: =gblPadding
              PaddingTop: =gblPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - pFilters:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =gblTheme.Foreground
                  Height: =Parent.Height * 0.5
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutGap: =gblPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =gblPadding
                  PaddingLeft: =gblPadding
                  PaddingRight: =gblPadding
                Children:
                - pFilterTitle:
                    Control: Label
                    Properties:
                      Text: ="Filters"
                      Align: =Align.Center
                      AlignInContainer: =AlignInContainer.Center
                      Color: =gblTheme.Text_Light
                      Fill: =gblTheme.Secondary
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                      Width: =Parent.Width
                - pDateLabel:
                    Control: Label
                    Properties:
                      Text: ="Date"
                      Align: =Align.Center
                      Color: =gblTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                - pDate:
                    Control: Classic/DatePicker
                    Properties:
                      BorderThickness: =1
                      Color: =gblTheme.Text_On_Light
                      Fill: =gblTheme.Background
                      FocusedBorderThickness: =1
                      IconBackground: =gblTheme.Sec_Complement
                      IconFill: =gblTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 5
                - pFilterSeparator0:
                    Control: Rectangle
                    Properties:
                      Fill: =gblTheme.Pri_Complement
                      Height: =Round(gblPadding/2,0)
                      LayoutMinWidth: =10
                      Width: =10
                - pShiftLabel:
                    Control: Label
                    Properties:
                      Text: ="Shift"
                      Align: =Align.Center
                      Color: =gblTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                - pShift:
                    Control: Classic/DropDown
                    Properties:
                      OnChange: =Select(pUpdate)
                      Items: =gblLists.Shifts
                      ChevronBackground: =gblTheme.Sec_Complement
                      ChevronFill: =gblTheme.Text_Dark
                      Color: =gblTheme.Text_On_Light
                      Fill: =gblTheme.Background
                      LayoutMinWidth: =10
                      Size: =Self.Height / 5
                - pFilterSeparator1:
                    Control: Rectangle
                    Properties:
                      Fill: =gblTheme.Pri_Complement
                      Height: =Round(gblPadding/2,0)
                      LayoutMinWidth: =10
                      Width: =10
        - pBody:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =If(App.Width < Index(App.SizeBreakpoints,3).Value, 6, 10)
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gblPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              LayoutOverflowY: =LayoutOverflow.Scroll
              PaddingBottom: =gblPadding
              PaddingLeft: =gblPadding
              PaddingRight: =gblPadding
              PaddingTop: =gblPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - pGallery:
                Control: Gallery
                Variant: galleryHorizontal
                Properties:
                  Items: =["XL1","SSC","XL2","SSC2","XL3","XLT","XL4","XLT2","XL5","XLT3"]
                  WrapCount: =2
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DelayItemLoading: =true
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LoadingSpinner: =LoadingSpinner.Data
                  ShowScrollbar: =false
                  TemplatePadding: =0
                  TemplateSize: =Self.Width / 5
                Children:
                - p_t_g_spacer:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      DropShadow: =DropShadow.None
                      Height: =Parent.TemplateHeight
                      PaddingBottom: =Home.Width * 0.005
                      PaddingLeft: =Home.Width * 0.005
                      PaddingRight: =Home.Width * 0.005
                      PaddingTop: =Home.Width * 0.005
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
                      Width: =Parent.TemplateWidth
                      X: =Self.Width - Self.Width
                      Y: =Self.Height - Self.Height
                    Children:
                    - p_t_g_card:
                        Control: GroupContainer
                        Variant: verticalAutoLayoutContainer
                        Properties:
                          BorderColor: =varColor2
                          DropShadow: =DropShadow.Semilight
                          Fill: =gblTheme.Foreground
                          Height: =Parent.Height - Parent.PaddingTop
                          LayoutAlignItems: =LayoutAlignItems.Stretch
                          LayoutDirection: =LayoutDirection.Vertical
                          LayoutGap: =gblPadding
                          LayoutMode: =LayoutMode.Auto
                          PaddingBottom: =Self.LayoutGap
                          PaddingLeft: =gblPadding
                          PaddingRight: =gblPadding
                          RadiusBottomLeft: =8
                          RadiusBottomRight: =8
                          RadiusTopLeft: =8
                          RadiusTopRight: =8
                          Width: =Parent.Width - Parent.PaddingRight
                          X: =Parent.Width/2 - Self.Width/2
                          Y: =Parent.Height/2 - Self.Height/2
                        Children:
                        - p_t_g_h_title:
                            Control: Label
                            Properties:
                              Text: =ThisItem.Value
                              Align: =Align.Center
                              AlignInContainer: =AlignInContainer.Center
                              Color: =gblTheme.Text_Light
                              Fill: =gblTheme.Secondary
                              Font: =Font.Verdana
                              Height: =bTitle.Height
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              Size: =Self.Height / 2
                              Width: =Parent.Width
                        - p_t_g_p_graph:
                            Control: Image
                            Properties:
                              Image: |-
                                ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" &
                                With({thisData: Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Performance)},
                                    EncodeUrl(
                                        "{
                                            type: 'radialGauge',
                                            data: {
                                                datasets: [{
                                                    data: ["& thisData &"],
                                                    backgroundColor: getGradientFillHelper('horizontal', [
                                                        '"& gblTheme.Chart_Blue &"',
                                                        '"& gblTheme.Chart_Blue &"',
                                                        '"& gblTheme.Chart_Blue &"',
                                                        '"& gblTheme.Chart_Red &"',
                                                        '"& gblTheme.Chart_Red &"',
                                                        '"& gblTheme.Chart_Red &"'
                                                    ]),
                                                }]
                                            },
                                            options: {
                                                domain: [0, "& If(Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Performance) <= 100, 100, Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Performance)) &"],
                                                trackColor: '"& gblTheme.Chart_White &"', 
                                                centerPercentage: 90,
                                                centerArea: {
                                                    text: (val) => val + '%',
                                                    fontColor: '"& gblTheme.Chart_Black &"'
                                                },
                                            }
                                        }"
                                    )
                                )
                              AlignInContainer: =AlignInContainer.Stretch
                              Fill: =gblTheme.Foreground
                              FillPortions: =2
                              Height: =Parent.Height * 0.30
                              HoverFill: =Self.Fill
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              Width: =Parent.Width / 2
                              X: =Parent.Width /2 - Self.Width/2
                              Y: =1
                        - p_t_g_goal:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              DropShadow: =DropShadow.Semilight
                              Fill: =gblTheme.Sec_Complement
                              Height: =10
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                              Width: =Self.Height
                              X: =Parent.Width/2 - Self.Width/2
                              Y: =1
                            Children:
                            - p_t_g_g_title:
                                Control: Label
                                Properties:
                                  Text: ="Goal"
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0.2)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width
                            - p_t_g_g_value:
                                Control: Label
                                Properties:
                                  Text: |-
                                    =Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Goal) & "%
                                    "
                                    & Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Amount_Built) &" / "
                                    & Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Goal_Sum)
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width
                        - p_t_g_downtime:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              DropShadow: =DropShadow.Semilight
                              Fill: =gblTheme.Sec_Complement
                              Height: =10
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                              Width: =Self.Height
                              X: =Parent.Width/2 - Self.Width/2
                              Y: =p_t_g_goal.Y + p_t_g_goal.Height + Parent.Width * 0.05
                            Children:
                            - p_t_g_d_title:
                                Control: Label
                                Properties:
                                  Text: ="Downtime"
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0.2)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width
                            - p_t_g_d_value:
                                Control: Label
                                Properties:
                                  Text: |-
                                    =LookUp(colPerformance, Line = p_t_g_h_title.Text).Downtime & "%
                                    " &
                                    LookUp(colPerformance, Line = p_t_g_h_title.Text).Downtime_Sum & " Minutes"
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width
                        - p_t_g_yield:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              DropShadow: =DropShadow.Semilight
                              Fill: =gblTheme.Sec_Complement
                              Height: =10
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                              Width: =Self.Height
                              X: =Parent.Width/2 - Self.Width/2
                              Y: =1
                            Children:
                            - p_t_g_y_title:
                                Control: Label
                                Properties:
                                  Text: ="Yield"
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0.2)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width
                            - p_t_g_y_value:
                                Control: Label
                                Properties:
                                  Text: |-
                                    =Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Yield) & "%
                                    " &
                                    Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Yield_Total) & " / " &
                                    Value(LookUp(colPerformance, Line = p_t_g_h_title.Text ).Yield_Sum)
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height * 0.10
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 5
                                  Width: =Parent.Width