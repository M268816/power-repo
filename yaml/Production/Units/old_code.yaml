- Units:
    Control: Screen
    Properties:
      OnVisible: |-
        =UpdateContext({
            locPadding: Self.Width * 0.005,
            locPopups: {Visible: false, Value: Blank()},
            locError: false,
            locErrorType: Blank(),
            locNowHour: Hour(Now()),
            locNowDay: Today()
            });
      Fill: =If(u_m_form.Mode = FormMode.New, varColor5, varColor4)
    Children:
    - u_popup_parent:
        Control: GroupContainer
        Variant: manualLayoutContainer
        Properties:
          Fill: =RGBA(0, 0, 0, 0.5)
          Height: =Parent.Height
          Visible: =false
          Width: =Parent.Width
          X: =1-1
          Y: =1-1
        Children:
        - u_error_unit:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "unit"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_n_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_n_text.Height
            - u_e_n_text:
                Control: Label
                Properties:
                  Text: ="Ending Unit numbers must be greater then Starting Unit numbers"
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_sum:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "sum"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_s_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_s_text.Height
            - u_e_s_text:
                Control: Label
                Properties:
                  Text: ="Label Rejects, Unit Rejects and QA units must not equal greater than units built."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_radio:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "radio"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_r_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_r_text.Height
            - u_e_r_text:
                Control: Label
                Properties:
                  Text: ="Quality and Safety incidents must be reported as yes or no."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_time:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "time"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_t_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_t_text.Height
            - u_e_t_text:
                Control: Label
                Properties:
                  Text: ="Hour ended must be later than hour started."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_editor:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "editor"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_e_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_e_text.Height
            - u_e_e_text:
                Control: Label
                Properties:
                  Text: ="Editing an entry requires records of the editor and the reason."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_goal:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "goal"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_g_no_reason:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                    SubmitForm(u_m_form);
                    Navigate(Hourly, ScreenTransition.UnCover);
                  Text: ="Missed goal without a loss time incident."
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 5
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 2
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_g_downtime.Height + u_e_g_downtime.Y + Parent.Width * 0.03
            - u_e_g_downtime:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                    Set(varForceDowntime, true);
                    Set(varDowntimeMode,FormMode.New);
                    SubmitForm(u_m_form);
                    Navigate(Downtime_Screen);
                  Text: ="Record Downtime Now"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 5
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 2
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_g_text.Height
            - u_e_g_text:
                Control: Label
                Properties:
                  Text: |-
                    ="Detected a missed hourly goal, downtime entries also are not present within this hour.

                    Please select an option below."
                  Align: =Align.Center
                  Height: '=Parent.Height * 0.50 '
                  PaddingLeft: =Parent.Width* 0.05
                  PaddingRight: =Parent.Width* 0.05
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_dupe:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "dupe"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_d_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_d_text.Height
            - u_e_d_text:
                Control: Label
                Properties:
                  Text: ="Duplicate entry found for this hour. Either return to the main screen and edit or have a lead or supervisor delete the other entry."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_missing:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "missing"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_m_no_reason:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =SubmitForm(u_m_form);
                    UpdateContext({locError: false});
                    Navigate(Hourly);
                  Text: =If(varFoundTime, "Submit this entry, skipping the previous hour entry." , "Submit this entry, the previously missed hour has no loss time incident.")
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 5
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Size: =Self.Width / 22
                  Width: =Parent.Width / 2
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_m_downtime.Height + u_e_m_downtime.Y + Parent.Width * 0.02
            - u_e_m_downtime:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =SubmitForm(u_m_form);
                    UpdateContext({locError: false});
                    Set(varForceDowntime, true);
                    Navigate(Downtime_Screen);
                  Text: =If(varFoundTime, "Downtime Reason Found!" , "Submit this entry, then record downtime for the missed hour now.")
                  Color: =varColor0
                  DisplayMode: =If( varFoundTime, DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  Height: =Parent.Height / 5
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Size: =Self.Width / 22
                  Width: =Parent.Width / 2
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_m_return.Height + u_e_m_return.Y + Parent.Width * 0.02
            - u_e_m_return:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Return to current entry and correct times"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 5
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Size: =Self.Width / 22
                  Width: =Parent.Width / 2
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_m_text.Height
            - u_e_m_text:
                Control: Label
                Properties:
                  Text: |-
                    ="Detected a missed hourly entry.
                    Please select an option below."
                  Align: =Align.Center
                  Height: =Parent.Height * 0.25
                  PaddingLeft: =Parent.Width* 0.05
                  PaddingRight: =Parent.Width* 0.05
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_timespan:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "timespan"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_ts_confirm:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError: false});
                  Text: ="Okay"
                  Color: =varColor0
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width / 2
                  Y: =u_e_ts_text.Height
            - u_e_ts_text:
                Control: Label
                Properties:
                  Text: ="Starting and Ending times may not span more than a single hour."
                  Align: =Align.Center
                  Height: =Parent.Height / 1.5
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
        - u_error_delete:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              BorderColor: =Color.Red
              BorderThickness: =3
              DropShadow: =DropShadow.Regular
              Fill: =varColor4
              Height: =Parent.Height / 2
              RadiusBottomLeft: =8
              RadiusBottomRight: =8
              RadiusTopLeft: =8
              RadiusTopRight: =8
              Visible: =locPopups.Value = "delete"
              Width: =Parent.Width / 3
              X: =Parent.Width/2 - Self.Width/2
              Y: =Parent.Height/2 - Self.Height/2
            Children:
            - u_e_de_submit:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =RemoveIf(Production, ID = varSelectedUnitID);
                    ResetForm(u_form);
                    Reset(u_e_de_input);
                    UpdateContext({locError: false});
                    Navigate(Hourly);
                  Text: ="Delete"
                  Color: =varColor0
                  DisplayMode: =If(u_e_de_input.Text = Text(Year(Today())), DisplayMode.Edit, DisplayMode.Disabled)
                  Fill: =varColorAccent
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 + Parent.Width * 0.02
                  Y: =u_e_de_input.Height + u_e_de_input.Y + Parent.Width * 0.02
            - u_e_de_cancel:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =Reset(u_e_de_input);
                    UpdateContext({locError: false});
                  Text: ="Cancel"
                  Color: =varColor5
                  Fill: =varColorNo
                  Height: =Parent.Height / 8
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  Width: =Parent.Width / 3
                  X: =Parent.Width / 2 - Self.Width - Parent.Width * 0.02
                  Y: =u_e_de_input.Height + u_e_de_input.Y + Parent.Width * 0.02
            - u_e_de_text:
                Control: Label
                Properties:
                  Text: |-
                    ="You are about to permanently delete this record.
                    Please enter the password to continue."
                  Align: =Align.Center
                  Height: =Parent.Height * 0.50
                  Size: =Parent.Width / 26
                  Width: =Parent.Width
                  X: =1-1
                  Y: =1-1
            - u_e_de_input:
                Control: Classic/TextInput
                Properties:
                  Default: =Blank()
                  Align: =Align.Center
                  Mode: =TextMode.Password
                  Size: =Self.Width / 16
                  Width: =Parent.Width/2
                  X: =Parent.Width/2 - Self.Width/2
                  Y: =u_e_de_text.Y + u_e_de_text.Height + Parent.Width * 0.02
    - u_layout:
        Control: GroupContainer
        Variant: verticalAutoLayoutContainer
        Properties:
          DropShadow: =DropShadow.None
          Height: =Parent.Height
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutDirection: =LayoutDirection.Vertical
          LayoutGap: =
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
          Width: =Parent.Width
          X: =
        Children:
        - u_header:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =varColor1
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =locPadding*2
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =locPadding
              PaddingLeft: =locPadding
              PaddingRight: =locPadding
              PaddingTop: =locPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - u_collect:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =/*Start*/
                    UpdateContext({locLoading:{Visible: true, Value: 1, Text: "Loading"}});

                    /*Collect Production*/
                    UpdateContext({locLoading:{Visible: true, Value: 10, Text: "Collecting Production Data"}});

                    /*Collect Downtime*/
                    UpdateContext({locLoading:{Visible: true, Value: 20, Text: "Collecting Downtime Data"}});

                    /*Update*/
                    Select(u_update);
                  Text: ="collect"
                  FillPortions: =1
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Visible: =false
            - u_update:
                Control: Classic/Button
                Properties:
                  OnSelect: |
                    =

                    UpdateContext({locLoading:{Visible: true, Value: 30, Text: "Updating"}});
                    /*Update Code*/

                    UpdateContext({locLoading:{Visible: true, Value: 95, Text: "Finishing Up"}});
                    /*Garbage Collecting*/

                    /*End*/
                    UpdateContext({locLoading:{Visible: true, Value: 100, Text: "Completed"}});
                    UpdateContext({locLoading:{Visible: false, Value: -1, Text: "Not Loading"}});
                  Text: ="update"
                  FillPortions: =1
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Visible: =false
            - u_exit:
                Control: Image
                Properties:
                  OnSelect: =Select(u_collect);
                  Image: =gblSVG.Back
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =u_h_n_settings.X - Self.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - u_logo:
                Control: Image
                Properties:
                  Image: =LOGO_MSIG_SBlue_FIT_ALPHA
                  LayoutMinHeight: =10
                  Width: =Self.Height * 3
            - u_h_title:
                Control: Label
                Properties:
                  Text: |-
                    =If(u_form.Mode = FormMode.New, "Hour By Hour Entry", "Edit Hour By Hour Entry ID #" & varSelectedUnitID)
                  Align: =Align.Center
                  Color: =RGBA(255, 255, 255, 1)
                  Font: =Font.Verdana
                  Height: =Parent.Height
                  Size: =Self.Height / 2
                  Width: =Parent.Width
            - u_h_b_submit:
                Control: Classic/Icon
                Variant: Check
                Properties:
                  OnSelect: "=/*Super Hacknied variable to check for overlapping Time, clear the collection*/\r\nClear(hackFoundTime);\r\n\r\n/*Super Hacknied time check*/\r\nForAll(\r\n    /*For all downtime data, filtered by current line*/\r\n    Filter(collectLocalDowntimeData, Line = varProductionLine),\r\n    If(\r\n        Or(\r\n            /*If the selected times are between recorded times*/\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >=\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <\r\n                TimeValue(Ended)\r\n            ),\r\n            /*Or if the the selected end time is between the recorded start and end time */\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <=\r\n                DateTimeValue(Ended)\r\n            ),\r\n            /*Or if the selected start time is between the recorded start and end time*/\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >=\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <\r\n                DateTimeValue(Ended)\r\n            ),\r\n            /*Or the selected times are encompassing a recorded time*/\r\n            And(\r\n                /*Selected Start Time*/\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                /*Less Than*/\r\n                <\r\n                /*Recorded Start Time*/\r\n                DateTimeValue(Started),\r\n                /*And*/\r\n                /*Selected End Time*/\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                /*Greater Than*/\r\n                >\r\n                /*Recorded End Time*/\r\n                DateTimeValue(Ended)\r\n            )\r\n        ),\r\n        \r\n        /*collect a true statement*/\r\n        Collect(hackFoundTime, {set: true}),\r\n        \r\n        /*collect a false statement*/\r\n        Collect(hackFoundTime, {set: false})\r\n    )\r\n);\r\n\r\n/*If anything in the hack is true then return true*/\r\nIf(true in hackFoundTime, Set(varFoundTime, true), Set(varFoundTime, false));\r\n\r\n/*Check for entry errors*/\r\nIf(\r\n    /*If in edit mode editor person and reason is needed*/\r\n    And(u_m_form.Mode = FormMode.Edit, Or(u_m_f_ep_value.Selected.DisplayName=Blank(), u_m_f_er_value.Text = \"\")),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"editor\"});,\r\n    \r\n    /*Hour ended must be later than hour started*/\r\n    DateTime(\r\n        Year(u_m_f_he_date.SelectedDate),\r\n        Month(u_m_f_he_date.SelectedDate),\r\n        Day(u_m_f_he_date.SelectedDate),\r\n        If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n        Value(u_m_f_he_minute.Selected.Value),\r\n        0\r\n    )\r\n    <=\r\n    DateTime(\r\n        Year(u_m_f_hs_date.SelectedDate),\r\n        Month(u_m_f_hs_date.SelectedDate),\r\n        Day(u_m_f_hs_date.SelectedDate),\r\n        If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n        Value(u_m_f_hs_minute.Selected.Value),\r\n        0\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"time\"});,\r\n\r\n    /*If Quality or Safety not Selected, show error*/\r\n    Or(u_m_f_s_radio.Selected.Value = Blank(),u_m_f_s_radio.Selected.Value = Blank()),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"radio\"});,\r\n\r\n    /*If times selected span more than 1 hour*/\r\n    DateDiff(\r\n        /*Start Date*/\r\n        DateTime(\r\n            5,5,5,\r\n            If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n            Value(u_m_f_hs_minute.Selected.Value),\r\n            0\r\n        ),\r\n        /*End Date*/\r\n        DateTime(\r\n            5,5,5,\r\n            If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n            Value(u_m_f_he_minute.Selected.Value),\r\n            0\r\n        ),\r\n        /*If diference is greater than 1 hour*/\r\n        TimeUnit.Hours) > 1,\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"timespan\"});,\r\n\r\n    /*If the ending number is less than the starting number or any entry is zero*/\r\n    Value(u_m_f_ue_value.Text) < Value(u_m_f_us_value.Text), //, Value(u_m_f_ue_value.Text) = 0, Value(u_m_f_us_value.Text) = 0),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"unit\"});,\r\n    \r\n    /*If the sum of rejects and QAs, exceeds the sum of obtained units*/\r\n    Sum(Value(u_m_f_la_value.Text), Value(u_m_f_u_value.Text), Value(u_m_f_q_value.Text)) > Sum(Value(u_m_f_ue_value.Text), -Value(u_m_f_us_value.Text), 1),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"sum\"});,\r\n\r\n    /*If the start and end times already exist, aka duplicate entry*/\r\n    And(\r\n        u_m_form.Mode = FormMode.New,\r\n        !IsBlank(LookUp(\r\n            collectLocalUnitData,\r\n            DateTimeValue(Hour_Starting) = \r\n            DateTime(\r\n                Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                +\r\n                Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n                Value(u_m_f_hs_minute.Selected.Value),\r\n                0\r\n            )\r\n        )),\r\n        !IsBlank(LookUp(\r\n            collectLocalUnitData,\r\n            DateTimeValue(Hour_Ending) = \r\n            DateTime(\r\n                Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                +\r\n                Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n                Value(u_m_f_he_minute.Selected.Value),\r\n                0\r\n            )\r\n        ))\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"dupe\"});,\r\n\r\n    /*If youre submitting a new entry, the hacknied check does not find a downtime reason, and the actual units built is less than the labor hour goal*/\r\n    And(\r\n        varFoundTime = false,\r\n        u_m_form.Mode = FormMode.New,\r\n        (Value(u_m_f_ue_value.Text) - Value(u_m_f_us_value.Text) + 1) - Sum(Value(u_m_f_q_value.Text),Value(u_m_f_la_value.Text),Value(u_m_f_u_value.Text)) < varGoalsPerLaborHours\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"goal\"});,\r\n\r\n    /*If the last hour has no entry*/\r\n    IsBlank(LookUp(\r\n        collectLocalUnitData,\r\n        DateTimeValue(Hour_Ending) = \r\n        DateTimeValue(\r\n            DateAdd(\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),\r\n                    Month(u_m_f_he_date.SelectedDate),\r\n                    Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n                    Value(u_m_f_he_minute.Selected.Value),\r\n                    0\r\n                ),\r\n                -1,\r\n                TimeUnit.Hours\r\n            )\r\n        )\r\n    )),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"missing\"});,\r\n    \r\n    /*Otherwise, the error type is blank and submit the form*/\r\n    UpdateContext({locErrorType: Blank()});\r\n    SubmitForm(u_m_form);\r\n \r\n);\r\n\r\n/*Followup code is in the u_m_form submit success/failure perameters*/"
                  Color: =varColorYes
                  Height: =Parent.Height * 0.75
                  Icon: =Icon.Check
                  Width: =Self.Height
                  X: =Parent.Width - Self.Width - Parent.Width * 0.05
                  Y: =Parent.Height/2 - Self.Height/2
            - u_h_b_cancel:
                Control: Classic/Icon
                Variant: Cancel
                Properties:
                  OnSelect: =ResetForm(u_m_form);
                  Color: =varColorNo
                  Height: =Parent.Height * 0.75
                  Icon: =Icon.Cancel
                  Width: =Self.Height
                  X: =u_h_b_submit.X -Self.Width - Parent.Width * 0.05
                  Y: =Parent.Height/2 - Self.Height/2
            - u_h_b_exit:
                Control: Classic/Icon
                Variant: ChevronLeft
                Properties:
                  OnSelect: =Navigate(Hourly, ScreenTransition.UnCover);
                  Color: =varColorAccent
                  Height: =Parent.Height * 0.75
                  Icon: =Icon.ChevronLeft
                  Width: =Self.Height
                  X: =Parent.Width * 0.02
                  Y: =Parent.Height/2 - Self.Height/2
            - u_h_b_delete:
                Control: Classic/Icon
                Variant: Cancel
                Properties:
                  OnSelect: |-
                    =UpdateContext({locError:true, locErrorType: "delete"});
                  Color: =varColorAccent
                  Height: =Parent.Height * 0.75
                  Icon: =Icon.Trash
                  Visible: =u_m_form.Mode = FormMode.Edit
                  Width: =Self.Height
                  X: =u_h_b_cancel.X -Self.Width - Parent.Width * 0.05
                  Y: =Parent.Height/2 - Self.Height/2
            - u_h_b_exit_title:
                Control: Label
                Properties:
                  OnSelect: =Select(u_h_b_exit)
                  Text: ="Return to Overview"
                  Color: =varColorAccent
                  Font: =Font.Verdana
                  Height: =u_h_b_exit.Height
                  Size: =Self.Width / 9
                  Width: =Parent.Width * 0.08
                  X: =u_h_b_exit.X + u_h_b_exit.Width
                  Y: =u_h_b_exit.Y
            - u_submit:
                Control: Image
                Properties:
                  OnSelect: "=/*Super Hacknied variable to check for overlapping Time, clear the collection*/\r\nClear(hackFoundTime);\r\n\r\n/*Super Hacknied time check*/\r\nForAll(\r\n    /*For all downtime data, filtered by current line*/\r\n    Filter(collectLocalDowntimeData, Line = varProductionLine),\r\n    If(\r\n        Or(\r\n            /*If the selected times are between recorded times*/\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >=\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <\r\n                TimeValue(Ended)\r\n            ),\r\n            /*Or if the the selected end time is between the recorded start and end time */\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <=\r\n                DateTimeValue(Ended)\r\n            ),\r\n            /*Or if the selected start time is between the recorded start and end time*/\r\n            And(\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                >=\r\n                DateTimeValue(Started),\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                <\r\n                DateTimeValue(Ended)\r\n            ),\r\n            /*Or the selected times are encompassing a recorded time*/\r\n            And(\r\n                /*Selected Start Time*/\r\n                DateTime(\r\n                    Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                    If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_hs_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_hs_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                /*Less Than*/\r\n                <\r\n                /*Recorded Start Time*/\r\n                DateTimeValue(Started),\r\n                /*And*/\r\n                /*Selected End Time*/\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.SelectedText.Value), 12),\r\n                    Value(u_m_f_he_minute.SelectedText.Value),\r\n                    0\r\n                )\r\n                /*Greater Than*/\r\n                >\r\n                /*Recorded End Time*/\r\n                DateTimeValue(Ended)\r\n            )\r\n        ),\r\n        \r\n        /*collect a true statement*/\r\n        Collect(hackFoundTime, {set: true}),\r\n        \r\n        /*collect a false statement*/\r\n        Collect(hackFoundTime, {set: false})\r\n    )\r\n);\r\n\r\n/*If anything in the hack is true then return true*/\r\nIf(true in hackFoundTime, Set(varFoundTime, true), Set(varFoundTime, false));\r\n\r\n/*Check for entry errors*/\r\nIf(\r\n    /*If in edit mode editor person and reason is needed*/\r\n    And(u_m_form.Mode = FormMode.Edit, Or(u_m_f_ep_value.Selected.DisplayName=Blank(), u_m_f_er_value.Text = \"\")),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"editor\"});,\r\n    \r\n    /*Hour ended must be later than hour started*/\r\n    DateTime(\r\n        Year(u_m_f_he_date.SelectedDate),\r\n        Month(u_m_f_he_date.SelectedDate),\r\n        Day(u_m_f_he_date.SelectedDate),\r\n        If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n        Value(u_m_f_he_minute.Selected.Value),\r\n        0\r\n    )\r\n    <=\r\n    DateTime(\r\n        Year(u_m_f_hs_date.SelectedDate),\r\n        Month(u_m_f_hs_date.SelectedDate),\r\n        Day(u_m_f_hs_date.SelectedDate),\r\n        If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n        Value(u_m_f_hs_minute.Selected.Value),\r\n        0\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"time\"});,\r\n\r\n    /*If Quality or Safety not Selected, show error*/\r\n    Or(u_m_f_s_radio.Selected.Value = Blank(),u_m_f_s_radio.Selected.Value = Blank()),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"radio\"});,\r\n\r\n    /*If times selected span more than 1 hour*/\r\n    DateDiff(\r\n        /*Start Date*/\r\n        DateTime(\r\n            5,5,5,\r\n            If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n            Value(u_m_f_hs_minute.Selected.Value),\r\n            0\r\n        ),\r\n        /*End Date*/\r\n        DateTime(\r\n            5,5,5,\r\n            If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n            +\r\n            Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n            Value(u_m_f_he_minute.Selected.Value),\r\n            0\r\n        ),\r\n        /*If diference is greater than 1 hour*/\r\n        TimeUnit.Hours) > 1,\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"timespan\"});,\r\n\r\n    /*If the ending number is less than the starting number or any entry is zero*/\r\n    Value(u_m_f_ue_value.Text) < Value(u_m_f_us_value.Text), //, Value(u_m_f_ue_value.Text) = 0, Value(u_m_f_us_value.Text) = 0),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"unit\"});,\r\n    \r\n    /*If the sum of rejects and QAs, exceeds the sum of obtained units*/\r\n    Sum(Value(u_m_f_la_value.Text), Value(u_m_f_u_value.Text), Value(u_m_f_q_value.Text)) > Sum(Value(u_m_f_ue_value.Text), -Value(u_m_f_us_value.Text), 1),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"sum\"});,\r\n\r\n    /*If the start and end times already exist, aka duplicate entry*/\r\n    And(\r\n        u_m_form.Mode = FormMode.New,\r\n        !IsBlank(LookUp(\r\n            collectLocalUnitData,\r\n            DateTimeValue(Hour_Starting) = \r\n            DateTime(\r\n                Year(u_m_f_hs_date.SelectedDate),Month(u_m_f_hs_date.SelectedDate),Day(u_m_f_hs_date.SelectedDate),\r\n                If(u_m_f_hs_ampm.Selected.Value = \"PM\", 12, 0)\r\n                +\r\n                Mod(Value(u_m_f_hs_hour.Selected.Value), 12),\r\n                Value(u_m_f_hs_minute.Selected.Value),\r\n                0\r\n            )\r\n        )),\r\n        !IsBlank(LookUp(\r\n            collectLocalUnitData,\r\n            DateTimeValue(Hour_Ending) = \r\n            DateTime(\r\n                Year(u_m_f_he_date.SelectedDate),Month(u_m_f_he_date.SelectedDate),Day(u_m_f_he_date.SelectedDate),\r\n                If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                +\r\n                Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n                Value(u_m_f_he_minute.Selected.Value),\r\n                0\r\n            )\r\n        ))\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"dupe\"});,\r\n\r\n    /*If youre submitting a new entry, the hacknied check does not find a downtime reason, and the actual units built is less than the labor hour goal*/\r\n    And(\r\n        varFoundTime = false,\r\n        u_m_form.Mode = FormMode.New,\r\n        (Value(u_m_f_ue_value.Text) - Value(u_m_f_us_value.Text) + 1) - Sum(Value(u_m_f_q_value.Text),Value(u_m_f_la_value.Text),Value(u_m_f_u_value.Text)) < varGoalsPerLaborHours\r\n    ),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"goal\"});,\r\n\r\n    /*If the last hour has no entry*/\r\n    IsBlank(LookUp(\r\n        collectLocalUnitData,\r\n        DateTimeValue(Hour_Ending) = \r\n        DateTimeValue(\r\n            DateAdd(\r\n                DateTime(\r\n                    Year(u_m_f_he_date.SelectedDate),\r\n                    Month(u_m_f_he_date.SelectedDate),\r\n                    Day(u_m_f_he_date.SelectedDate),\r\n                    If(u_m_f_he_ampm.Selected.Value = \"PM\", 12, 0)\r\n                    +\r\n                    Mod(Value(u_m_f_he_hour.Selected.Value), 12),\r\n                    Value(u_m_f_he_minute.Selected.Value),\r\n                    0\r\n                ),\r\n                -1,\r\n                TimeUnit.Hours\r\n            )\r\n        )\r\n    )),\r\n    /*Show the error*/\r\n    UpdateContext({locError: true});\r\n        /*Change its type*/\r\n        UpdateContext({locErrorType: \"missing\"});,\r\n    \r\n    /*Otherwise, the error type is blank and submit the form*/\r\n    UpdateContext({locErrorType: Blank()});\r\n    SubmitForm(u_m_form);\r\n \r\n);\r\n\r\n/*Followup code is in the u_m_form submit success/failure perameters*/"
                  Image: =gblSVG.Submit
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width
                  Y: =Parent.Height/2 - Self.Height/2
            - u_h_n_settings:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Settings)
                  Image: |-
                    ="data:image/svg+xml;utf8, " & EncodeUrl("

                    <svg id='Icon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 140 140'><defs><style>.cls-1{fill:" & varHexAccent & ";}</style></defs><path class='cls-1' d='M69.52,87.51a18,18,0,1,0,.11-36.06,18,18,0,1,0-.11,36.06'/><path class='cls-1' d='M139.42,64.6A64.36,64.36,0,0,0,131,36.05C119,15.24,101.24,2.84,77.23,0A66.63,66.63,0,0,0,37.54,7.27,70.36,70.36,0,0,0,5,42.45,68,68,0,0,0-.43,70.11,63.18,63.18,0,0,0,1.82,85.8c1,3.82,3.15,9.39,6,12.31A19.57,19.57,0,0,0,27,103.61c2.87-.81,9.71-3.83,6.85-10.42a1.66,1.66,0,0,1,0-1.31c1.44-2.11,3-4.21,4.59-6.18a1.52,1.52,0,0,0,.44-1.4l-1.47-3.54a1.5,1.5,0,0,0-1.29-.68c-2.5-.27-5.11-.65-7.61-1.11a1.51,1.51,0,0,1-.93-.93,38.11,38.11,0,0,1-.84-8.56,46.23,46.23,0,0,1,.84-8.55,1.48,1.48,0,0,1,.93-.93c2.5-.47,5.11-.84,7.61-1.12a1.48,1.48,0,0,0,1.29-.68l1.47-3.53a1.51,1.51,0,0,0-.44-1.4c-1.57-2-3.15-4.08-4.59-6.18a1.51,1.51,0,0,1,0-1.31,29.91,29.91,0,0,1,5.45-6.65,29.56,29.56,0,0,1,6.63-5.45,1.51,1.51,0,0,1,1.31,0c2.1,1.44,4.2,3,6.17,4.6a1.47,1.47,0,0,0,1.4.43l3.53-1.46A1.53,1.53,0,0,0,59,36c.27-2.5.65-5.11,1.11-7.62A1.53,1.53,0,0,1,61,27.4c1.48-.28,1.55-.84,8.54-.84s7.06.56,8.55.84a1.51,1.51,0,0,1,.92.93c.47,2.51.84,5.12,1.12,7.62a1.51,1.51,0,0,0,.68,1.3l3.53,1.46a1.46,1.46,0,0,0,1.39-.43c2-1.58,4.07-3.16,6.17-4.6a1.53,1.53,0,0,1,1.32,0c1.24.85,2.39,1.21,6.63,5.45s4.59,5.4,5.45,6.65a1.51,1.51,0,0,1,0,1.31c-1.44,2.1-3,4.21-4.6,6.18a1.5,1.5,0,0,0-.43,1.4l1.46,3.53a1.5,1.5,0,0,0,1.29.68c2.51.28,5.11.65,7.62,1.12a1.53,1.53,0,0,1,.93.93c.27,1.49.83,1.79.83,8.55s-.56,7.07-.83,8.56a1.56,1.56,0,0,1-.93.93c-2.51.46-5.11.84-7.62,1.11a1.53,1.53,0,0,0-1.29.68L100.3,84.3a1.51,1.51,0,0,0,.43,1.4c1.58,2,3.16,4.07,4.6,6.18a1.51,1.51,0,0,1,0,1.31,37.71,37.71,0,0,1-5.45,6.64,41.31,41.31,0,0,1-6.63,5.46,1.53,1.53,0,0,1-1.32,0c-2.1-1.45-4.2-3-6.17-4.6a1.5,1.5,0,0,0-1.39-.44l-3.53,1.47a1.48,1.48,0,0,0-.68,1.29c-.28,2.51-.65,5.12-1.12,7.63a1.54,1.54,0,0,1-.92.93,33.49,33.49,0,0,1-8.55.83,39.74,39.74,0,0,1-8.54-.83,1.56,1.56,0,0,1-.93-.93c-.46-2.51-.84-5.12-1.11-7.63a1.5,1.5,0,0,0-.68-1.29l-3.53-1.47a1.51,1.51,0,0,0-1.4.44c-2,1.57-4.07,3.15-6.17,4.6a1.5,1.5,0,0,1-1.31,0c-4-1.22-7.42-1.59-12.29,6.9-4.43,7.73-4,15.86,5.81,20.5a69.64,69.64,0,0,0,42.89,5.62,67.22,67.22,0,0,0,41-23.93c12-14.4,17.27-31.1,16.12-49.78'/></svg>



                    ")
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width - u_submit.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
        - u_body:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =11
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - u_form:
                Control: Form
                Layout: vertical
                Properties:
                  DataSource: =Production
                  DefaultMode: =FormMode.New
                Children:
                - Lot_DataCard2:
                    Control: TypedDataCard
                    Variant: textualEditCard
                    Properties:
                      DataField: ="Title"
                      Default: =ThisItem.Lot
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Lot)
                      MaxLength: =DataSourceInfo([@Production], DataSourceInfo.MaxLength, Lot)
                      Required: =true
                      Update: =DataCardValue13.Text
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                    Children:
                    - StarVisible10:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey5.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey5.Y
                    - ErrorMessage10:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue13.Y + DataCardValue13.Height
                    - DataCardValue13:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          MaxLength: =Parent.MaxLength
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey5.Y + DataCardKey5.Height + 5
                    - DataCardKey5:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Catalog_DataCard2:
                    Control: TypedDataCard
                    Variant: textualEditCard
                    Properties:
                      DataField: ="Catalog"
                      Default: =ThisItem.Catalog
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Catalog)
                      MaxLength: =DataSourceInfo([@Production], DataSourceInfo.MaxLength, Catalog)
                      Required: =true
                      Update: =DataCardValue15.Text
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =1
                    Children:
                    - StarVisible16:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey16.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey16.Y
                    - ErrorMessage16:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue15.Y + DataCardValue15.Height
                    - DataCardValue15:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          MaxLength: =Parent.MaxLength
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey16.Y + DataCardKey16.Height + 5
                    - DataCardKey16:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Line_DataCard2:
                    Control: TypedDataCard
                    Variant: comboBoxEditCard
                    Properties:
                      DataField: ="Line"
                      Default: =ThisItem.Line
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Line)
                      Required: =true
                      Update: =DataCardValue17.Selected
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =2
                    Children:
                    - StarVisible18:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey18.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey18.Y
                    - ErrorMessage18:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue17.Y + DataCardValue17.Height
                    - DataCardValue17:
                        Control: Classic/ComboBox
                        Properties:
                          DefaultSelectedItems: =Parent.Default
                          Items: =Choices([@Production].Line)
                          SelectMultiple: =false
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey18.Y + DataCardKey18.Height + 5
                    - DataCardKey18:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Hour_Starting_DataCard1:
                    Control: TypedDataCard
                    Variant: dateTimeEditCard
                    Properties:
                      DataField: ="Hour_Starting"
                      Default: =ThisItem.Hour_Starting
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Hour_Starting)
                      Required: =true
                      Update: =If(Not IsBlank(DateValue3.SelectedDate), DateTime(Year(DateValue3.SelectedDate), Month(DateValue3.SelectedDate), Day(DateValue3.SelectedDate), Value(HourValue3.Selected.Value), Value(MinuteValue3.Selected.Value), 0))
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      Y: =1
                    Children:
                    - StarVisible20:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey20.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey20.Y
                    - ErrorMessage20:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =HourValue3.Y + HourValue3.Height
                    - MinuteValue3:
                        Control: Classic/DropDown
                        Properties:
                          Default: =Text(Minute(Parent.Default),"00")
                          Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Height: =HourValue3.Height
                          PaddingBottom: =5
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          PaddingRight: =5
                          PaddingTop: =5
                          Width: =HourValue3.Width
                          X: =HourValue3.X + HourValue3.Width + Separator3.Width
                          Y: =HourValue3.Y
                    - Separator3:
                        Control: Label
                        Properties:
                          Text: =":"
                          Align: =Align.Center
                          FontWeight: =FontWeight.Bold
                          Height: =HourValue3.Height
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Width: =10
                          Wrap: =false
                          X: =HourValue3.X + HourValue3.Width
                          Y: =HourValue3.Y
                    - HourValue3:
                        Control: Classic/DropDown
                        Properties:
                          Default: =Text(Hour(Parent.Default),"00")
                          Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Height: =DateValue3.Height
                          PaddingBottom: =5
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          PaddingRight: =5
                          PaddingTop: =5
                          Width: =DateValue3.Width / 2 - 10
                          X: =DateValue3.X + DateValue3.Width + 10
                          Y: =DateValue3.Y
                    - DateValue3:
                        Control: Classic/DatePicker
                        Properties:
                          DefaultDate: =Parent.Default
                          EndYear: =Year(Today())+100
                          StartYear: =1899
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          IsEditable: =true
                          PaddingBottom: =0
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          Width: =(Parent.Width - 60) / 2
                          X: =30
                          Y: =DataCardKey20.Y + DataCardKey20.Height + 5
                    - DataCardKey20:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Hour_Ending_DataCard1:
                    Control: TypedDataCard
                    Variant: dateTimeEditCard
                    Properties:
                      DataField: ="Hour_Ending"
                      Default: =ThisItem.Hour_Ending
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Hour_Ending)
                      Required: =true
                      Update: =If(Not IsBlank(DateValue4.SelectedDate), DateTime(Year(DateValue4.SelectedDate), Month(DateValue4.SelectedDate), Day(DateValue4.SelectedDate), Value(HourValue4.Selected.Value), Value(MinuteValue4.Selected.Value), 0))
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =1
                      Y: =1
                    Children:
                    - StarVisible21:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey21.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey21.Y
                    - ErrorMessage21:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =HourValue4.Y + HourValue4.Height
                    - MinuteValue4:
                        Control: Classic/DropDown
                        Properties:
                          Default: =Text(Minute(Parent.Default),"00")
                          Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59"]
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Height: =HourValue4.Height
                          PaddingBottom: =5
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          PaddingRight: =5
                          PaddingTop: =5
                          Width: =HourValue4.Width
                          X: =HourValue4.X + HourValue4.Width + Separator4.Width
                          Y: =HourValue4.Y
                    - Separator4:
                        Control: Label
                        Properties:
                          Text: =":"
                          Align: =Align.Center
                          FontWeight: =FontWeight.Bold
                          Height: =HourValue4.Height
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Width: =10
                          Wrap: =false
                          X: =HourValue4.X + HourValue4.Width
                          Y: =HourValue4.Y
                    - HourValue4:
                        Control: Classic/DropDown
                        Properties:
                          Default: =Text(Hour(Parent.Default),"00")
                          Items: =["00","01","02","03","04","05","06","07","08","09","10","11","12","13","14","15","16","17","18","19","20","21","22","23"]
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Height: =DateValue4.Height
                          PaddingBottom: =5
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          PaddingRight: =5
                          PaddingTop: =5
                          Width: =DateValue4.Width / 2 - 10
                          X: =DateValue4.X + DateValue4.Width + 10
                          Y: =DateValue4.Y
                    - DateValue4:
                        Control: Classic/DatePicker
                        Properties:
                          DefaultDate: =Parent.Default
                          EndYear: =Year(Today())+100
                          StartYear: =1899
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          IsEditable: =true
                          PaddingBottom: =0
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          Width: =(Parent.Width - 60) / 2
                          X: =30
                          Y: =DataCardKey21.Y + DataCardKey21.Height + 5
                    - DataCardKey21:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Unit_Starting_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="Unit_Starting"
                      Default: =ThisItem.Unit_Starting
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Unit_Starting)
                      Required: =true
                      Update: =Value(DataCardValue18.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =2
                      Y: =1
                    Children:
                    - StarVisible22:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey22.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey22.Y
                    - ErrorMessage22:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue18.Y + DataCardValue18.Height
                    - DataCardValue18:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey22.Y + DataCardKey22.Height + 5
                    - DataCardKey22:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Unit_Ending_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="Unit_Ending"
                      Default: =ThisItem.Unit_Ending
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Unit_Ending)
                      Required: =true
                      Update: =Value(DataCardValue19.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      Y: =2
                    Children:
                    - StarVisible23:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey23.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey23.Y
                    - ErrorMessage23:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue19.Y + DataCardValue19.Height
                    - DataCardValue19:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey23.Y + DataCardKey23.Height + 5
                    - DataCardKey23:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - QA_Units_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="QA_Units"
                      Default: =ThisItem.QA_Units
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,QA_Units)
                      Required: =true
                      Update: =Value(DataCardValue20.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =1
                      Y: =2
                    Children:
                    - StarVisible24:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey24.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey24.Y
                    - ErrorMessage24:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue20.Y + DataCardValue20.Height
                    - DataCardValue20:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey24.Y + DataCardKey24.Height + 5
                    - DataCardKey24:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Reject_Labels_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="Reject_Labels"
                      Default: =ThisItem.Reject_Labels
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Reject_Labels)
                      Required: =true
                      Update: =Value(DataCardValue21.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =2
                      Y: =2
                    Children:
                    - StarVisible25:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey25.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey25.Y
                    - ErrorMessage25:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue21.Y + DataCardValue21.Height
                    - DataCardValue21:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey25.Y + DataCardKey25.Height + 5
                    - DataCardKey25:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Reject_Units_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="Reject_Units"
                      Default: =ThisItem.Reject_Units
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Reject_Units)
                      Required: =true
                      Update: =Value(DataCardValue22.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      Y: =3
                    Children:
                    - StarVisible26:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey26.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey26.Y
                    - ErrorMessage26:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue22.Y + DataCardValue22.Height
                    - DataCardValue22:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey26.Y + DataCardKey26.Height + 5
                    - DataCardKey26:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Reject_Cartridges_DataCard1:
                    Control: TypedDataCard
                    Variant: numberEditCard
                    Properties:
                      DataField: ="Reject_Cartridges"
                      Default: =ThisItem.Reject_Cartridges
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Reject_Cartridges)
                      Required: =true
                      Update: =Value(DataCardValue23.Text)
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =1
                      Y: =3
                    Children:
                    - StarVisible27:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey27.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey27.Y
                    - ErrorMessage27:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue23.Y + DataCardValue23.Height
                    - DataCardValue23:
                        Control: Classic/TextInput
                        Properties:
                          Default: =Parent.Default
                          DelayOutput: =true
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          Format: =TextFormat.Number
                          PaddingLeft: =5
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey27.Y + DataCardKey27.Height + 5
                    - DataCardKey27:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
                - Runner_DataCard1:
                    Control: TypedDataCard
                    Variant: comboBoxMultiSelectEditCard
                    Properties:
                      DataField: ="Runner"
                      Default: =ThisItem.Runner
                      DisplayName: =DataSourceInfo([@Production],DataSourceInfo.DisplayName,Runner)
                      Required: =true
                      Update: =DataCardValue24.SelectedItems
                      DisplayMode: =Parent.DisplayMode
                      Height: =50
                      Width: =455
                      X: =2
                      Y: =3
                    Children:
                    - StarVisible28:
                        Control: Label
                        Properties:
                          Text: ="*"
                          Align: =Align.Center
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =DataCardKey28.Height
                          Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                          Width: =30
                          Wrap: =false
                          Y: =DataCardKey28.Y
                    - ErrorMessage28:
                        Control: Label
                        Properties:
                          Live: =Live.Assertive
                          Text: =Parent.Error
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =RGBA(168, 0, 0, 1)
                          FontWeight: =FontWeight.Semibold
                          Height: =10
                          PaddingBottom: =0
                          PaddingLeft: =0
                          PaddingRight: =0
                          PaddingTop: =0
                          Visible: =Parent.DisplayMode=DisplayMode.Edit
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardValue24.Y + DataCardValue24.Height
                    - DataCardValue24:
                        Control: Classic/ComboBox
                        Properties:
                          DefaultSelectedItems: =Parent.Default
                          Items: =Choices([@Production].Runner)
                          Tooltip: =Parent.DisplayName
                          BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                          DisplayMode: =Parent.DisplayMode
                          PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                          Width: =Parent.Width - 60
                          X: =30
                          Y: =DataCardKey28.Y + DataCardKey28.Height + 5
                    - DataCardKey28:
                        Control: Label
                        Properties:
                          Text: =Parent.DisplayName
                          AutoHeight: =true
                          BorderColor: =RGBA(0, 0, 0, 1)
                          Color: =App.Theme.Colors.Darker30
                          Height: =34
                          Width: =Parent.Width - 60
                          Wrap: =false
                          X: =30
                          Y: =10
