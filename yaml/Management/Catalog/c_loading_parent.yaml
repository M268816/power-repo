- c_layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutGap: =
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
      X: =
    Children:
    - c_header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =varColor1
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =locPadding
          PaddingLeft: =locPadding
          PaddingRight: =locPadding
          PaddingTop: =locPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - c_update:
            Control: Classic/Button
            Properties:
              OnSelect: "=/*Update Code*/\nUpdateContext({locLoading:{Visible: true, Value: 10, Text: \"Updating\"}});\n\nUpdateContext(\n    {        \n        count_of_days:\n            RoundDown(\n                DateDiff(c_start_date.SelectedDate, c_end_date.SelectedDate, TimeUnit.Days) / 7,\n                0\n            ) * 5 +\n            Mod(5 + Weekday(c_end_date.SelectedDate) - Weekday(c_start_date.SelectedDate), 5) + 1\n    }\n);\n\nUpdateContext({locLoading:{Visible: true, Value: 20, Text: \"Creating Default Filters\"}});\n/*Set Default Filters*/\n/*Production*/\nUpdateContext({\n    locDefaultProductionFilter:\n        Filter(\n            collectProduction,\n            And(\n                hour_starting >= DateAdd(c_start_date.SelectedDate, -1, TimeUnit.Hours),\n                hour_ending <= DateAdd(c_end_date.SelectedDate, 23, TimeUnit.Hours)\n            ),\n            If(\n                Not(c_size.Selected.Size = \"All\"),\n                size = c_size.Selected.Size,\n                true\n            ),\n            If(\n                Not(c_shift.Selected.Value = \"All\"),\n                shift = c_shift.Selected.Value,\n                true\n            )\n        )\n});\n\n/*Downtime*/\nUpdateContext({\n    locDefaultDowntimeFilter:\n        Filter(\n            collectDowntime,\n            And(\n                started >= DateAdd(c_start_date.SelectedDate, -1, TimeUnit.Hours),\n                ended <= DateAdd(c_end_date.SelectedDate, 23, TimeUnit.Hours)\n            ),\n            If(\n                Not(c_size.Selected.Size = \"All\"),\n                size = c_size.Selected.Size,\n                true\n            ),\n            If(\n                Not(c_shift.Selected.Value = \"All\"),\n                shift = c_shift.Selected.Value,\n                true\n            )\n        )\n});\n\n/*Goal_Setting*/\nUpdateContext({\n    locDefaultGoalSetting:\n        ShowColumns(\n            Filter(Goal_Settings,\n                Constraint_Setting > 0,\n                If(\n                    c_size.Selected.Size = \"All\",\n                    Size.Value = Size.Value,\n                    Size.Value = c_size.Selected.Size\n                )\n            ),\n            Constraint_Setting,\n            Goal_Setting,\n            Line,\n            Size\n        )\n});\n\nUpdateContext({locLoading:{Visible: true, Value: 30, Text: \"Combining Databases\"}});\n/*Combine to find runtime*/\nClear(collectCombined);\nClearCollect(collectCombined, locDefaultProductionFilter);\nForAll(\n    collectLineSchema,\n    {\n        Line: SCH_Line,\n        \n        Value:\n        ForAll(\n            Filter(locDefaultDowntimeFilter, line = SCH_Line),\n            With(\n                {\n                    thisDowntime: ThisRecord,\n                    thisLine: SCH_Line\n                },\n                If(\n                    CountRows(Filter(locDefaultProductionFilter, line = thisLine,\n                        (hour_starting <= thisDowntime.started && hour_ending > thisDowntime.started) || \n                        (hour_starting < thisDowntime.ended && hour_ending >= thisDowntime.ended) ||\n                        (hour_starting >= thisDowntime.started && hour_ending <= thisDowntime.ended)\n                        )) = 0,\n                    Collect(collectCombined, thisDowntime)\n                )\n            )\n        )\n    }\n);\n\nUpdateContext({locLoading:{Visible: true, Value: 50, Text: \"Calculating Line Data\"}});\n/*Create a collection of OEE data for each line*/\nClear(collectLineOEE);\nForAll(collectLineSchema,\n    Collect(\n        collectLineOEE,\n        {\n            /*Shift*/\n            shift: c_shift.Selected.Value,\n\n            line: SCH_Line,\n\n            /*Goal Average per contraint operation*/\n            constraint_average:\n                Round(\n                    /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                    If(\n                        c_size.Selected.Size = \"All\",\n                        \n                        IfError(\n                            Average(\n                                Filter(\n                                    locDefaultGoalSetting,\n                                    Line.Value = SCH_Line\n                                ),\n                                Constraint_Setting\n                            ),\n                            0\n                        ),\n                        \n                        First(\n                            Filter(\n                                locDefaultGoalSetting,\n                                Line.Value = SCH_Line\n                            )\n                        ).Constraint_Setting\n                    ),\n                    0\n                ),\n\n            /*Constratint setting by runtime*/\n            constraint_total:\n                Round(\n                    /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                    If(\n                        c_size.Selected.Size = \"All\",\n                        \n                        IfError(\n                            Average(\n                                Filter(\n                                    locDefaultGoalSetting,\n                                    Line.Value = SCH_Line\n                                ),\n                                Constraint_Setting\n                            ),\n                            0\n                        ),\n                        \n                        First(\n                            Filter(\n                                locDefaultGoalSetting,\n                                Line.Value = SCH_Line\n                            )\n                        ).Constraint_Setting\n                    ) *\n                /*Collect Runtime Minutes From Production*/\n                ((CountRows(Filter(collectCombined, line = SCH_Line, amount_built > 0)) * 60) +\n                /*Collect Runtime Minues From Downtime*/\n                Sum(Filter(collectCombined, line = SCH_Line, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60,\n                    0\n                ),\n\n            /*Total sum of Units Built*/\n            total:\n                Sum(\n                    Filter(\n                        locDefaultProductionFilter,\n                        line = SCH_Line\n                    ),\n                    amount_built + reject_cartridges + reject_units\n                ),\n            \n            /*Sum of Good Units Built*/\n            output:\n                Sum(\n                    Filter(\n                        locDefaultProductionFilter,\n                        line = SCH_Line\n                    ),\n                    amount_built\n                ),\n            \n            /*Sum of Rejects*/\n            rejects:\n                Sum(\n                    Filter(\n                        locDefaultProductionFilter,\n                        line = SCH_Line\n                    ),\n                    reject_cartridges + reject_units\n                ),\n\n            /*Sum of Downtime, in minutes*/\n            downtime_total:\n                Sum(\n                    Filter(\n                        locDefaultDowntimeFilter,\n                        line = SCH_Line\n                    ),\n                    total\n                ),\n            \n            /*Sum of planned downtime in minutes*/\n            downtime_planned:\n                Sum(\n                    Filter(\n                        locDefaultDowntimeFilter,\n                        line = SCH_Line,\n                        reason = \"No Scheduled Work\" || reason = \"Engineering DT\" || reason = \"Planned Downtime\"\n                    ),\n                    total\n                ),\n            \n            runtime_hours:\n                /*Collect Runtime Minutes From Production*/\n                ((CountRows(Filter(collectCombined, line = SCH_Line, amount_built > 0)) * 60) +\n                /*Collect Runtime Minues From Downtime*/\n                Sum(Filter(collectCombined, line = SCH_Line, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60,\n            \n            runtime_total:\n                (    \n                    (count_of_days * If(c_shift.Selected.Value = \"All\", 1440, 480))\n                ) / 60,\n            \n\n            /*Percentage of Overall Performance || OEE2 = Output / (Constraint * Runtime) * 100*/\n            OEE2:\n                IfError(\n                    Round(\n                        /*Output*/\n                        Sum(\n                            Filter(\n                                locDefaultProductionFilter,\n                                line = SCH_Line\n                            ),\n                            amount_built\n                        ) /\n                        (\n                            /*Constraint*/\n                            (\n                                Round(\n                                    /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                                    If(\n                                        c_size.Selected.Size = \"All\",\n                                        \n                                        IfError(\n                                            Average(\n                                                Filter(\n                                                    locDefaultGoalSetting,\n                                                    Line.Value = SCH_Line\n                                                ),\n                                                Constraint_Setting\n                                            ),\n                                            0\n                                        ),\n                                        \n                                        First(\n                                            Filter(\n                                                locDefaultGoalSetting,\n                                                Line.Value = SCH_Line\n                                            )\n                                        ).Constraint_Setting\n                                    ),\n                                    0\n                                )\n                            ) *\n                            /*Runtime Hours*/\n                            (\n                                /*Collect Runtime Minutes From Production*/\n                                ((CountRows(Filter(collectCombined, line = SCH_Line, amount_built > 0)) * 60) +\n                                /*Collect Runtime Minues From Downtime*/\n                                Sum(Filter(collectCombined, line = SCH_Line, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60\n                            )\n                        ) * 100,\n                        0\n                    ),\n                    0\n                )\n        }\n    )\n);\n\nUpdateContext({locLoading:{Visible: true, Value: 75, Text: \"Calculating OEE2\"}});\n/*Collect overall OEE*/\nClear(collectOEE2);\nCollect(\n    collectOEE2,\n    {\n        output:\n            Sum(\n                locDefaultProductionFilter,\n                amount_built\n            ),\n        \n        constraint_average:\n            Round(\n                /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                If(\n                    c_size.Selected.Size = \"All\",\n                    \n                    IfError(\n                        Average(\n                            locDefaultGoalSetting,\n                            Constraint_Setting\n                        ),\n                        0\n                    ),\n                    \n                    First(\n                        locDefaultGoalSetting\n                    ).Constraint_Setting\n                ),\n                0\n            ),\n\n        constraint_goal:\n            Round(\n                /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                If(\n                    c_size.Selected.Size = \"All\",\n                    \n                    IfError(\n                        Average(\n                            locDefaultGoalSetting,\n                            Constraint_Setting\n                        ),\n                        0\n                    ),\n                    \n                    First(\n                        locDefaultGoalSetting\n                    ).Constraint_Setting\n                ),\n                0\n            ) *\n            /*Collect Runtime Minutes From Production*/\n            ((CountRows(Filter(collectCombined, amount_built > 0)) * 60) +\n            /*Collect Runtime Minues From Downtime*/\n            Sum(Filter(collectCombined, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60,\n\n        runtime_hours_planned:\n            /*Collect Runtime Minutes From Production*/\n            ((CountRows(Filter(collectCombined, amount_built > 0)) * 60) +\n            /*Collect Runtime Minues From Downtime*/\n            Sum(Filter(collectCombined, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60,\n        \n        runtime_hours:\n            /*Collect Runtime Minutes From Production*/\n            ((CountRows(Filter(collectCombined, amount_built > 0)) * 60) +\n            /*Collect Runtime Minues From Downtime*/\n            Sum(collectCombined, total))/60,\n\n        runtime_test:\n            (    \n                (count_of_days * 9 * 1440) - \n                Sum(\n                    Filter(\n                        locDefaultDowntimeFilter,\n                        reason = \"No Scheduled Work\" || reason = \"Engineering DT\" || reason = \"Planned Downtime\"\n                    ),\n                    total\n                )*1\n            ) / 60,\n        \n        OEE1:\n            IfError(\n                Round(\n                    /*Output*/\n                    Sum(\n                        locDefaultProductionFilter,\n                        amount_built\n                    ) /\n                    (\n                        /*Constraint*/\n                        (\n                            Round(\n                                /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                                If(\n                                    c_size.Selected.Size = \"All\",\n                                    \n                                    IfError(\n                                        Average(\n                                            locDefaultGoalSetting,\n                                            Constraint_Setting\n                                        ),\n                                        0\n                                    ),\n                                    \n                                    First(\n                                        locDefaultGoalSetting\n                                    ).Constraint_Setting\n                                ),\n                                0\n                            )\n                        ) *\n                        /*Runtime Hours*/\n                        (\n                            /*Collect Runtime Minutes From Production*/\n                            ((CountRows(Filter(collectCombined, amount_built > 0)) * 60) +\n                            /*Collect Runtime Minues From Downtime*/\n                            Sum(collectCombined, total))/60\n                        )\n                    ) * 100,\n                    0\n                ),\n                0\n            ),\n\n        TestOEE2:\n            Sum(collectLineOEE, OEE2) / CountIf(collectLineOEE, OEE2 > 0),\n        \n        OEE2:\n            IfError(\n                Round(\n                    /*Output*/\n                    Sum(\n                        locDefaultProductionFilter,\n                        amount_built\n                    ) /\n                    (\n                        /*Constraint*/\n                        (\n                            Round(\n                                /*If a size is not selected, find the Average, otherwise find the size's constraint setting*/\n                                If(\n                                    c_size.Selected.Size = \"All\",\n                                    \n                                    IfError(\n                                        Average(\n                                            locDefaultGoalSetting,\n                                            Constraint_Setting\n                                        ),\n                                        0\n                                    ),\n                                    \n                                    First(\n                                        locDefaultGoalSetting\n                                    ).Constraint_Setting\n                                ),\n                                0\n                            )\n                        ) *\n                        /*Runtime Hours*/\n                        (\n                            /*Collect Runtime Minutes From Production*/\n                            ((CountRows(Filter(collectCombined, amount_built > 0)) * 60) +\n                            /*Collect Runtime Minues From Downtime*/\n                            Sum(Filter(collectCombined, Not(reason = \"Planned Downtime\" || reason = \"No Scheduled Work\" || reason = \"Engineering DT\")), total))/60\n                        )\n                    ) * 100,\n                    0\n                ),\n                0\n            )\n    }\n);\n\n/*Garbage Collecting*/\nUpdateContext({locLoading:{Visible: true, Value: 95, Text: \"Finishing Up\"}});\n\n/*End*/\nUpdateContext({locLoading:{Visible: true, Value: 100, Text: \"Completed\"}});\nUpdateContext({locLoading:{Visible: false, Value: -1, Text: \"Not Loading\"}});"
              Text: ="update"
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Visible: =false
        - c_collect:
            Control: Classic/Button
            Properties:
              OnSelect: |-
                =/*Start*/
                UpdateContext({locLoading:{Visible: true, Value: 1, Text: "Loading"}});

                UpdateContext({locLoading:{Visible: true, Value: 5, Text: "Checking for updates"}});
                /*Capture Local Date Selection*/
                UpdateContext({
                    locEndDate: c_end_date.SelectedDate,
                    locStartDate: c_start_date.SelectedDate
                });

                /*Check if collections need updating*/
                Set(varUpdateProduction,
                    Or(
                        Not(First(Sort(Production,ID,SortOrder.Descending)).ID = First(Sort(collectProduction,id,SortOrder.Descending)).id),
                        Not(varEndDate = locEndDate),
                        Not(varStartDate = locStartDate)
                    )
                );
                Set(varUpdateDowntime,
                    Or(    
                        Not(First(Sort(Downtime,ID,SortOrder.Descending)).ID = First(Sort(collectDowntime,id,SortOrder.Descending)).id),
                        Not(varEndDate = locEndDate),
                        Not(varStartDate = locStartDate)
                    )
                );

                /*Set collection dates from selected local dates*/
                If( Not(varEndDate = locEndDate), Set(varEndDate, locEndDate));
                If( Not(varStartDate = locStartDate), Set(varStartDate, locStartDate));


                /*Collect Production*/
                UpdateContext({locLoading:{Visible: true, Value: 10, Text: "Collecting Production Data"}});
                If(varUpdateProduction,
                    If(
                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,
                        UpdateContext({locLoading:{Visible: true, Value: 60, Text: "Retrieving Production Data"}});
                        ClearCollect(collectProduction,
                            ForAll(
                                Filter(Production,
                                    Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                    Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                    goal: Value(ThisRecord.Hourly_Goal),
                                    amount_built: Value(ThisRecord.Amount_Built),
                                    unit_starting: Value(ThisRecord.Unit_Starting),
                                    unit_ending: Value(ThisRecord.Unit_Ending),
                                    reject_labels: Value(ThisRecord.Reject_Labels),
                                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                    reject_units: Value(ThisRecord.Reject_Units),
                                    qa_units: Value(ThisRecord.QA_Units)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,
                        UpdateContext({locLoading:{Visible: true, Value: 60, Text: "Parsing PowerAutomate Flow for Production Data"}});
                        ClearCollect(collectProduction,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_units_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    hour_ending: DateTimeValue(Value._hour_ending),
                                    hour_starting: DateTimeValue(Value._hour_starting),
                                    goal: Value(Value._goal),
                                    amount_built: Value(Value._amount_built),
                                    unit_starting: Value(Value._unit_starting),
                                    unit_ending: Value(Value._unit_ending),
                                    reject_labels: Value(Value._reject_labels),
                                    reject_cartridges: Value(Value._reject_cartridges),
                                    reject_units: Value(Value._reject_units),
                                    qa_units: Value(Value._qa)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,
                        UpdateContext({locLoading:{Visible: true, Value: 25, Text: "Collecting Production Dataset 1"}});
                        Collect(material_1,
                            Sort(
                                Filter(Production,
                                    And(
                                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Hour_Ending,
                                SortOrder.Ascending
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 30, Text: "Collecting Production Dataset 2"}});
                        Collect(material_2,
                            Sort(
                                Filter(Production,
                                    And(
                                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Hour_Ending,
                                SortOrder.Descending
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 40, Text: "Joining Production Data 1"}});
                        ClearCollect(fusion, material_1);

                        UpdateContext({locLoading:{Visible: true, Value: 50, Text: "Joining Production Data 2"}});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 60, Text: "Collecting Joined Production Data"}});
                        ClearCollect(
                            collectProduction,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                    goal: Value(ThisRecord.Hourly_Goal),
                                    amount_built: Value(ThisRecord.Amount_Built),
                                    unit_starting: Value(ThisRecord.Unit_Starting),
                                    unit_ending: Value(ThisRecord.Unit_Ending),
                                    reject_labels: Value(ThisRecord.Reject_Labels),
                                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                    reject_units: Value(ThisRecord.Reject_Units),
                                    qa_units: Value(ThisRecord.QA_Units)
                                }
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 65, Text: "Garbage Collection"}});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    )
                );

                /*Collect Downtime*/
                UpdateContext({locLoading:{Visible: true, Value: 70, Text: "Collecting Downtime Data"}});
                If(varUpdateDowntime,
                    If(
                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,
                        UpdateContext({locLoading:{Visible: true, Value: 95, Text: "Retrieving Downtime Data"}});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Filter(Downtime,
                                    Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                    Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,
                        UpdateContext({locLoading:{Visible: true, Value: 95, Text: "Parsing PowerAutomate Flow for Downtime Data"}});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_downtime_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    started: DateTimeValue(Value._started),
                                    ended: DateTimeValue(Value._ended),
                                    reason: Text(Value._reason),
                                    total: Value(Value._total),
                                    comments: Text(Value._comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,
                        UpdateContext({locLoading:{Visible: true, Value: 75, Text: "Collecting Downtime Dataset 2"}});
                        Collect(material_1,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                    )
                                ),
                                Ended,
                                SortOrder.Ascending
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 80, Text: "Collecting Downtime Dataset 2"}});
                        Collect(material_2,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Ended,
                                SortOrder.Descending
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 85, Text: "Joining Downtime Dataset 1"}});
                        ClearCollect(fusion, material_1);

                        UpdateContext({locLoading:{Visible: true, Value: 90, Text: "Joining Downtime Dataset 2"}});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 95, Text: "Collecting Joined Downtime Data"}});
                        ClearCollect(
                            collectDowntime,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        );

                        UpdateContext({locLoading:{Visible: true, Value: 98, Text: "Garbage Collection"}});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    )
                );

                UpdateContext({locLoading:{Visible: true, Value: 100, Text: "Finshing up"}});

                /*Update the UI Elements*/
                Select(c_collect_lists);
              Text: ="collect"
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Visible: =false
        - c_collect_lists:
            Control: Classic/Button
            Properties:
              OnSelect: |-
                =UpdateContext({locLoading:{Visible: true, Value: 1, Text: "Loading"}});

                UpdateContext({locLoading:{Visible: true, Value: 33, Text: "Finding Product Sizes"}});
                /*Gather production size by line*/
                ClearCollect(
                    collectTempProduction,
                    GroupBy(
                        Filter(
                            collectProduction,
                            hour_starting >= DateAdd(c_start_date.SelectedDate, -1, TimeUnit.Hours),
                            hour_ending <= DateAdd(c_end_date.SelectedDate, 23, TimeUnit.Hours),
                            If(
                                c_shift.Selected.Value = "All",
                                shift = shift,
                                shift = c_shift.Selected.Value
                            )
                        ),            
                        size,
                        line_group
                    )
                );

                UpdateContext({locLoading:{Visible: true, Value: 66, Text: "Creating Product Size List"}});
                /*Init size list collection*/
                Clear(collectSizeList);
                Collect(collectSizeList, {Size: "All", Line: []});
                /*Create a size list from production*/
                ForAll(
                    collectTempProduction,
                    Collect(
                        collectSizeList,
                        {
                            Size: size,
                            Line: line_group.line
                        }
                    )
                );

                /*Clear for garbage collection*/
                UpdateContext({locLoading:{Visible: true, Value: 90, Text: "Garbage Collection"}});

                Clear(collectTempProduction);

                UpdateContext({locLoading:{Visible: true, Value: 95, Text: "Finishing Up"}});

                Select(c_update);
              Text: ="collect lists"
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Visible: =false
        - c_logo:
            Control: Image
            Properties:
              Image: =LOGO_MSIG_SBlue_FIT_ALPHA
              FillPortions: =1
              LayoutMinHeight: =10
              Width: =10
        - c_h_title:
            Control: Text
            Properties:
              Align: ='TextCanvas.Align'.Center
              FontColor: =varColor5
              Size: =24
              Text: ="Encapsualtion Daily Management System"
              VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
              FillPortions: =6
              LayoutMinHeight: =8
              LayoutMinWidth: =10
        - c_h_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =0
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =locPadding
              LayoutJustifyContent: =LayoutJustifyContent.Center
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
              Width: =c_h_n_reload.Width * 3 + locPadding*4
            Children:
            - c_h_n_reload:
                Control: Image
                Properties:
                  OnSelect: =Select(c_collect);
                  Image: |-
                    ="data:image/svg+xml;utf8, " & EncodeUrl("

                    <svg id='Icon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 140.25 140.25'><defs><style>.cls-1{fill:"& varHexAccent &";}</style></defs><path class='cls-1' d='M70.12.12a69.87,69.87,0,0,0-23.37,4l0,0a13.17,13.17,0,0,0,4.65,25.49,39.54,39.54,0,0,0,6.18-1.18l2.92-.71a44.45,44.45,0,0,1,20.73.61,5.79,5.79,0,0,1,2.63,1.38A4.24,4.24,0,0,1,85,31.24,4.86,4.86,0,0,1,85,35l-.76,2a1.35,1.35,0,0,1-1.86.75l-.81-.3A35.56,35.56,0,1,0,100.25,53L97,65.75a1.33,1.33,0,0,1-1.31,1.14,1.64,1.64,0,0,1-.37,0l-2.08-.54a4.83,4.83,0,0,1-3.1-2.16,4.77,4.77,0,0,1-.37-3.75l4.59-17.7a6.23,6.23,0,0,1,3.62-4.28c1.69-.79,2.45-1,4.92-.08l17,7.84a4.53,4.53,0,0,1,2.34,6.45l-.9,1.93a1.28,1.28,0,0,1-1.19.79,1.68,1.68,0,0,1-.73-.17l-11-5.12a44.13,44.13,0,0,1-29.41,64c-7.34,1.6-17.83,1-25.16-1.89A44.11,44.11,0,0,1,34.37,44.47c.31-.42,1.57-2.06,1.87-2.48A13.07,13.07,0,0,0,15,26.8c-.36.49-1.79,2.65-2.18,3.21A70,70,0,1,0,70.12.12Z'/></svg>



                    ")
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =c_h_n_settings.X - Self.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - c_h_n_bugs:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Bugs)
                  Image: |-
                    ="data:image/svg+xml;utf8, " & EncodeUrl("

                    <svg id='Icon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 140 140'><defs><style>.cls-1{fill:" & varHexAccent & ";}</style></defs><path class='cls-1' d='M80.07,33.73a24.48,24.48,0,1,0,24.48,24.48A24.51,24.51,0,0,0,80.07,33.73ZM65,47.65a1.45,1.45,0,0,1,1.7-1.16l5.62,1.06a8.34,8.34,0,0,1,7.46-4.65h.47a8.37,8.37,0,0,1,7.47,4.65l5.62-1.06a1.45,1.45,0,0,1,.54,2.85l-5.35,1a8.46,8.46,0,0,1,0,.87.85.85,0,0,1-.85.85H72.28a.85.85,0,0,1-.85-.85,6.35,6.35,0,0,1,0-.87l-5.35-1A1.45,1.45,0,0,1,65,47.65Zm28.88,19.7a1.45,1.45,0,0,1-.27,2.88,1.24,1.24,0,0,1-.27,0l-5.62-1.06a7.74,7.74,0,0,1-3.43,3.79c-1.88.82-6.8.8-8.67-.07a7.64,7.64,0,0,1-3.3-3.72L66.67,70.2a1.24,1.24,0,0,1-.27,0A1.46,1.46,0,0,1,65,69a1.44,1.44,0,0,1,1.16-1.69l5.35-1a6.35,6.35,0,0,1,0-.87v-5.3H66.16a1.45,1.45,0,1,1,0-2.9h5.27V56.06A1.09,1.09,0,0,1,72.52,55H87.46a1.09,1.09,0,0,1,1.09,1.09v1.21h5.32a1.45,1.45,0,0,1,0,2.9H88.55v5.3a8.46,8.46,0,0,1,0,.87Z'/><path class='cls-1' d='M69.91-.08a70,70,0,0,0-66,93.27c.13.38.7,1.8.82,2.12a15.3,15.3,0,0,0,25.62,5c.37-.4,2.29-2.41,2.29-2.41L47.45,83.05a2,2,0,0,1,2.92.12,38.81,38.81,0,0,0,6.27,6,2,2,0,0,1,.2,3L43.62,105.34s-3,2.72-3.65,3.29a16.13,16.13,0,0,0,5,26.69c.49.21,2.5.88,3,1.05A70,70,0,1,0,69.91-.08ZM80.07,92a33.81,33.81,0,1,1,33.81-33.81A33.85,33.85,0,0,1,80.07,92Z'/></svg>



                    ")
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width
                  Y: =Parent.Height/2 - Self.Height/2
            - c_h_n_settings:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Settings)
                  Image: |-
                    ="data:image/svg+xml;utf8, " & EncodeUrl("

                    <svg id='Icon' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 140 140'><defs><style>.cls-1{fill:" & varHexAccent & ";}</style></defs><path class='cls-1' d='M69.52,87.51a18,18,0,1,0,.11-36.06,18,18,0,1,0-.11,36.06'/><path class='cls-1' d='M139.42,64.6A64.36,64.36,0,0,0,131,36.05C119,15.24,101.24,2.84,77.23,0A66.63,66.63,0,0,0,37.54,7.27,70.36,70.36,0,0,0,5,42.45,68,68,0,0,0-.43,70.11,63.18,63.18,0,0,0,1.82,85.8c1,3.82,3.15,9.39,6,12.31A19.57,19.57,0,0,0,27,103.61c2.87-.81,9.71-3.83,6.85-10.42a1.66,1.66,0,0,1,0-1.31c1.44-2.11,3-4.21,4.59-6.18a1.52,1.52,0,0,0,.44-1.4l-1.47-3.54a1.5,1.5,0,0,0-1.29-.68c-2.5-.27-5.11-.65-7.61-1.11a1.51,1.51,0,0,1-.93-.93,38.11,38.11,0,0,1-.84-8.56,46.23,46.23,0,0,1,.84-8.55,1.48,1.48,0,0,1,.93-.93c2.5-.47,5.11-.84,7.61-1.12a1.48,1.48,0,0,0,1.29-.68l1.47-3.53a1.51,1.51,0,0,0-.44-1.4c-1.57-2-3.15-4.08-4.59-6.18a1.51,1.51,0,0,1,0-1.31,29.91,29.91,0,0,1,5.45-6.65,29.56,29.56,0,0,1,6.63-5.45,1.51,1.51,0,0,1,1.31,0c2.1,1.44,4.2,3,6.17,4.6a1.47,1.47,0,0,0,1.4.43l3.53-1.46A1.53,1.53,0,0,0,59,36c.27-2.5.65-5.11,1.11-7.62A1.53,1.53,0,0,1,61,27.4c1.48-.28,1.55-.84,8.54-.84s7.06.56,8.55.84a1.51,1.51,0,0,1,.92.93c.47,2.51.84,5.12,1.12,7.62a1.51,1.51,0,0,0,.68,1.3l3.53,1.46a1.46,1.46,0,0,0,1.39-.43c2-1.58,4.07-3.16,6.17-4.6a1.53,1.53,0,0,1,1.32,0c1.24.85,2.39,1.21,6.63,5.45s4.59,5.4,5.45,6.65a1.51,1.51,0,0,1,0,1.31c-1.44,2.1-3,4.21-4.6,6.18a1.5,1.5,0,0,0-.43,1.4l1.46,3.53a1.5,1.5,0,0,0,1.29.68c2.51.28,5.11.65,7.62,1.12a1.53,1.53,0,0,1,.93.93c.27,1.49.83,1.79.83,8.55s-.56,7.07-.83,8.56a1.56,1.56,0,0,1-.93.93c-2.51.46-5.11.84-7.62,1.11a1.53,1.53,0,0,0-1.29.68L100.3,84.3a1.51,1.51,0,0,0,.43,1.4c1.58,2,3.16,4.07,4.6,6.18a1.51,1.51,0,0,1,0,1.31,37.71,37.71,0,0,1-5.45,6.64,41.31,41.31,0,0,1-6.63,5.46,1.53,1.53,0,0,1-1.32,0c-2.1-1.45-4.2-3-6.17-4.6a1.5,1.5,0,0,0-1.39-.44l-3.53,1.47a1.48,1.48,0,0,0-.68,1.29c-.28,2.51-.65,5.12-1.12,7.63a1.54,1.54,0,0,1-.92.93,33.49,33.49,0,0,1-8.55.83,39.74,39.74,0,0,1-8.54-.83,1.56,1.56,0,0,1-.93-.93c-.46-2.51-.84-5.12-1.11-7.63a1.5,1.5,0,0,0-.68-1.29l-3.53-1.47a1.51,1.51,0,0,0-1.4.44c-2,1.57-4.07,3.15-6.17,4.6a1.5,1.5,0,0,1-1.31,0c-4-1.22-7.42-1.59-12.29,6.9-4.43,7.73-4,15.86,5.81,20.5a69.64,69.64,0,0,0,42.89,5.62,67.22,67.22,0,0,0,41-23.93c12-14.4,17.27-31.1,16.12-49.78'/></svg>



                    ")
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width - c_h_n_bugs.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
    - c_body:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =11
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - c_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =varColor3
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =locPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =locPadding
              PaddingLeft: =locPadding
              PaddingRight: =locPadding
              PaddingTop: =locPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - c_n_title:
                Control: Text
                Properties:
                  Align: ='TextCanvas.Align'.Center
                  Size: =Self.Height / 3
                  Text: ="Catalog Analysis"
                  VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                  Weight: ='TextCanvas.Weight'.Semibold
                  FillPortions: =1
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
            - c_n_seperator:
                Control: Rectangle
                Properties:
                  Height: =1
                  LayoutMinWidth: =10
            - c_n_home:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Home);
                  Text: ="Home"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Home", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_dor:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(DOR);
                  Text: ="Daily Operations Report"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "DOR", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_outputs:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Outputs);
                  Text: ="Outputs"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Outputs", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_downtime:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Downtime_Screen);
                  Text: ="Downtime"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Downtime_View", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_hourly:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Hourly);
                  Text: ="Hour by Hour"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Hourly", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_errors:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Errors);
                  Text: ="Error Tracking"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Errors", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_oee:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(OEE);
                  Text: ="OEE Analysis"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "OEE", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_catalog:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Catalog);
                  Text: ="Catalog Analysis"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Catalog", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_trend:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Trend);
                  Text: ="OEE Trend Analysis"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Trend", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =1
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Width / 16
            - c_n_footer:
                Control: GroupContainer
                Variant: manualLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =6
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - c_n_f_text:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =8
                      Text: ="MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                      VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                      Height: =Parent.Height
                      Width: =Parent.Width
        - c_main:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =9
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =locPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =locPadding
              PaddingLeft: =locPadding
              PaddingRight: =locPadding
              PaddingTop: =locPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - c_controls:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =varColor4
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutGap: =locPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =locPadding
                  PaddingLeft: =locPadding
                  PaddingRight: =locPadding
                  PaddingTop: =locPadding
                Children:
                - c_start_date_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Starting Date"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_start_date:
                    Control: DatePicker
                    Properties:
                      FontSize: =Self.Width / 10
                      Format: ="Short"
                      SelectedDate: =varNowDay
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_seperator_0:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - c_end_date_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Ending Date"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_end_date:
                    Control: DatePicker
                    Properties:
                      FontSize: =Self.Width / 10
                      Format: ="Short"
                      SelectedDate: =varNowDay
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_seperator_1:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - c_button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Select(c_collect);
                      Text: ="Update Date Range"
                      Color: =varColor0
                      Fill: =varColorAccent
                      FillPortions: =1
                      FontWeight: =FontWeight.Normal
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Width / 16
                - c_seperator_2:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - c_size_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Product Size"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_size:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(c_update);
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      FontSize: =Self.Width / 10
                      Items: =Sort(ShowColumns(collectSizeList,Size),Size,SortOrder.Descending)
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                    Children:
                    - Size1:
                        Control: PowerApps_CoreControls_DropdownCanvasTemplate_dataField
                        Variant: textualColumn
                        Properties:
                          FieldDisplayName: ="Size"
                          FieldName: ="Size"
                          FieldType: ="s"
                          Order: =1
                - c_seperator_3:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - c_shift_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Shift"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_shift:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(c_collect_lists);
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "All"}
                      FontSize: =Self.Width / 10
                      Items: =["All", "C", "A", "B"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - c_seperator_4:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - c_c_footer:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.None
                      FillPortions: =10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
            - c_section:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =9
                  LayoutGap: =locPadding/2
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - c_oee_parent:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.Center
                      Height: =Self.Width * 2
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      LayoutMode: =LayoutMode.Auto
                      Width: =c_g_oee_parent.Width
                    Children:
                    - c_oee_title:
                        Control: Label
                        Properties:
                          Text: ="Average OEE2"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: =1
                          Font: =Font.Verdana
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                          Size: =Self.Height / 4
                    - c_oee:
                        Control: Image
                        Properties:
                          Image: |-
                            ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" & 
                            EncodeUrl(
                            "{
                              type: 'radialGauge',
                              data: {
                                datasets: [{
                                  data: ["& Last(collectOEE2).TestOEE2 &"],
                                  backgroundColor: getGradientFillHelper('horizontal', ['blue', 'red']),
                                }]
                              },
                              options: {
                                domain: [0, "& If(Last(collectOEE2).TestOEE2 <= 100, 100, Last(collectOEE2).TestOEE2) &"],
                                trackColor: 'lightgray', 
                                centerPercentage: 90,
                                centerArea: {
                                  text: (val) => val + '%',
                                },
                              }
                            }"
                            )
                          FillPortions: =4
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                    - c_oee_data:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          AlignInContainer: =AlignInContainer.SetByContainer
                          DropShadow: =DropShadow.None
                          FillPortions: =2
                          LayoutAlignItems: =LayoutAlignItems.Stretch
                          LayoutGap: =locPadding/2
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                          LayoutMode: =LayoutMode.Auto
                          PaddingBottom: =Self.LayoutGap
                          PaddingLeft: =Self.LayoutGap
                          PaddingRight: =Self.LayoutGap
                          PaddingTop: =Self.LayoutGap
                        Children:
                        - c_oee_built_parent:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutDirection: =LayoutDirection.Vertical
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                            Children:
                            - c_oee_built_title:
                                Control: Label
                                Properties:
                                  Text: ="Units Built"
                                  Align: =Align.Center
                                  Color: =varColor5
                                  Fill: =varColor3
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                            - c_oee_built:
                                Control: Label
                                Properties:
                                  Text: =First(collectOEE2).output*1
                                  Align: =Align.Center
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                        - c_oee_goal_parent:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutDirection: =LayoutDirection.Vertical
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                            Children:
                            - c_oee_goal_title:
                                Control: Label
                                Properties:
                                  Text: ="Build Goal"
                                  Align: =Align.Center
                                  Color: =varColor5
                                  Fill: =varColor3
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                            - c_oee_goal:
                                Control: Label
                                Properties:
                                  Text: =Round(First(collectOEE2).constraint_goal,0)
                                  Align: =Align.Center
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                        - c_oee_constraint_parent:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              AlignInContainer: =AlignInContainer.SetByContainer
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutDirection: =LayoutDirection.Vertical
                              LayoutMinHeight: =10
                              LayoutMinWidth: =10
                              LayoutMode: =LayoutMode.Auto
                            Children:
                            - c_oee_constraint_title:
                                Control: Label
                                Properties:
                                  Text: ="Average Target"
                                  Align: =Align.Center
                                  Color: =varColor5
                                  Fill: =varColor3
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                            - c_oee_constraint:
                                Control: Label
                                Properties:
                                  Text: =First(collectOEE2).constraint_average
                                  Align: =Align.Center
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 6
                                  Width: =10
                - c_gallery:
                    Control: Gallery
                    Variant: BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0
                    Properties:
                      Items: =["SSC","XL1","SSC2","XL2","XLT","XL3","XLT2","XL4","XLT3","XL5"]
                      WrapCount: =2
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DelayItemLoading: =true
                      FillPortions: =5
                      Height: =Parent.Height
                      LayoutMinWidth: =10
                      LoadingSpinner: =LoadingSpinner.Data
                      TemplatePadding: =0
                      TemplateSize: =Self.Width / 5
                      Width: =Parent.Width * 0.90
                    Children:
                    - c_g_layout:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          DropShadow: =DropShadow.None
                          Height: =Parent.TemplateHeight
                          PaddingBottom: =locPadding
                          PaddingLeft: =locPadding
                          PaddingRight: =locPadding
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.TemplateWidth
                        Children:
                        - c_g_oee_parent:
                            Control: GroupContainer
                            Variant: verticalAutoLayoutContainer
                            Properties:
                              DropShadow: =DropShadow.Semilight
                              Height: =Parent.Height - locPadding/2
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutDirection: =LayoutDirection.Vertical
                              LayoutGap: =Parent.Width * 0.005
                              LayoutMode: =LayoutMode.Auto
                              Width: =Parent.Width - locPadding/2
                              X: =Center(Parent.Width,Self.Width)
                            Children:
                            - c_g_oee_line:
                                Control: Label
                                Properties:
                                  Text: =ThisItem.Value
                                  Align: =Align.Center
                                  Color: =varColor5
                                  Fill: =varColor2
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  Size: =Self.Height / 3
                            - c_g_oee_graph:
                                Control: Image
                                Properties:
                                  Image: |-
                                    ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" & 
                                    EncodeUrl(
                                    "{
                                      type: 'radialGauge',
                                      data: {
                                        datasets: [{
                                          data: ["& LookUp(collectLineOEE, line = c_g_oee_line.Text).OEE2 &"],
                                          backgroundColor: getGradientFillHelper('horizontal', ['blue', 'red']),
                                        }]
                                      },
                                      options: {
                                        domain: [0, "& If(LookUp(collectLineOEE, line = c_g_oee_line.Text).OEE2 <= 100, 100, LookUp(collectLineOEE, line = c_g_oee_line.Text).OEE2) &"],
                                        trackColor: 'lightgray', 
                                        centerPercentage: 90,
                                        centerArea: {
                                          text: (val) => val + '%',
                                        },
                                      }
                                    }"
                                    )
                                  FillPortions: =3
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                            - c_g_oee_data:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  AlignInContainer: =AlignInContainer.SetByContainer
                                  DropShadow: =DropShadow.None
                                  FillPortions: =4
                                  LayoutAlignItems: =LayoutAlignItems.Stretch
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =10
                                  LayoutMinWidth: =10
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - c_g_oee_d_top:
                                    Control: GroupContainer
                                    Variant: horizontalAutoLayoutContainer
                                    Properties:
                                      AlignInContainer: =AlignInContainer.SetByContainer
                                      DropShadow: =DropShadow.None
                                      LayoutAlignItems: =LayoutAlignItems.Stretch
                                      LayoutGap: =locPadding/2
                                      LayoutMinHeight: =10
                                      LayoutMinWidth: =10
                                      LayoutMode: =LayoutMode.Auto
                                      PaddingBottom: =Self.LayoutGap
                                    Children:
                                    - c_g_oee_built_parent:
                                        Control: GroupContainer
                                        Variant: verticalAutoLayoutContainer
                                        Properties:
                                          AlignInContainer: =AlignInContainer.SetByContainer
                                          LayoutAlignItems: =LayoutAlignItems.Stretch
                                          LayoutDirection: =LayoutDirection.Vertical
                                          LayoutMinHeight: =10
                                          LayoutMinWidth: =10
                                          LayoutMode: =LayoutMode.Auto
                                        Children:
                                        - c_g_oee_built_title:
                                            Control: Label
                                            Properties:
                                              Text: ="Units Built"
                                              Align: =Align.Center
                                              Color: =varColor5
                                              Fill: =varColor3
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 5
                                              Width: =10
                                        - c_g_oee_built:
                                            Control: Label
                                            Properties:
                                              Text: =LookUp(collectLineOEE, line = c_g_oee_line.Text).output*1
                                              Align: =Align.Center
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 4
                                              Width: =10
                                    - c_g_oee_goal_parent:
                                        Control: GroupContainer
                                        Variant: verticalAutoLayoutContainer
                                        Properties:
                                          AlignInContainer: =AlignInContainer.SetByContainer
                                          LayoutAlignItems: =LayoutAlignItems.Stretch
                                          LayoutDirection: =LayoutDirection.Vertical
                                          LayoutMinHeight: =10
                                          LayoutMinWidth: =10
                                          LayoutMode: =LayoutMode.Auto
                                        Children:
                                        - c_g_oee_goal_title:
                                            Control: Label
                                            Properties:
                                              Text: ="Build Goal"
                                              Align: =Align.Center
                                              Color: =varColor5
                                              Fill: =varColor3
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 5
                                              Width: =10
                                        - c_g_oee_goal:
                                            Control: Label
                                            Properties:
                                              Text: =LookUp(collectLineOEE, line = c_g_oee_line.Text).constraint_total
                                              Align: =Align.Center
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 4
                                              Width: =10
                                    - c_g_oee_constraint_parent:
                                        Control: GroupContainer
                                        Variant: verticalAutoLayoutContainer
                                        Properties:
                                          AlignInContainer: =AlignInContainer.SetByContainer
                                          LayoutAlignItems: =LayoutAlignItems.Stretch
                                          LayoutDirection: =LayoutDirection.Vertical
                                          LayoutMinHeight: =10
                                          LayoutMinWidth: =10
                                          LayoutMode: =LayoutMode.Auto
                                        Children:
                                        - c_g_oee_constraint_title:
                                            Control: Label
                                            Properties:
                                              Text: ="Hourly Target"
                                              Align: =Align.Center
                                              Color: =varColor5
                                              Fill: =varColor3
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 5.5
                                              Width: =10
                                        - c_g_oee_constraint:
                                            Control: Label
                                            Properties:
                                              Text: =LookUp(collectLineOEE, line = c_g_oee_line.Text).constraint_average
                                              Align: =Align.Center
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 4
                                              Width: =10
                                - c_g_oee_d_bottom:
                                    Control: GroupContainer
                                    Variant: horizontalAutoLayoutContainer
                                    Properties:
                                      AlignInContainer: =AlignInContainer.SetByContainer
                                      DropShadow: =DropShadow.None
                                      LayoutAlignItems: =LayoutAlignItems.Stretch
                                      LayoutGap: =locPadding/2
                                      LayoutMinHeight: =10
                                      LayoutMinWidth: =10
                                      LayoutMode: =LayoutMode.Auto
                                      PaddingBottom: =Self.LayoutGap
                                    Children:
                                    - c_g_oee_runtime_parent:
                                        Control: GroupContainer
                                        Variant: verticalAutoLayoutContainer
                                        Properties:
                                          AlignInContainer: =AlignInContainer.SetByContainer
                                          LayoutAlignItems: =LayoutAlignItems.Stretch
                                          LayoutDirection: =LayoutDirection.Vertical
                                          LayoutMinHeight: =10
                                          LayoutMinWidth: =10
                                          LayoutMode: =LayoutMode.Auto
                                        Children:
                                        - c_g_oee_runtime_title:
                                            Control: Label
                                            Properties:
                                              Text: ="Runtime"
                                              Align: =Align.Center
                                              Color: =varColor5
                                              Fill: =varColor3
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 5
                                              Width: =10
                                        - c_g_oee_runtime:
                                            Control: Label
                                            Properties:
                                              Text: =RoundDown(LookUp(collectLineOEE, line = c_g_oee_line.Text).runtime_hours,0) &"H "& Mod(LookUp(collectLineOEE, line = c_g_oee_line.Text).runtime_hours*60,60) & "m"
                                              Align: =Align.Center
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 4
                                              Width: =10
                                    - c_g_oee_downtime_parent:
                                        Control: GroupContainer
                                        Variant: verticalAutoLayoutContainer
                                        Properties:
                                          AlignInContainer: =AlignInContainer.SetByContainer
                                          LayoutAlignItems: =LayoutAlignItems.Stretch
                                          LayoutDirection: =LayoutDirection.Vertical
                                          LayoutMinHeight: =10
                                          LayoutMinWidth: =10
                                          LayoutMode: =LayoutMode.Auto
                                        Children:
                                        - c_g_oee_downtime_title:
                                            Control: Label
                                            Properties:
                                              Text: ="Planned Downtime"
                                              Align: =Align.Center
                                              Color: =varColor5
                                              Fill: =varColor3
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 5.5
                                              Width: =10
                                        - c_g_oee_downtime:
                                            Control: Label
                                            Properties:
                                              Text: =RoundDown(LookUp(collectLineOEE, line = c_g_oee_line.Text).downtime_planned/60,0) &"H "& Mod(LookUp(collectLineOEE, line = c_g_oee_line.Text).downtime_planned,60) & "m"
                                              Align: =Align.Center
                                              FillPortions: =1
                                              Font: =Font.Verdana
                                              LayoutMinHeight: =10
                                              LayoutMinWidth: =10
                                              Size: =Self.Height / 3.5
                                              Width: =10
