- hr_layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutGap: =
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
      X: =
    Children:
    - hr_header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =varColor1
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =varPadding
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =varPadding
          PaddingLeft: =varPadding
          PaddingRight: =varPadding
          PaddingTop: =varPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - hr_collect:
            Control: Classic/Button
            Properties:
              OnSelect: |-
                =/*Start*/
                Set(varLoading,{Visible: true, Value: 1, Text: "Loading"});

                /*Capture Local Date Selection*/
                UpdateContext({
                    locEndDate: hr_start_date.SelectedDate,
                    locStartDate: hr_start_date.SelectedDate
                });

                /*Check if collections need updating*/
                Set(varUpdateProduction,
                    Or(
                        Not(First(Sort(Production,ID,SortOrder.Descending)).ID = First(Sort(collectProduction,id,SortOrder.Descending)).id),
                        Not(varEndDate = locEndDate),
                        Not(varStartDate = locStartDate)
                    )
                );
                Set(varUpdateDowntime,
                    Or(    
                        Not(First(Sort(Downtime,ID,SortOrder.Descending)).ID = First(Sort(collectDowntime,id,SortOrder.Descending)).id),
                        Not(varEndDate = locEndDate),
                        Not(varStartDate = locStartDate)
                    )
                );

                /*Set collection dates from selected local dates*/
                If( Not(varEndDate = locEndDate), Set(varEndDate, locEndDate));
                If( Not(varStartDate = locStartDate), Set(varStartDate, locStartDate));


                /*Collect Production*/
                Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Production Data"});
                If(varUpdateProduction,
                    If(
                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,
                        Set(varLoading,{Visible: true, Value: 33, Text: "Retrieving Production Data"});
                        ClearCollect(collectProduction,
                            ForAll(
                                Filter(Production,
                                    Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                    Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                    goal: Value(ThisRecord.Hourly_Goal),
                                    amount_built: Value(ThisRecord.Amount_Built),
                                    unit_starting: Value(ThisRecord.Unit_Starting),
                                    unit_ending: Value(ThisRecord.Unit_Ending),
                                    reject_labels: Value(ThisRecord.Reject_Labels),
                                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                    reject_units: Value(ThisRecord.Reject_Units),
                                    qa_units: Value(ThisRecord.QA_Units),
                                    safety: Value(ThisRecord.Safety),
                                    quality: Value(ThisRecord.Quality)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,
                        Set(varLoading,{Visible: true, Value: 33, Text: "Parsing PowerAutomate Flow for Production Data"});
                        ClearCollect(collectProduction,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_units_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    hour_ending: DateTimeValue(Value._hour_ending),
                                    hour_starting: DateTimeValue(Value._hour_starting),
                                    goal: Value(Value._goal),
                                    amount_built: Value(Value._amount_built),
                                    unit_starting: Value(Value._unit_starting),
                                    unit_ending: Value(Value._unit_ending),
                                    reject_labels: Value(Value._reject_labels),
                                    reject_cartridges: Value(Value._reject_cartridges),
                                    reject_units: Value(Value._reject_units),
                                    qa_units: Value(Value._qa),
                                    safety: Value(Value._safety),
                                    quality: Value(Value._quality)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,
                        Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Production Dataset 1"});
                        Collect(material_1,
                            Sort(
                                Filter(Production,
                                    And(
                                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Hour_Ending,
                                SortOrder.Ascending
                            )
                        );

                        Collect(material_2,
                        Set(varLoading,{Visible: true, Value: 35, Text: "Collecting Production Dataset 2"});
                            Sort(
                                Filter(Production,
                                    And(
                                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Hour_Ending,
                                SortOrder.Descending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 40, Text: "Joining Production Dataset 1"});
                        ClearCollect(fusion, material_1);
                        
                        Set(varLoading,{Visible: true, Value: 45, Text: "Joining Production Dataset 2"});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );
                        
                        Set(varLoading,{Visible: true, Value: 50, Text: "Collecting Joined Production Data"});
                        ClearCollect(
                            collectProduction,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                    goal: Value(ThisRecord.Hourly_Goal),
                                    amount_built: Value(ThisRecord.Amount_Built),
                                    unit_starting: Value(ThisRecord.Unit_Starting),
                                    unit_ending: Value(ThisRecord.Unit_Ending),
                                    reject_labels: Value(ThisRecord.Reject_Labels),
                                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                    reject_units: Value(ThisRecord.Reject_Units),
                                    qa_units: Value(ThisRecord.QA_Units),
                                    safety: Value(ThisRecord.Safety),
                                    quality: Value(ThisRecord.Quality)
                                }
                            )
                        );
                        
                        Set(varLoading,{Visible: true, Value: 55, Text: "Garbage Collection"});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    )
                );

                /*Collect Downtime*/
                Set(varLoading,{Visible: true, Value: 60, Text: "Collecting Downtime Data"});
                If(varUpdateDowntime,
                    If(
                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,
                        Set(varLoading,{Visible: true, Value: 66, Text: "Retrieving Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Filter(Downtime,
                                    Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                    Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                ),
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,
                        Set(varLoading,{Visible: true, Value: 66, Text: "Parsing PowerAutomate Flow for Downtime Data"});
                        ClearCollect(collectDowntime,
                            ForAll(
                                Table(
                                    ParseJSON(
                                        flow_get_downtime_range_v2.Run(
                                            Text("All"),
                                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                        ).output
                                    )
                                ),
                                {
                                    id: Value(Value._ID),
                                    shift: Text(Value._shift),
                                    line: Text(Value._line),
                                    lot: Text(Value._lot),
                                    catalog: Text(Value._catalog),
                                    size: Text(Value._size),
                                    started: DateTimeValue(Value._started),
                                    ended: DateTimeValue(Value._ended),
                                    reason: Text(Value._reason),
                                    total: Value(Value._total),
                                    comments: Text(Value._comments)
                                }
                            )
                        ),

                        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,
                        Set(varLoading,{Visible: true, Value: 60, Text: "Collecting Downtime Dataset 1"});
                        Collect(material_1,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)
                                    )
                                ),
                                Ended,
                                SortOrder.Ascending
                            )
                        );
                        
                        Set(varLoading,{Visible: true, Value: 65, Text: "Collecting Downtime Dataset 2"});
                        Collect(material_2,
                            Sort(
                                Filter(Downtime,
                                    And(
                                        Ended <= DateAdd(varEndDate, 23, TimeUnit.Hours),
                                        Started >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        
                                    )
                                ),
                                Ended,
                                SortOrder.Descending
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 70, Text: "Joining Downtime Dataset 1"});
                        ClearCollect(fusion, material_1);

                        Set(varLoading,{Visible: true, Value: 75, Text: "Joining Downtime Dataset 2"});
                        Collect(fusion,
                            Filter(material_2, Not(ID in material_1.ID))
                        );

                        Set(varLoading,{Visible: true, Value: 80, Text: "Collecting Joined Downtime Data"});
                        ClearCollect(
                            collectDowntime,
                            ForAll(
                                fusion,
                                {
                                    id: Value(ThisRecord.ID),
                                    shift: Text(ThisRecord.Shift_Letter),
                                    line: Text(ThisRecord.Line.Value),
                                    lot: Text(ThisRecord.Lot),
                                    catalog: Text(ThisRecord.Catalog),
                                    size: Text(ThisRecord.Size),
                                    started: DateTimeValue(ThisRecord.Started),
                                    ended: DateTimeValue(ThisRecord.Ended),
                                    reason: Text(ThisRecord.Reason.Value),
                                    total: Value(ThisRecord.Total_Downtime),
                                    comments: Text(ThisRecord.Comments)
                                }
                            )
                        );

                        Set(varLoading,{Visible: true, Value: 85, Text: "Garbage Collection"});
                        Clear(fusion);
                        Clear(material_1);
                        Clear(material_2);
                    )
                );

                Set(varLoading,{Visible: true, Value: 95, Text: "Finishing up"});
                Select(hr_update);
              Text: ="collect"
              Visible: =false
              X: =20
              Y: =20
        - hr_update:
            Control: Classic/Button
            Properties:
              OnSelect: |-
               =/*Update Code*/
                Set(varLoading,{Visible: true, Value: 10, Text: "Updating"});

                /*Today and Now function updates*/
                Set(varNowHour, Hour(Now()));
                Set(varNowDay, Today());

                /*Create and reset Schema for displaying hourly informaiton*/
                ClearCollect(
                    collectHourlySchema,
                    {
                        SCH_Hour_Starting: DateAdd(DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),0,0,0), -1, TimeUnit.Hours),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),0,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),0,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),1,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),1,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),2,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),2,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),3,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),3,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),4,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),4,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),5,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),5,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),6,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),6,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),7,0,0),
                        SCH_Shift_Letter: "C"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),7,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),8,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),8,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),9,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),9,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),10,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),10,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),11,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),11,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),12,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),12,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),13,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),13,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),14,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),14,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),15,0,0),
                        SCH_Shift_Letter: "A"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),15,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),16,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),16,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),17,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),17,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),18,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),18,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),19,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),19,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),20,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),20,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),21,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),21,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),22,0,0),
                        SCH_Shift_Letter: "B"
                    },
                    {
                        SCH_Hour_Starting: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),22,0,0),
                        SCH_Hour_Ending: DateTime(Year(locStartDate),Month(locStartDate),Day(locStartDate),23,0,0),
                        SCH_Shift_Letter: "B"
                    }
                );


                /*Join Schema (on visible) and Local Unit Data*/
                ClearCollect(collectJoinedProdcutionDisplay,
                    // Iterate through all source records and join to destination collection
                    ForAll(
                
                        // Iterate through the source collection
                        collectHourlySchema,
                        { 
                            // Columns to appear in dataset
                            ID: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).id,
                            
                            Catalog: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).catalog,
                            
                            Lot: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).lot,

                            Line: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).line,
                            
                            Hour_Starting: ThisRecord.SCH_Hour_Starting,

                            Hour_Ending: ThisRecord.SCH_Hour_Ending,
                            
                            Amount_Built: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).amount_built,
                            
                            Goal: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).goal,
                            
                            Unit_Starting: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).unit_starting,
                            
                            Unit_Ending: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).unit_ending,
                            
                            QA: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).qa_units,
                            
                            Reject_Labels: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).reject_labels,
                            
                            Reject_Units: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).reject_units,
                            
                            Reject_Cartridges: 
                                LookUp(
                                    collectProduction,
                                    SCH_Hour_Ending = hour_ending && line = hr_line.Selected.Value).reject_cartridges,
                            
                            Shift_Letter: ThisRecord.SCH_Shift_Letter
                        }
                    )
                );

                /*Join Schema (on visible) and Local Downtime Data*/

                ClearCollect(collectJoinedDowntimeDisplay,
                    // Iterate through all source records and join to destination collection
                    ForAll(
                
                        // Iterate through the source collection
                        collectHourlySchema,
                        { 
                            // Columns to appear in dataset
                            id:
                                LookUp(
                                    collectDowntime,
                                    /*Both the...*/
                                    And(
                                        /*Time and total downtime must be...*/
                                        /*Of the selected Line And,*/
                                        line = hr_line.Selected.Value,
                                        Or(
                                            /*Either the end time is between than the start and end schema hour*/
                                            And(
                                                ended <= SCH_Hour_Ending,
                                                ended > SCH_Hour_Starting
                                            ),
                                            /*Or the start time is between the start and end schema hour*/
                                            And(
                                                started >= SCH_Hour_Starting,
                                                started < SCH_Hour_Ending
                                            ),
                                            /*Or the time passes through this hour*/
                                            And(
                                                started < SCH_Hour_Starting,
                                                ended > SCH_Hour_Starting
                                            )
                                        ),
                                        /*The total downtime must equal the greatest downtime within the hours*/
                                        total = Max(total)
                                    )
                                ).id,

                            line:
                                LookUp(
                                    collectDowntime,
                                    /*Both the...*/
                                    And(
                                        /*Time and total downtime must be...*/
                                        /*Of the selected Line And,*/
                                        line = hr_line.Selected.Value,
                                        Or(
                                            /*Either the end time is between than the start and end schema hour*/
                                            And(
                                                ended <= SCH_Hour_Ending,
                                                ended > SCH_Hour_Starting
                                            ),
                                            /*Or the start time is between the start and end schema hour*/
                                            And(
                                                started >= SCH_Hour_Starting,
                                                started < SCH_Hour_Ending
                                            ),
                                            /*Or the time passes through this hour*/
                                            And(
                                                started < SCH_Hour_Starting,
                                                ended > SCH_Hour_Starting
                                            )
                                        ),
                                        /*The total downtime must equal the greatest downtime within the hours*/
                                        total = Max(total)
                                    )
                                ).line,

                            lot:
                                LookUp(
                                    collectDowntime,
                                    /*Both the...*/
                                    And(
                                        /*Time and total downtime must be...*/
                                        /*Of the selected Line And,*/
                                        line = hr_line.Selected.Value,
                                        Or(
                                            /*Either the end time is between than the start and end schema hour*/
                                            And(
                                                ended <= SCH_Hour_Ending,
                                                ended > SCH_Hour_Starting
                                            ),
                                            /*Or the start time is between the start and end schema hour*/
                                            And(
                                                started >= SCH_Hour_Starting,
                                                started < SCH_Hour_Ending
                                            ),
                                            /*Or the time passes through this hour*/
                                            And(
                                                started < SCH_Hour_Starting,
                                                ended > SCH_Hour_Starting
                                            )
                                        ),
                                        /*The total downtime must equal the greatest downtime within the hours*/
                                        total = Max(total)
                                    )
                                ).lot,
                            
                            catalog:
                                LookUp(
                                    collectDowntime,
                                    /*Both the...*/
                                    And(
                                        /*Time and total downtime must be...*/
                                        /*Of the selected Line And,*/
                                        line = hr_line.Selected.Value,
                                        Or(
                                            /*Either the end time is between than the start and end schema hour*/
                                            And(
                                                ended <= SCH_Hour_Ending,
                                                ended > SCH_Hour_Starting
                                            ),
                                            /*Or the start time is between the start and end schema hour*/
                                            And(
                                                started >= SCH_Hour_Starting,
                                                started < SCH_Hour_Ending
                                            ),
                                            /*Or the time passes through this hour*/
                                            And(
                                                started < SCH_Hour_Starting,
                                                ended > SCH_Hour_Starting
                                            )

                                        ),
                                        /*The total downtime must equal the greatest downtime within the hours*/
                                        total = Max(total)
                                    )
                                ).catalog,
                            
                            started: ThisRecord.SCH_Hour_Starting,
                            ended: ThisRecord.SCH_Hour_Ending,

                            reason:
                                First(
                                    Sort(
                                        Sort(
                                            AddColumns(
                                                Filter(
                                                  collectDowntime,
                                                    /*Both the...*/
                                                    And(
                                                        /*Time and total downtime must be...*/
                                                        /*Of the selected Line And,*/
                                                        line = hr_line.Selected.Value,
                                                        Or(
                                                            /*Either the end time is between than the start and end schema hour*/
                                                            And(
                                                                ended <= SCH_Hour_Ending,
                                                                ended > SCH_Hour_Starting
                                                            ),
                                                            /*Or the start time is between the start and end schema hour*/
                                                            And(
                                                                started >= SCH_Hour_Starting,
                                                                started < SCH_Hour_Ending
                                                            ),
                                                            /*Or the time passes through this hour*/
                                                            And(
                                                                started < SCH_Hour_Starting,
                                                                ended > SCH_Hour_Starting
                                                            )
                                                        )
                                                    )
                                                ),
                                                Time_Calc,
                                                If(
                                                    And(
                                                        started >= SCH_Hour_Starting,
                                                        ended <= SCH_Hour_Ending
                                                    ),
                                                    total,
                                                    total -
                                                    If(
                                                        started < SCH_Hour_Starting,
                                                        DateDiff(started, SCH_Hour_Starting, TimeUnit.Minutes),
                                                        0
                                                    ) +
                                                    If(
                                                        ended > SCH_Hour_Ending,
                                                        DateDiff(ended, SCH_Hour_Ending, TimeUnit.Minutes),
                                                        0
                                                    )
                                                )
                                            ),
                                            Time_Calc,
                                            SortOrder.Descending
                                        ),
                                        total,
                                        SortOrder.Descending
                                    )
                                ).reason,
                            
                            total:
                                If(                   
                                    !IsBlank(
                                        LookUp(
                                            collectDowntime,
                                            And(
                                                /*Of the selected Line And,*/
                                                line = hr_line.Selected.Value,
                                                Or(
                                                    /*Either the end time is between than the start and end schema hour*/
                                                    And(
                                                        ended <= SCH_Hour_Ending,
                                                        ended > SCH_Hour_Starting
                                                    ),
                                                    /*Or the start time is between the start and end schema hour*/
                                                    And(
                                                        started >= SCH_Hour_Starting,
                                                        started < SCH_Hour_Ending
                                                    ),
                                                    /*Or the time passes through this hour*/
                                                    And(
                                                        started < SCH_Hour_Starting,
                                                        ended > SCH_Hour_Starting
                                                    )
                                                )
                                            )
                                        )
                                    ),

                                    Sum(
                                        Filter(
                                            collectDowntime,
                                            And(
                                                /*Of the selected Line And,*/
                                                line = hr_line.Selected.Value,
                                                Or(
                                                    /*Either the end time is between than the start and end schema hour*/
                                                    And(
                                                        ended <= SCH_Hour_Ending,
                                                        ended > SCH_Hour_Starting
                                                    ),
                                                    /*Or the start time is between the start and end schema hour*/
                                                    And(
                                                        started >= SCH_Hour_Starting,
                                                        started < SCH_Hour_Ending
                                                    ),
                                                    /*Or the time passes through this hour*/
                                                    And(
                                                        started < SCH_Hour_Starting,
                                                        ended > SCH_Hour_Starting
                                                    )
                                                )
                                            )
                                        ),
                                        /*Difference between endtime and start time*/
                                        DateDiff(
                                            /*find the max starting time for that hour*/
                                            Max(
                                                started,
                                                DateTime(
                                                    Year(started),Month(SCH_Hour_Starting),Day(SCH_Hour_Starting),
                                                    Hour(SCH_Hour_Starting),0,0
                                                )
                                            ),
                                            /*Find the min ending time for that hour*/
                                            Min(
                                                ended,
                                                DateTime(
                                                    Year(ended),Month(SCH_Hour_Ending),Day(SCH_Hour_Ending),
                                                    Hour(SCH_Hour_Ending),0,0
                                                )
                                            ),
                                            TimeUnit.Minutes
                                        )
                                    )
                                ),
                            
                            comments:
                                LookUp(
                                    collectDowntime,
                                    /*Both the...*/
                                    And(
                                        /*Time and total downtime must be...*/
                                        /*Of the selected Line And,*/
                                        line = hr_line.Selected.Value,
                                        Or(
                                            /*Either the end time is between than the start and end schema hour*/
                                            And(
                                                ended <= SCH_Hour_Ending,
                                                ended > SCH_Hour_Starting
                                            ),
                                            /*Or the start time is between the start and end schema hour*/
                                            And(
                                                started >= SCH_Hour_Starting,
                                                started < SCH_Hour_Ending
                                            ),
                                            /*Or the time passes through this hour*/
                                            And(
                                                started < SCH_Hour_Starting,
                                                ended > SCH_Hour_Starting
                                            )
                                        ),
                                        /*The total downtime must equal the greatest downtime within the hours*/
                                        total = Max(total)
                                    )
                                ).comments,

                            shift: ThisRecord.SCH_Shift_Letter
                        }
                    )
                );


                /*Clear for garbage collection*/
                Set(varLoading,{Visible: true, Value: 95, Text: "Garbage Collection"});

                UpdateContext({
                    locDefaultProductionFilter: Blank(),
                    locDefaultDowntimeFilter: Blank()
                });

                Clear(collectHourlySchema);

                /*Stop Loading Prompt*/
                Set(varLoading,{Visible: true, Value: 100, Text: "Completed"});
                Set(varLoading,{Visible: false, Value: -1, Text: "Not Loading"});
              Text: ="update"
              Visible: =false
              X: =20
              Y: =20
        - hr_logo:
            Control: Image
            Properties:
              Image: =LOGO_MSIG_SBlue_FIT_ALPHA
              FillPortions: =1
              LayoutMinHeight: =1
              LayoutMinWidth: =1
              Width: =10
        - hr_h_title:
            Control: Label
            Properties:
              Text: ="Encapsualtion Daily Managmenet System"
              Align: =Align.Center
              Color: =varColor5
              FillPortions: =6
              LayoutMinHeight: =1
              LayoutMinWidth: =1
              Size: =Self.Height / 2
        - hr_h_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =varPadding
              LayoutJustifyContent: =LayoutJustifyContent.Center
              LayoutMinHeight: =1
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
              Width: =hr_h_n_reload.Width * 3 + varPadding * 4
            Children:
            - hr_h_n_reload:
                Control: Image
                Properties:
                  OnSelect: |-
                    =/*Start*/
                      Set(varLoading,{Visible: true, Value: 1, Text: "Loading"});

                      UpdateContext({
                          locStartDate: hr_start_date.SelectedDate,
                          locEndDate: hr_start_date.SelectedDate
                      });

                      /*Collect Production*/
                      If(
                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 10,
                          Set(varLoading,{Visible: true, Value: 25, Text: "Collecting Production Data"});
                          ClearCollect(collectProduction,
                              ForAll(
                                  Filter(Production,
                                      Hour_Ending <= DateAdd(locEndDate, 23, TimeUnit.Hours),
                                      Hour_Starting >= DateAdd(locStartDate, -1, TimeUnit.Hours)
                                  ),
                                  {
                                      id: Value(ThisRecord.ID),
                                      shift: Text(ThisRecord.Shift_Letter),
                                      line: Text(ThisRecord.Line.Value),
                                      lot: Text(ThisRecord.Lot),
                                      catalog: Text(ThisRecord.Catalog),
                                      size: Text(ThisRecord.Size),
                                      hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                      hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                      goal: Value(ThisRecord.Hourly_Goal),
                                      amount_built: Value(ThisRecord.Amount_Built),
                                      unit_starting: Value(ThisRecord.Unit_Starting),
                                      unit_ending: Value(ThisRecord.Unit_Ending),
                                      reject_labels: Value(ThisRecord.Reject_Labels),
                                      reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                      reject_units: Value(ThisRecord.Reject_Units),
                                      qa_units: Value(ThisRecord.QA_Units)
                                  }
                              )
                          ),

                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) > 20,
                          Set(varLoading,{Visible: true, Value: 25, Text: "Parsing PowerAutomate Flow for Production Data"});
                          ClearCollect(collectProduction,
                              ForAll(
                                  Table(
                                      ParseJSON(
                                          flow_get_units_range_v2.Run(
                                              Text("All"),
                                              Text(DateAdd(locEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                              Text(DateAdd(locStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                          ).output
                                      )
                                  ),
                                  {
                                      id: Value(Value._ID),
                                      shift: Text(Value._shift),
                                      line: Text(Value._line),
                                      lot: Text(Value._lot),
                                      catalog: Text(Value._catalog),
                                      size: Text(Value._size),
                                      hour_ending: DateTimeValue(Value._hour_ending),
                                      hour_starting: DateTimeValue(Value._hour_starting),
                                      goal: Value(Value._goal),
                                      amount_built: Value(Value._amount_built),
                                      unit_starting: Value(Value._unit_starting),
                                      unit_ending: Value(Value._unit_ending),
                                      reject_labels: Value(Value._reject_labels),
                                      reject_cartridges: Value(Value._reject_cartridges),
                                      reject_units: Value(Value._reject_units),
                                      qa_units: Value(Value._qa)
                                  }
                              )
                          ),

                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 20,
                          Set(varLoading,{Visible: true, Value: 5, Text: "Collecting Production Dataset 1"});
                          Collect(material_1,
                              Sort(
                                  Filter(Production,
                                      And(
                                          Hour_Starting >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                          Hour_Ending <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                      )
                                  ),
                                  Hour_Ending,
                                  SortOrder.Ascending
                              )
                          );

                          Set(varLoading,{Visible: true, Value: 10, Text: "Collecting Production Dataset 2"});
                          Collect(material_2,
                              Sort(
                                  Filter(Production,
                                      And(
                                          Hour_Starting >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                          Hour_Ending <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                      )
                                  ),
                                  Hour_Ending,
                                  SortOrder.Descending
                              )
                          );

                          
                          Set(varLoading,{Visible: true, Value: 15, Text: "Joining Production Dataset 1"});
                          ClearCollect(fusion, material_1);

                          Set(varLoading,{Visible: true, Value: 20, Text: "Joining Production Dataset 2"});
                          Collect(fusion,
                              Filter(material_2, Not(ID in material_1.ID))
                          );

                          Set(varLoading,{Visible: true, Value: 25, Text: "Collecting Joined Production Data"});
                          ClearCollect(
                              collectProduction,
                              ForAll(
                                  fusion,
                                  {
                                      id: Value(ThisRecord.ID),
                                      shift: Text(ThisRecord.Shift_Letter),
                                      line: Text(ThisRecord.Line.Value),
                                      lot: Text(ThisRecord.Lot),
                                      catalog: Text(ThisRecord.Catalog),
                                      size: Text(ThisRecord.Size),
                                      hour_ending: DateTimeValue(ThisRecord.Hour_Ending),
                                      hour_starting: DateTimeValue(ThisRecord.Hour_Starting),
                                      goal: Value(ThisRecord.Hourly_Goal),
                                      amount_built: Value(ThisRecord.Amount_Built),
                                      unit_starting: Value(ThisRecord.Unit_Starting),
                                      unit_ending: Value(ThisRecord.Unit_Ending),
                                      reject_labels: Value(ThisRecord.Reject_Labels),
                                      reject_cartridges: Value(ThisRecord.Reject_Cartridges),
                                      reject_units: Value(ThisRecord.Reject_Units),
                                      qa_units: Value(ThisRecord.QA_Units)
                                  }
                              )
                          );

                          Set(varLoading,{Visible: true, Value: 26, Text: "Garbage Collection"});
                          Clear(fusion);
                          Clear(material_1);
                          Clear(material_2);
                      );

                      /*Collect Downtime*/
                      If(
                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 10,
                          Set(varLoading,{Visible: true, Value: 50, Text: "Collecting Downtime Data"});
                          ClearCollect(collectDowntime,
                              ForAll(
                                  Filter(Downtime,
                                      Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours),
                                      Started >= DateAdd(locStartDate, -1, TimeUnit.Hours)
                                  ),
                                  {
                                      id: Value(ThisRecord.ID),
                                      shift: Text(ThisRecord.Shift_Letter),
                                      line: Text(ThisRecord.Line.Value),
                                      lot: Text(ThisRecord.Lot),
                                      catalog: Text(ThisRecord.Catalog),
                                      size: Text(ThisRecord.Size),
                                      started: DateTimeValue(ThisRecord.Started),
                                      ended: DateTimeValue(ThisRecord.Ended),
                                      reason: Text(ThisRecord.Reason.Value),
                                      total: Value(ThisRecord.Total_Downtime),
                                      comments: Text(ThisRecord.Comments)
                                  }
                              )
                          ),

                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) > 20,
                          Set(varLoading,{Visible: true, Value: 50, Text: "Parsing PowerAutomate Flow for Downtime Data"});
                          ClearCollect(collectDowntime,
                              ForAll(
                                  Table(
                                      ParseJSON(
                                          flow_get_downtime_range_v2.Run(
                                              Text("All"),
                                              Text(DateAdd(locEndDate, 23,TimeUnit.Hours), "yyyy-mm-dd"),
                                              Text(DateAdd(locStartDate, -1, TimeUnit.Hours), "yyyy-mm-dd")
                                          ).output
                                      )
                                  ),
                                  {
                                      id: Value(Value._ID),
                                      shift: Text(Value._shift),
                                      line: Text(Value._line),
                                      lot: Text(Value._lot),
                                      catalog: Text(Value._catalog),
                                      size: Text(Value._size),
                                      started: DateTimeValue(Value._started),
                                      ended: DateTimeValue(Value._ended),
                                      reason: Text(Value._reason),
                                      total: Value(Value._total),
                                      comments: Text(Value._comments)
                                  }
                              )
                          ),

                          DateDiff( locStartDate, locEndDate, TimeUnit.Days) <= 20,
                          Set(varLoading,{Visible: true, Value: 30, Text: "Collecting Downtime Dataset 1"});
                          Collect(material_1,
                              Sort(
                                  Filter(Downtime,
                                      And(
                                          Started >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                          Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                      )
                                  ),
                                  Ended,
                                  SortOrder.Ascending
                              )
                          );

                          Set(varLoading,{Visible: true, Value: 35, Text: "Collecting Downtime Dataset 2"});
                          Collect(material_2,
                              Sort(
                                  Filter(Downtime,
                                      And(
                                          Started >= DateAdd(locStartDate, -1, TimeUnit.Hours),
                                          Ended <= DateAdd(locEndDate, 23, TimeUnit.Hours)
                                      )
                                  ),
                                  Ended,
                                  SortOrder.Descending
                              )
                          );

                          Set(varLoading,{Visible: true, Value: 40, Text: "Joining Downtime Dataset 1"});
                          ClearCollect(fusion, material_1);

                          Set(varLoading,{Visible: true, Value: 45, Text: "Joining Downtime Dataset 2"});
                          Collect(fusion,
                              Filter(material_2, Not(ID in material_1.ID))
                          );

                          Set(varLoading,{Visible: true, Value: 50, Text: "Collecting Joined Downtime Data"});
                          ClearCollect(
                              collectDowntime,
                              ForAll(
                                  fusion,
                                  {
                                      id: Value(ThisRecord.ID),
                                      shift: Text(ThisRecord.Shift_Letter),
                                      line: Text(ThisRecord.Line.Value),
                                      lot: Text(ThisRecord.Lot),
                                      catalog: Text(ThisRecord.Catalog),
                                      size: Text(ThisRecord.Size),
                                      started: DateTimeValue(ThisRecord.Started),
                                      ended: DateTimeValue(ThisRecord.Ended),
                                      reason: Text(ThisRecord.Reason.Value),
                                      total: Value(ThisRecord.Total_Downtime),
                                      comments: Text(ThisRecord.Comments)
                                  }
                              )
                          );

                          Set(varLoading,{Visible: true, Value: 51, Text: "Garbage Collection"});
                          Clear(fusion);
                          Clear(material_1);
                          Clear(material_2);
                      );

                      Set(varLoading,{Visible: true, Value: 52, Text: "Finshing up"});

                      /*Update*/
                      Select(hr_update);
                  Image: =gblAppIcons.Reload
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =hr_h_n_settings.X - Self.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - hr_h_n_bugs:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Bugs)
                  Image: =gblAppIcons.Bug
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width
                  Y: =Parent.Height/2 - Self.Height/2
            - hr_h_n_settings:
                Control: Image
                Properties:
                  OnSelect: =Navigate(Settings)
                  Image: =gblAppIcons.Settings
                  Height: =Parent.Height * 0.75
                  HoverBorderColor: =ColorFade(varColorYes, 20%)
                  HoverFill: =ColorFade(varColorAccent, 75%)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =Self.Width/2
                  RadiusBottomRight: =Self.Width/2
                  RadiusTopLeft: =Self.Width/2
                  RadiusTopRight: =Self.Width/2
                  Width: =Self.Height
                  X: =Parent.Width * 0.99 - Self.Width - hr_h_n_bugs.Width - Parent.Width * 0.015
                  Y: =Parent.Height/2 - Self.Height/2
            - hr_h_n_user:
                Control: Image
                Properties:
                  Image: |
                    =If(IsBlankOrError(User().Image), gblAppIcons.Employee, User().Image)
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  RadiusBottomLeft: =Self.Height / 2
                  RadiusBottomRight: =Self.Height / 2
                  RadiusTopLeft: =Self.Height / 2
                  RadiusTopRight: =Self.Height / 2
                  Width: =Self.Height
    - hr_body:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =15
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - hr_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =varColor3
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =varPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =varPadding
              PaddingLeft: =varPadding
              PaddingRight: =varPadding
              PaddingTop: =varPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - hr_n_title:
                Control: Text
                Properties:
                  Align: ='TextCanvas.Align'.Center
                  Size: =Self.Height / 3
                  Text: =App.ActiveScreen.Name
                  VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
                  Weight: ='TextCanvas.Weight'.Semibold
                  FillPortions: =1
            - hr_n_seperator:
                Control: Rectangle
                Properties:
                  Height: =1
                  Width: =Parent.Width * 0.95
            - hr_n_gallery:
                Control: Gallery
                Variant: galleryVertical
                Properties:
                  Items: =collectNavigation
                  DelayItemLoading: =true
                  FillPortions: =13
                  Layout: =Layout.Vertical
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  LoadingSpinner: =LoadingSpinner.Data
                  ShowScrollbar: =false
                  TemplatePadding: =0
                  TemplateSize: =(Self.Height - ((Self.AllItemsCount+1) * Self.TemplatePadding)) / Self.AllItemsCount
                Children:
                - hr_n_button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Navigate(ThisItem.ScreenName);
                      Text: =ThisItem.Title
                      Color: =varColor0
                      DisplayMode: =If(App.ActiveScreen = ThisItem.ScreenName, DisplayMode.Disabled, DisplayMode.Edit)
                      Fill: =varColorAccent
                      FontWeight: =FontWeight.Normal
                      Height: =Parent.TemplateHeight - varPadding
                      Size: =Self.Width / 16
                      Width: =Parent.TemplateWidth - Self.BorderThickness
                      X: =Center(Parent.TemplateWidth, Self.Width)
                      Y: =Center(Parent.TemplateHeight, Self.Height)
            - hr_n_footer:
                Control: GroupContainer
                Variant: manualLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =2
                  LayoutMinHeight: =1
                  LayoutMinWidth: =1
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - hr_n_f_text:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =8
                      Text: ="MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                      VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                      Height: =Parent.Height
                      Width: =Parent.Width
        - hr_main:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =11
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =varPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =varPadding
              PaddingLeft: =varPadding
              PaddingRight: =varPadding
              PaddingTop: =varPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - hr_controls:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =varColor4
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutGap: =varPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =varPadding
                  PaddingLeft: =varPadding
                  PaddingRight: =varPadding
                  PaddingTop: =varPadding
                Children:
                - hr_start_date_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Starting Date"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_start_date:
                    Control: DatePicker
                    Properties:
                      OnChange: =Select(hr_collect);
                      FontSize: =Self.Width / 10
                      Format: ="Short"
                      SelectedDate: =varNowDay
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_seperator_2:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - hr_shift_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Shift"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_shift:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(hr_update);
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "C"}
                      FontSize: =Self.Width / 10
                      Items: =["C", "A", "B"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_seperator_3:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - hr_line_title:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 3
                      Text: ="Line"
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_line:
                    Control: DropDown
                    Variant: pcfdataset
                    Properties:
                      OnChange: =Select(hr_update)
                      Appearance: ='DropdownCanvas.Appearance'.FilledDarker
                      DefaultSelectedItems: |-
                        ={Value: "Select a Line"}
                      FontSize: =Self.Width / 10
                      Items: =["Select a Line", "SSC", "SSC2", "XL1", "XL2", "XL3", "XL4", "XL5", "XLT", "XLT2", "XLT3"]
                      FillPortions: =1
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                - hr_seperator_4:
                    Control: Rectangle
                    Properties:
                      Height: =1
                      LayoutMinWidth: =10
                - hr_c_footer:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.None
                      FillPortions: =10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
            - hr_section:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =9
                  LayoutAlignItems: =LayoutAlignItems.Center
                  LayoutGap: =varPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =varPadding
                  PaddingLeft: =varPadding
                  PaddingRight: =varPadding
                  PaddingTop: =varPadding
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - hr_overview:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.Semilight
                      Fill: =varColor3
                      Height: =Parent.Height
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =1
                      LayoutMinWidth: =1
                      LayoutMode: =LayoutMode.Auto
                      Width: =Parent.Width/2
                    Children:
                    - hr_o_goal_title:
                        Control: Label
                        Properties:
                          Text: ="Hourly Goal"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_goal:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                RoundUp(
                                    Average(
                                        Filter(
                                            collectProduction,
                                            Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                            line = hr_line.Selected.Value,
                                            shift = hr_shift.Selected.Value
                                        ),
                                        goal
                                    ),
                                    0
                                ),
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_total_title:
                        Control: Label
                        Properties:
                          Text: ="Total"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_total:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                Sum(
                                    Filter(
                                        collectProduction,
                                        Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                        line = hr_line.Selected.Value,
                                        shift = hr_shift.Selected.Value
                                    ),
                                    amount_built * 1
                                )*1
                                &" / "&
                                Sum(
                                    Filter(
                                        collectProduction,
                                        Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                        line = hr_line.Selected.Value,
                                        shift = hr_shift.Selected.Value
                                    ),
                                    goal
                                )*1,
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_average_title:
                        Control: Label
                        Properties:
                          Text: |-
                            ="Average Built
                            per Hour"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_average:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                RoundUp(
                                    Average(
                                        Filter(
                                            collectProduction,
                                            Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                            line = hr_line.Selected.Value,
                                            shift = hr_shift.Selected.Value
                                        ),
                                        amount_built * 1
                                    ),
                                    0
                                ),
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_reject_title:
                        Control: Label
                        Properties:
                          Text: ="Rejects"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_reject:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                RoundUp(
                                    Sum(
                                        Filter(
                                            collectProduction,
                                            Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                            line = hr_line.Selected.Value,
                                            shift = hr_shift.Selected.Value
                                        ),
                                        (reject_cartridges + reject_units) * 1
                                    ),
                                    0
                                ),
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_downtime_title:
                        Control: Label
                        Properties:
                          Text: ="Downtime"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_downtime:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                RoundUp(
                                    Sum(
                                        Filter(
                                            collectDowntime,
                                            Text(ended, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                            line = hr_line.Selected.Value,
                                            shift = hr_shift.Selected.Value
                                        ),
                                        total * 1
                                    ),
                                    0
                                ),
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_safety_title:
                        Control: Label
                        Properties:
                          Text: ="Safety Incidents"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_safety:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                Sum(
                                    Filter(
                                        collectProduction,
                                        Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                        line = hr_line.Selected.Value,
                                        shift = hr_shift.Selected.Value
                                    ),
                                    safety
                                )*1,
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                    - hr_o_quality_title:
                        Control: Label
                        Properties:
                          Text: ="Quality Incidents"
                          Align: =Align.Center
                          Color: =varColor5
                          Fill: =varColor2
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 12
                    - hr_o_quality:
                        Control: Label
                        Properties:
                          Text: |-
                            =IfError(
                                Sum(
                                    Filter(
                                        collectProduction,
                                        Text(hour_ending, DateTimeFormat.ShortDate) = Text(locStartDate,DateTimeFormat.ShortDate),
                                        line = hr_line.Selected.Value,
                                        shift = hr_shift.Selected.Value
                                    ),
                                    quality * 1
                                )*1,
                                0
                            )
                          Align: =Align.Center
                          Color: =varColor5
                          FillPortions: '=1   '
                          Font: =Font.Verdana
                          LayoutMinHeight: =1
                          LayoutMinWidth: =10
                          Size: =Self.Width / 8
                - hr_units:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.Semilight
                      FillPortions: =If(locExpandUnits, 8, 4.5)
                      Height: =Parent.Height
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =1
                      LayoutMinWidth: =1
                      LayoutMode: =LayoutMode.Auto
                      Width: =Parent.Width/2
                    Children:
                    - hr_u_header:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - hr_u_title:
                            Control: Label
                            Properties:
                              Text: ="Units"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Height / 2
                              Width: =Parent.Width
                              X: =1-1
                              Y: =1-1
                        - hr_u_add:
                            Control: Classic/Button
                            Properties:
                              OnSelect: |-
                                =Set(varHourlyMode, FormMode.New);
                                Set(varHourlyID, Blank());
                                Navigate(Modify_Hourly);
                              Text: ="Add New Entry"
                              Color: =varColor0
                              Fill: =varColorAccent
                              Font: =Font.Verdana
                              Height: =Parent.Height * 0.75
                              HoverColor: =varColor5
                              HoverFill: =ColorFade(Self.Fill, -50%)
                              Size: =Self.Height / 4
                              Width: =Parent.Width * 0.25
                              X: =Parent.Width * 0.01
                              Y: =Parent.Height/2 - Self.Height/2
                        - hr_u_expand:
                            Control: Classic/Icon
                            Variant: 3DPrinting
                            Properties:
                              OnSelect: =UpdateContext({locExpandUnits:!locExpandUnits});
                              Color: =varColorAccent
                              Height: =Parent.Height * 0.75
                              Icon: |-
                                =If(
                                    locExpandUnits,
                                    Icon.CollapseView,
                                    Icon.ExpandView
                                )
                              PaddingBottom: =Self.Width * 0.01
                              PaddingTop: =Self.Width * 0.01
                              Width: =Self.Height
                              X: =Parent.Width * 0.99 - Self.Width
                              Y: =Parent.Height/2 - Self.Height/2
                    - hr_u_columns:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          DropShadow: =DropShadow.None
                          LayoutAlignItems: =LayoutAlignItems.Stretch
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LayoutMode: =LayoutMode.Auto
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - hr_u_c_time:
                            Control: Label
                            Properties:
                              Text: ="Time"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                        - hr_u_c_lot:
                            Control: Label
                            Properties:
                              Text: ="Lot"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1.5
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 8
                        - hr_u_c_total:
                            Control: Label
                            Properties:
                              Text: ="Built"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                        - hr_u_c_goal:
                            Control: Label
                            Properties:
                              Text: ="Goal"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                        - hr_u_c_delta:
                            Control: Label
                            Properties:
                              Text: ="Delta"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                        - hr_u_c_running:
                            Control: Label
                            Properties:
                              Text: ="Total"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                        - hr_u_c_rejects:
                            Control: Label
                            Properties:
                              Text: ="Rejects"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 6
                              Visible: =!locExpandUnits
                        - hr_u_c_start:
                            Control: Label
                            Properties:
                              Text: ="Starting Unit"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                        - hr_u_c_end:
                            Control: Label
                            Properties:
                              Text: ="Ending Unit"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                        - hr_u_c_qa:
                            Control: Label
                            Properties:
                              Text: ="QA Units"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                        - hr_u_c_label:
                            Control: Label
                            Properties:
                              Text: ="Label Rejects"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                        - hr_u_c_cart:
                            Control: Label
                            Properties:
                              Text: ="Cartridge Rejects"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                        - hr_u_c_unit:
                            Control: Label
                            Properties:
                              Text: ="Unit Rejects"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Width / 9
                              Visible: =locExpandUnits
                    - hr_u_gallery:
                        Control: Gallery
                        Variant: galleryVertical
                        Properties:
                          OnSelect: |-
                            =SelectedState;
                            If(
                                hr_u_gallery.Selected.ID = Blank(),
                                
                                    Set(varHourlyID, Blank());
                                        Set(varHourlyMode, FormMode.New);
                                            Navigate(Modify_Hourly);,
                                
                                    Set(varHourlyID, hr_u_gallery.Selected.ID);
                                        Set(varHourlyMode, FormMode.Edit);
                                            Navigate(Modify_Hourly);

                            );
                          Items: |-
                            =Filter(
                                collectJoinedProdcutionDisplay,
                                Shift_Letter = hr_shift.Selected.Value
                                )
                          DelayItemLoading: =true
                          FillPortions: =13.5
                          Layout: =Layout.Vertical
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LoadingSpinner: =LoadingSpinner.Data
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 8
                        Children:
                        - hr_u_g_layout:
                            Control: GroupContainer
                            Variant: horizontalAutoLayoutContainer
                            Properties:
                              DropShadow: =DropShadow.None
                              Height: =Parent.TemplateHeight - hr_u_g_seperator.Height
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutMode: =LayoutMode.Auto
                              RadiusBottomLeft: =0
                              RadiusBottomRight: =0
                              RadiusTopLeft: =0
                              RadiusTopRight: =0
                              Width: =Parent.Width
                              X: =1-1
                              Y: =1-1
                            Children:
                            - hr_u_g_time_parent:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutAlignItems: =LayoutAlignItems.Stretch
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =1
                                  LayoutMinWidth: =1
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - hr_u_g_starting:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_u_gallery);
                                      Text: =TimeValue(ThisItem.Hour_Starting)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Height / 4
                                - hr_u_g_ending:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_u_gallery);
                                      Text: =TimeValue(ThisItem.Hour_Ending)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Height / 4
                            - hr_u_g_lot_parent:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  FillPortions: =1.5
                                  LayoutAlignItems: =LayoutAlignItems.Stretch
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =1
                                  LayoutMinWidth: =1
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - hr_u_g_catalog:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_u_gallery);
                                      Text: =ThisItem.Catalog
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      PaddingLeft: =1
                                      PaddingRight: =1
                                      Size: =Self.Height / 4
                                - hr_u_g_lot:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_u_gallery);
                                      Text: =ThisItem.Lot
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      PaddingLeft: =1
                                      PaddingRight: =1
                                      Size: =Self.Height / 4
                            - hr_u_g_total:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Amount_Built
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: |-
                                    =If (
                                      IsBlank(Value(hr_u_g_total.Text)) || IsBlank(Value(hr_u_g_goal.Text)), RGBA(0,0,0,0),
                                      Value(hr_u_g_total.Text) >= Value(hr_u_g_goal.Text), varColorYes,
                                      Value(hr_u_g_total.Text) < Value(hr_u_g_goal.Text), varColorNo,
                                      varColor5
                                      ) 
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                            - hr_u_g_goal:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Goal
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: |-
                                    =If (
                                      IsBlank(Value(hr_u_g_total.Text)) || IsBlank(Value(hr_u_g_goal.Text)), RGBA(0,0,0,0),
                                      Value(hr_u_g_total.Text) >= Value(hr_u_g_goal.Text), varColorYes,
                                      Value(hr_u_g_total.Text) < Value(hr_u_g_goal.Text), varColorNo,
                                      varColor5
                                      ) 
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                            - hr_u_g_delta:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Amount_Built - ThisItem.Goal
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                            - hr_u_g_running:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: |-
                                    =Sum(
                                        Filter(
                                            collectJoinedProdcutionDisplay,
                                            Shift_Letter = hr_shift.Selected.Value,
                                            Hour_Ending <= ThisItem.Hour_Ending
                                        ),
                                        Amount_Built
                                    )
                                    & Char(10) &
                                    UniChar(9473)&UniChar(9473) 
                                    & Char(10) &
                                    Sum(
                                        Filter(
                                            collectJoinedProdcutionDisplay,
                                            Shift_Letter = hr_shift.Selected.Value,
                                            Hour_Ending <= ThisItem.Hour_Ending
                                        ),
                                        Goal
                                    )
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 6
                            - hr_u_g_rejects:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =If(ThisItem.Reject_Cartridges + ThisItem.Reject_Units = 0 , "", ThisItem.Reject_Cartridges + ThisItem.Reject_Units)
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  FontWeight: =FontWeight.Lighter
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =!locExpandUnits
                            - hr_u_g_startUnit:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Unit_Starting
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                            - hr_u_g_endUnit:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Unit_Ending
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                            - hr_u_g_qa:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.QA
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                            - hr_u_g_endUnit_2:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Reject_Labels
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                            - hr_u_g_endUnit_3:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Reject_Cartridges
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                            - hr_u_g_endUnit_4:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_u_gallery);
                                  Text: =ThisItem.Reject_Units
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Size: =Self.Height / 5
                                  Visible: =locExpandUnits
                        - hr_u_g_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Select(Parent)
                              Height: =Parent.TemplateHeight * 0.020
                              Width: =Parent.TemplateWidth
                              X: =1-1
                              Y: =Parent.TemplateHeight - Self.Height
                - hr_downtime:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.Semilight
                      FillPortions: =4
                      Height: =Parent.Height
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =1
                      LayoutMinWidth: =1
                      LayoutMode: =LayoutMode.Auto
                      Visible: =!locExpandUnits
                      Width: =Parent.Width/2
                    Children:
                    - hr_d_header:
                        Control: GroupContainer
                        Variant: manualLayoutContainer
                        Properties:
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - hr_d_title:
                            Control: Label
                            Properties:
                              Text: ="Downtime"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              Size: =Self.Height / 2
                              Width: =Parent.Width
                        - hr_d_view:
                            Control: Classic/Button
                            Properties:
                              OnSelect: =UpdateContext({locShowAllDowntime:!locShowAllDowntime});
                              Text: =If (locShowAllDowntime, "Show Hourly", "Show All Entries")
                              Color: =varColor0
                              Fill: =varColorAccent
                              Font: =Font.Verdana
                              Height: =Parent.Height * 0.75
                              HoverColor: =varColor5
                              HoverFill: =ColorFade(Self.Fill, -50%)
                              Size: =Self.Height / 4
                              Width: =Parent.Width * 0.25
                              X: =Parent.Width * 0.99 - Self.Width
                              Y: =Parent.Height/2 - Self.Height/2
                        - hr_d_add:
                            Control: Classic/Button
                            Properties:
                              OnSelect: |-
                                =Set(varDowntimeMode, FormMode.New);
                                Navigate(Modify_Downtime);
                              Text: ="Add Downtime"
                              Color: =varColor0
                              Fill: =varColorAccent
                              Font: =Font.Verdana
                              Height: =Parent.Height * 0.75
                              HoverColor: =varColor5
                              HoverFill: =ColorFade(Self.Fill, -50%)
                              Size: =Self.Height / 4
                              Width: =Parent.Width * 0.25
                              X: =Parent.Width * 0.01
                              Y: =Parent.Height/2 - Self.Height/2
                    - hr_d_columns:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          DropShadow: =DropShadow.None
                          LayoutAlignItems: =LayoutAlignItems.Stretch
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LayoutMode: =LayoutMode.Auto
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                        Children:
                        - hr_d_c_time:
                            Control: Label
                            Properties:
                              Text: ="Time"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Height / 4
                        - hr_d_c_lot:
                            Control: Label
                            Properties:
                              Text: ="Lot"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Height / 4
                        - hr_d_c_total:
                            Control: Label
                            Properties:
                              Text: ="Total"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Height / 4
                        - hr_d_c_reason:
                            Control: Label
                            Properties:
                              Text: ="Reason"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Height / 4
                        - hr_d_c_comments:
                            Control: Label
                            Properties:
                              Text: ="Comments"
                              Align: =Align.Center
                              Color: =varColor5
                              Fill: =varColor2
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =1
                              LayoutMinWidth: =1
                              Size: =Self.Height / 4.25
                    - hr_d_gallery:
                        Control: Gallery
                        Variant: galleryVertical
                        Properties:
                          OnSelect: |-
                            =If(
                                locShowAllDowntime,
                                Set(varDowntimeID, hr_d_gallery.Selected.id);
                                    Set(varDowntimeMode, FormMode.Edit);
                                        Navigate(Modify_Downtime);,
                                Notify("To edit downtime from the hourly screen, please show all individual entries. This ensures the program picks up the correct ID#. Thank you!", NotificationType.Information);
                            )
                          Items: |-
                            =Sort(
                                Filter(
                                    If(
                                        locShowAllDowntime,
                                        collectDowntime,
                                        collectJoinedDowntimeDisplay
                                    ),
                                    DateTimeValue(started) >= DateAdd(locStartDate,-1,TimeUnit.Hours),
                                    DateTimeValue(ended) <= DateAdd(locStartDate,23,TimeUnit.Hours),
                                    If (
                                        locShowAllDowntime,
                                        And(
                                            shift = hr_shift.Selected.Value,
                                            line = hr_line.Selected.Value
                                        ),
                                        shift = hr_shift.Selected.Value
                                    )
                                    
                                ),
                                ended,
                                SortOrder.Ascending
                            )
                          DelayItemLoading: =true
                          FillPortions: =14
                          Layout: =Layout.Vertical
                          LayoutMinHeight: =1
                          LayoutMinWidth: =1
                          LoadingSpinner: =LoadingSpinner.Data
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 8
                        Children:
                        - hr_d_g_layout:
                            Control: GroupContainer
                            Variant: horizontalAutoLayoutContainer
                            Properties:
                              DropShadow: =DropShadow.None
                              Height: =Parent.TemplateHeight - hr_u_d_seperator.Height
                              LayoutAlignItems: =LayoutAlignItems.Stretch
                              LayoutMode: =LayoutMode.Auto
                              RadiusBottomLeft: =0
                              RadiusBottomRight: =0
                              RadiusTopLeft: =0
                              RadiusTopRight: =0
                              Width: =Parent.Width
                              X: =1-1
                              Y: =1-1
                            Children:
                            - hr_d_g_time_parent:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  AlignInContainer: =AlignInContainer.SetByContainer
                                  DropShadow: =DropShadow.None
                                  LayoutAlignItems: =LayoutAlignItems.Stretch
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =1
                                  LayoutMinWidth: =1
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - hr_u_g_starting_1:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_d_gallery);
                                      Text: =TimeValue(ThisItem.started)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Height / 4
                                - hr_u_g_ending_1:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_d_gallery);
                                      Text: =TimeValue(ThisItem.ended)
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      Size: =Self.Height / 4
                            - hr_d_g_lot_parent:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  AlignInContainer: =AlignInContainer.SetByContainer
                                  DropShadow: =DropShadow.None
                                  LayoutAlignItems: =LayoutAlignItems.Stretch
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =1
                                  LayoutMinWidth: =1
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - hr_u_g_catalog_1:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_d_gallery);
                                      Text: =ThisItem.catalog
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      PaddingLeft: =1
                                      PaddingRight: =1
                                      Size: =Self.Height / 4
                                - hr_u_g_lot_1:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(hr_d_gallery);
                                      Text: =ThisItem.lot
                                      Align: =Align.Center
                                      Color: =varColor0
                                      Fill: =RGBA(0,0,0,0)
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =1
                                      LayoutMinHeight: =1
                                      LayoutMinWidth: =1
                                      PaddingLeft: =1
                                      PaddingRight: =1
                                      Size: =Self.Height / 4
                            - hr_d_g_total:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_d_gallery);
                                  Text: =ThisItem.total
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: '=If ( Value(Self.Text) >= 45, varColorNo, RGBA(0,0,0,0)) '
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  PaddingRight: =1
                                  Size: =Self.Width / 8
                            - hr_d_g_reason:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_d_gallery);
                                  Text: =ThisItem.reason
                                  Align: =Align.Center
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  PaddingRight: =1
                                  Size: =Self.Width / 12
                            - hr_d_g_comments:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(hr_d_gallery);
                                  Text: =ThisItem.comments
                                  Color: =varColor0
                                  Fill: =RGBA(0,0,0,0)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =1
                                  LayoutMinWidth: =1
                                  Overflow: =Overflow.Scroll
                                  PaddingRight: =1
                                  Size: =Self.Width / 12
                        - hr_u_d_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Select(Parent)
                              Height: =Parent.TemplateHeight * 0.020
                              Width: =Parent.TemplateWidth
                              X: =1-1
                              Y: =Parent.TemplateHeight - Self.Height
