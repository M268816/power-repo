- mh_collect:
    Control: Classic/Button
    Properties:
      OnSelect: "=UpdateContext({locLoading:true});\r\n   \r\n/*Capture Local Date Selection*/\r\nUpdateContext({\r\n    locEndDate: DateValue4.SelectedDate,\r\n    locStartDate: DateValue3.SelectedDate\r\n});\r\n\r\n/*Check if collections need updating*/\r\nSet(varUpdateProduction,\r\n    Or(\r\n        Not(First(Sort(Production,ID,SortOrder.Descending)).ID = First(Sort(collectProduction,id,SortOrder.Descending)).id),\r\n        Not(varEndDate = locEndDate),\r\n        Not(varStartDate = locStartDate)\r\n    )\r\n);\r\n\r\n/*Set collection dates from selected local dates*/\r\nIf( Not(varEndDate = locEndDate), Set(varEndDate, locEndDate));\r\nIf( Not(varStartDate = locStartDate), Set(varStartDate, locStartDate));\r\n\r\n/*Collect Production*/\r\nIf(varUpdateProduction,\r\n    If(\r\n        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 14,\r\n        ClearCollect(collectProduction,\r\n            ForAll(\r\n                Filter(Production,\r\n                    Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),\r\n                    Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)\r\n                ),\r\n                {\r\n                    id: Value(ThisRecord.ID),\r\n                    shift: Text(ThisRecord.Shift_Letter),\r\n                    line: Text(ThisRecord.Line.Value),\r\n                    lot: Text(ThisRecord.Lot),\r\n                    catalog: Text(ThisRecord.Catalog),\r\n                    size: Text(ThisRecord.Size),\r\n                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),\r\n                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),\r\n                    goal: Value(ThisRecord.Hourly_Goal),\r\n                    amount_built: Value(ThisRecord.Amount_Built),\r\n                    unit_starting: Value(ThisRecord.Unit_Starting),\r\n                    unit_ending: Value(ThisRecord.Unit_Ending),\r\n                    reject_labels: Value(ThisRecord.Reject_Labels),\r\n                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),\r\n                    reject_units: Value(ThisRecord.Reject_Units),\r\n                    qa_units: Value(ThisRecord.QA_Units)\r\n                }\r\n            )\r\n        ),\r\n\r\n        DateDiff( varStartDate, varEndDate, TimeUnit.Days) > 21,\r\n        ClearCollect(collectProduction,\r\n            ForAll(\r\n                Table(\r\n                    ParseJSON(\r\n                        flow_get_units_range_v2.Run(\r\n                            Text(\"All\"),\r\n                            Text(DateAdd(varEndDate, 23,TimeUnit.Hours), \"yyyy-mm-dd\"),\r\n                            Text(DateAdd(varStartDate, -1, TimeUnit.Hours), \"yyyy-mm-dd\")\r\n                        ).output\r\n                    )\r\n                ),\r\n                {\r\n                    id: Value(Value._ID),\r\n                    shift: Text(Value._shift),\r\n                    line: Text(Value._line),\r\n                    lot: Text(Value._lot),\r\n                    catalog: Text(Value._catalog),\r\n                    size: Text(Value._size),\r\n                    hour_ending: DateTimeValue(Value._hour_ending),\r\n                    hour_starting: DateTimeValue(Value._hour_starting),\r\n                    goal: Value(Value._goal),\r\n                    amount_built: Value(Value._amount_built),\r\n                    unit_starting: Value(Value._unit_starting),\r\n                    unit_ending: Value(Value._unit_ending),\r\n                    reject_labels: Value(Value._reject_labels),\r\n                    reject_cartridges: Value(Value._reject_cartridges),\r\n                    reject_units: Value(Value._reject_units),\r\n                    qa_units: Value(Value._qa)\r\n                }\r\n            )\r\n        ),\r\n\r\n        DateDiff( varStartDate, varEndDate, TimeUnit.Days) <= 21,\r\n        Collect(material_1,\r\n            Sort(\r\n                Filter(Production,\r\n                    And(\r\n                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),\r\n                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        \r\n                    )\r\n                ),\r\n                Hour_Ending,\r\n                SortOrder.Ascending\r\n            )\r\n        );\r\n\r\n        Collect(material_2,\r\n            Sort(\r\n                Filter(Production,\r\n                    And(\r\n                        Hour_Ending <= DateAdd(varEndDate, 23, TimeUnit.Hours),\r\n                        Hour_Starting >= DateAdd(varStartDate, -1, TimeUnit.Hours)                        \r\n                    )\r\n                ),\r\n                Hour_Ending,\r\n                SortOrder.Descending\r\n            )\r\n        );\r\n\r\n        ClearCollect(fusion, material_1);\r\n\r\n        Collect(fusion,\r\n            Filter(material_2, Not(ID in material_1.ID))\r\n        );\r\n\r\n        ClearCollect(\r\n            collectProduction,\r\n            ForAll(\r\n                fusion,\r\n                {\r\n                    id: Value(ThisRecord.ID),\r\n                    shift: Text(ThisRecord.Shift_Letter),\r\n                    line: Text(ThisRecord.Line.Value),\r\n                    lot: Text(ThisRecord.Lot),\r\n                    catalog: Text(ThisRecord.Catalog),\r\n                    size: Text(ThisRecord.Size),\r\n                    hour_ending: DateTimeValue(ThisRecord.Hour_Ending),\r\n                    hour_starting: DateTimeValue(ThisRecord.Hour_Starting),\r\n                    goal: Value(ThisRecord.Hourly_Goal),\r\n                    amount_built: Value(ThisRecord.Amount_Built),\r\n                    unit_starting: Value(ThisRecord.Unit_Starting),\r\n                    unit_ending: Value(ThisRecord.Unit_Ending),\r\n                    reject_labels: Value(ThisRecord.Reject_Labels),\r\n                    reject_cartridges: Value(ThisRecord.Reject_Cartridges),\r\n                    reject_units: Value(ThisRecord.Reject_Units),\r\n                    qa_units: Value(ThisRecord.QA_Units)\r\n                }\r\n            )\r\n        );\r\n\r\n        Clear(fusion);\r\n        Clear(material_1);\r\n        Clear(material_2);\r\n    )\r\n);\r\n\r\nSelect(mh_update);\r\n\r\nUpdateContext({locLoading: false});"
      Text: ="collect"
      Height: =Parent.Height * 0.05
      Visible: =false
      Width: =Parent.Width * 0.10
      X: =156
      Y: =20
