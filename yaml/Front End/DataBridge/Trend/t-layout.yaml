- t-layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Fill: =gTheme.Background
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
    Children:
    - t-collect:
        Control: Classic/Button
        Properties:
          OnSelect: "=/*Start*/\r\nPatch(rPopups,First(rPopups),{Visible: true, Value: 10, Display_Text: \"Gathering Dates\"});\r\n\r\nSet(gTime,\r\n    {\r\n        Today:Today(),\r\n        Now:Now()\r\n    }\r\n);\r\n\r\n/*Select date range of selected week*/\r\nUpdateContext({\r\n    locWeek: WeekNum('t-date'.SelectedDate),\r\n\r\n    locWeekEnd: \r\n        DateAdd(\r\n            Date(Year('t-date'.SelectedDate), 1, 1) + (locWeek-1)*7 - Weekday(Date(Year('t-date'.SelectedDate), 1, 1)) + 6,\r\n            24,\r\n            TimeUnit.Hours\r\n        ),\r\n\r\n    locWeekStart: Date(Year('t-date'.SelectedDate), 1, 1) + (locWeek-1)*7 - Weekday(Date(Year('t-date'.SelectedDate), 1, 1)) + 2\r\n    \r\n});\r\n\r\nPatch(rPopups,First(rPopups),{Value: 20, Display_Text:\"Collecting Production Data\"});\r\n/*Collect Production Data*/\r\nClear(cProduction);\r\nForAll(\r\n    Filter(Sort(Roll_Data_Filtered_SPL, 'Date', SortOrder.Descending),\r\n        Date >= locWeekStart,\r\n        Date <= locWeekEnd\r\n    ),\r\n    Collect(cProduction,\r\n        {\r\n            ID: ThisRecord.ID,\r\n            Side: Upper(ThisRecord.Pleater),\r\n            Shift: ThisRecord.Shift,\r\n            Lot: ThisRecord.Lot_No,\r\n            Catalog: ThisRecord.Catalog,\r\n            Pleats_Per_Pack: ThisRecord.PleatPerPack,\r\n            Pleat_Height: ThisRecord.Pleat_Height,\r\n            Date: ThisRecord.Date,\r\n            Unit_Starting: ThisRecord.'Begin Cart #',\r\n            Unit_Ending: ThisRecord.'End Cart #',\r\n            Amount_Built: ThisRecord.'End Cart #' - ThisRecord.'Begin Cart #' + 1,\r\n            Reject_Pleats: ThisRecord.Total_Reject_Pleats\r\n        }\r\n    )\r\n);\r\n\r\n/*Collect Downtime Data*/\r\nPatch(rPopups,First(rPopups),{Value: 30, Display_Text:\"Collecting Downtime Data\"});\r\nClear(cDowntime);\r\nForAll(\r\n    Filter(FE_Express_DT_Events,\r\n        DateTime < DateAdd(locWeekEnd, 1, TimeUnit.Days),\r\n        DateTime >= locWeekStart\r\n    ),\r\n    Collect(cDowntime,\r\n        {\r\n            ID: ThisRecord.ID,\r\n            Line: ThisRecord.Pleater,\r\n            Shift: ThisRecord.' Shift',\r\n            DateTime: ThisRecord.DateTime,\r\n            Reason: ThisRecord.' Downtime Reason',\r\n            Downtime_Minutes: ThisRecord.' Downtime Minutes'\r\n        }\r\n    )\r\n);\r\n\r\nSelect('t-update');"
          Text: ="collect"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - t-update:
        Control: Classic/Button
        Properties:
          OnSelect: "=/*Init Default Filters*/\nPatch(rPopups,First(rPopups),{Value: 40, Display_Text: \"Creating Default Filters\"});\n\nUpdateContext({\n    locProdFilter:\n        Filter(cProduction,\n            Date <= locWeekEnd,\n            Date >= locWeekStart\n        ),\n    locDownFilter:\n        Filter(cDowntime,\n            DateTime <= locWeekEnd,\n            DateTime >= locWeekStart            \n        ),      \n    count_of_days:\n        RoundUp(DateDiff(locWeekStart, locWeekEnd, TimeUnit.Days) / 7, 0)\n        * 5\n        + Mod(5 + Weekday(locWeekEnd) - Weekday(locWeekStart), 5)\n});\n\nUpdateContext({\n    distinct_lanes: Distinct(locProdFilter, Side),\n    distinct_lines: Distinct(gLists.Lines, Value)\n});\n\n// Collect Trend Data\nPatch(rPopups,First(rPopups),{Value: 50, Display_Text: \"Gathering OEE2 Data\"});\nClear(collectTrendData);\nForAll(distinct_lanes,\n    With({thisLane: ThisRecord.Value},\n        ForAll(Distinct(Filter(locProdFilter, thisLane in Side), Pleats_Per_Pack),\n            With({thisPleatPerPack: ThisRecord.Value},                \n                Collect(collectTrendData,\n                    {\n                        lane: thisLane,\n                        pleats_per_pack: thisPleatPerPack,\n                        total_packs: Sum(Filter(locProdFilter, thisLane = Side, Pleats_Per_Pack = thisPleatPerPack), Amount_Built),\n                        pleats_per_hour: LookUp(collectPleaterSpeeds, thisLane in Line).Pleats_Per_Hour,                                \n                        pack_per_hour:\n                            IfError(\n                                Round(\n                                    LookUp(collectPleaterSpeeds, thisLane in Line).Pleats_Per_Hour\n                                    / thisPleatPerPack,\n                                    4\n                                ),\n                                0\n                            )\n                    }\n                )\n            )\n        )\n    )\n);\nClear(collectTrend);\nForAll(distinct_lines,\n    With({thisLine: ThisRecord.Value},\n        If(\n            // If lane in line has pack_per_hour data\n            IfError(\n                Round(\n                    Average(\n                        Filter(collectTrendData, lane in thisLine),\n                        pack_per_hour\n                    ),\n                    4\n                ) > 0,\n                false\n            ),\n            // Collect the trend for the line\n            Collect(collectTrend,\n                {\n                    line: thisLine,\n                    total_packs: 0,\n                    OEE2: 0,\n                    pack_per_hour: Round(Average(Filter(collectTrendData, lane in thisLine), pack_per_hour),4),\n                    total_runtime: 48 * count_of_days,\n                    total_downtime: Round(Sum(Filter(locDownFilter, thisLine in Line, Reason in gLists.Downtime_Reasons_Planned),Downtime_Minutes)/60,4),\n                    planned_packs:\n                        Round(\n                            Average(Filter(collectTrendData, lane in thisLine), pack_per_hour)\n                            * (\n                                (48 * count_of_days)\n                                - Round(Sum(Filter(locDownFilter, thisLine in Line, Reason in gLists.Downtime_Reasons_Planned),Downtime_Minutes)/60,4)\n                            ),\n                            4\n                        )\n                }\n            );\n        )\n    \n    )\n);\nForAll( // Lines\n    Distinct(collectTrend, line),\n    With({thisLine: ThisRecord.Value},\n        If(\n            Sum(Filter(collectTrendData, lane in thisLine),total_packs) > 0,\n\n            Patch(collectTrend, First(Filter(collectTrend, line = thisLine)),\n                {\n                    total_packs: Sum(Filter(collectTrendData, lane in thisLine),total_packs),\n                    \n                    OEE2:\n                        IfError(\n                            Round(\n                                Sum(Filter(collectTrendData, lane in thisLine),total_packs)\n                                / Sum(Filter(collectTrend, line = thisLine),planned_packs) \n                                * 100,\n                                4\n                            ),\n                            0\n                        )\n                }\n            )\n        )\n    )\n);\nPatch(collectTrend, Defaults(collectTrend),\n    {\n        line: \"Average\",\n        pack_per_hour:Round(Average(collectTrend, pack_per_hour),4),\n        total_packs: Sum(collectTrend, total_packs),\n        planned_packs: Round(Sum(collectTrend, planned_packs),4),\n        total_runtime: Sum(collectTrend, total_runtime),\n        total_downtime: Sum(collectTrend, total_downtime),\n        OEE2:\n            IfError(\n                Round(\n                    Sum(collectTrend, total_packs)\n                    / Sum(collectTrend, planned_packs)\n                    * 100,\n                    4\n                ),\n                0\n            )   \n    }\n);\n\nPatch(rPopups,First(rPopups),{Value: 70, Display_Text: \"Patching Week \"&locWeek&\" OEE2 into Database\"});\n/*Patch data into OEE2 sharepoint list*/\nForAll(collectTrend,\n    With({thisLine:ThisRecord.line, thisOEE: Round(ThisRecord.OEE2,0)},\n        If(\n            IsBlankOrError(\n                LookUp(\n                    FE_Analysis,\n                    Week = locWeek &&\n                    Year = Year(locWeekEnd) &&\n                    Line.Value = thisLine\n                )\n            ),\n\n            Patch(\n                FE_Analysis,\n                Defaults(FE_Analysis),\n                {\n                    OEE2: thisOEE,\n                    Week: locWeek,\n                    Year: Year(locWeekEnd),\n                    Line: {Value: thisLine}\n                }\n            ),\n\n            Patch(\n                FE_Analysis,\n                LookUp(\n                    FE_Analysis,\n                    Week = locWeek &&\n                    Year = Year(locWeekEnd) &&\n                    Line.Value = thisLine\n                ),\n                {\n                    OEE2: thisOEE\n                }\n            )\n        )\n    )\n);\n\nPatch(rPopups,First(rPopups),{Visible: false, Value: -1, Display_Text: \"Finishing Up\", Popup: \"\"});"
          Text: ="update"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - t-header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =gTheme.Primary
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =gPadding
          LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =gPadding
          PaddingLeft: =gPadding
          PaddingRight: =gPadding
          PaddingTop: =gPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - t-logo:
            Control: Image
            Properties:
              Image: =If(gTheme.Mode = "Light", logo1, logo2)
              LayoutMinHeight: =10
              Width: ='t-n-title'.Width
        - t-title:
            Control: Label
            Properties:
              Text: =APP_NAME
              Color: =gTheme.Text_Light
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Size: =Self.Height / 3
        - t-mode:
            Control: Classic/Icon
            Variant: HalfFilledCircle
            Properties:
              OnSelect: =If(gTheme.Mode = "Light", Set(gTheme, gThemeMode.Dark),Set(gTheme, gThemeMode.Light))
              Color: =gTheme.Text_On_Dark
              Height: =10
              HoverColor: =gTheme.Text_On_Light
              Icon: =Icon.HalfFilledCircle
              LayoutMinHeight: =10
              PaddingBottom: =4
              PaddingLeft: =4
              PaddingRight: =4
              PaddingTop: =4
              Rotation: =If(gTheme.Mode = "Light", 0, 180)
              Width: =Self.Height
        - t-bugs:
            Control: Image
            Properties:
              OnSelect: =Navigate(Bugs,ScreenTransition.Fade)
              Image: =gIcons.Bug
              HoverFill: =gTheme.Pri_Complement
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
        - t-user-img:
            Control: Image
            Properties:
              Image: =User().Image
              Fill: =RGBA(0, 0, 0, 1)
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
    - t-main:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =11
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - t-navigation:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =gTheme.Midground
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gPadding
              PaddingLeft: =gPadding
              PaddingRight: =gPadding
              PaddingTop: =gPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - t-n-title:
                Control: Label
                Properties:
                  Text: =App.ActiveScreen.Name
                  Align: =Align.Center
                  Color: =gTheme.Text_On_Light
                  LayoutMinWidth: =10
                  Size: =Self.Height / 3
            - t-n-separator-0:
                Control: Rectangle
                Properties:
                  Fill: =gTheme.Pri_Complement
                  Height: =Round(gPadding/2,0)
                  LayoutMinWidth: =10
                  Width: =10
            - t-n-gallery:
                Control: Gallery
                Variant: galleryVertical
                Properties:
                  Items: =cNavigation
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DelayItemLoading: =true
                  Layout: =Layout.Vertical
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LoadingSpinner: =LoadingSpinner.Data
                  TemplatePadding: =gPadding
                  TemplateSize: =40
                Children:
                - t-n-g-button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Navigate(ThisItem.Screen,ScreenTransition.Fade)
                      Text: =ThisItem.Label
                      BorderThickness: =1
                      Color: =gTheme.Text_Dark
                      DisplayMode: =If(App.ActiveScreen.Name = ThisItem.Screen.Name, DisplayMode.Disabled, DisplayMode.Edit)
                      Fill: =gTheme.Accent
                      FontWeight: =FontWeight.Normal
                      Height: =Parent.TemplateHeight
                      RadiusBottomLeft: =100
                      RadiusBottomRight: =100
                      RadiusTopLeft: =100
                      RadiusTopRight: =100
                      Size: =Self.Height / 4
                      Width: =Parent.TemplateWidth
            - t-n-legal:
                Control: Label
                Properties:
                  Text: |-
                    =
                    "MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                    &Char(13)&Char(13)&
                    "© 2025 EMD Millipore. All rights reserved."
                  Align: =Align.Center
                  Color: =gTheme.Text_On_Light
                  Height: =200
                  LayoutMinWidth: =10
                  Size: =Self.Height / 24
                  VerticalAlign: =VerticalAlign.Bottom
        - t-filter-parent:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =gTheme.Background
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gPadding
              PaddingLeft: =gPadding
              PaddingRight: =gPadding
              PaddingTop: =gPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - t-filters:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =gTheme.Foreground
                  FillPortions: =0
                  Height: =Parent.Height * 0.5
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutGap: =gPadding
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =gPadding
                  PaddingLeft: =gPadding
                  PaddingRight: =gPadding
                Children:
                - t-t-title:
                    Control: Label
                    Properties:
                      Text: ="Filters"
                      Align: =Align.Center
                      AlignInContainer: =AlignInContainer.Center
                      Color: =gTheme.Text_Light
                      Fill: =gTheme.Secondary
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                      Width: =Parent.Width
                - t-date-label:
                    Control: Label
                    Properties:
                      Text: ="Date"
                      Align: =Align.Center
                      Color: =gTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                - t-date:
                    Control: Classic/DatePicker
                    Properties:
                      BorderThickness: =1
                      Color: =gTheme.Text_On_Light
                      Fill: =gTheme.Background
                      FocusedBorderThickness: =1
                      IconBackground: =gTheme.Sec_Complement
                      IconFill: =gTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 5
                - t-t-separator-0:
                    Control: Rectangle
                    Properties:
                      Fill: =gTheme.Pri_Complement
                      Height: =Round(gPadding/2,0)
                      LayoutMinWidth: =10
                      Width: =10
                - t-line-label:
                    Control: Label
                    Properties:
                      Text: ="Line"
                      Align: =Align.Center
                      Color: =gTheme.Text_On_Light
                      LayoutMinWidth: =10
                      Size: =Self.Height / 4
                - t-line:
                    Control: Classic/DropDown
                    Properties:
                      Items: =Table(["Average"],gLists.Lines)
                      ChevronBackground: =gTheme.Sec_Complement
                      ChevronFill: =gTheme.Text_Dark
                      Color: =gTheme.Text_On_Light
                      Fill: =gTheme.Background
                      LayoutMinWidth: =10
                      Size: =Self.Height / 5
                - t-t-separator-1:
                    Control: Rectangle
                    Properties:
                      Fill: =gTheme.Pri_Complement
                      Height: =Round(gPadding/2,0)
                      LayoutMinWidth: =10
                      Width: =10
                - t-update-trends:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Select('t-collect');
                      Text: ="Update Date Range"
                      Tooltip: ="Updates date range of the downtime data."
                      Color: =gTheme.Text_Dark
                      Fill: =gTheme.Accent
                      FontWeight: =FontWeight.Normal
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      PaddingBottom: =0
                      PaddingLeft: =gPadding
                      PaddingRight: =gPadding
                      PaddingTop: =0
                      Size: =Self.Width / 16
        - t-body:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =If(App.Width < Index(App.SizeBreakpoints,3).Value, 6, 10)
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gPadding
              PaddingLeft: =gPadding
              PaddingRight: =gPadding
              PaddingTop: =gPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - t-graph:
                Control: Image
                Properties:
                  Image: |-
                    ="https://quickchart.io/chart?width=" & Self.Width & "&height=" & Self.Height*0.90 & "&chart=" & 
                    EncodeUrl("

                    {
                        type: 'line',
                        data: {
                            labels:"& Concatenate( "[", Concat(Sort(Filter(FE_Analysis, Line.Value = 't-line'.Selected.Value),Week,SortOrder.Ascending), Week, "," ), "]") &",
                            datasets: [
                                {
                                    label: '"&'t-line'.Selected.Value&"',
                                    backgroundColor: '"&gTheme.Chart_White&"',
                                    borderColor: '"&gTheme.Chart_Blue&"',
                                    data: "& Concatenate( "[", Concat(Sort(Filter(FE_Analysis, Line.Value = 't-line'.Selected.Value),Week,SortOrder.Ascending), OEE2, "," ), "]") &",
                                    fill: false
                                }
                            ]
                        },
                        options: {
                            scales: {
                                xAxes: [{
                                    offset: true,
                                    fontColor: '"&gTheme.Chart_Black&"',
                                    ticks: {fontColor: '"&gTheme.Chart_Black&"'},
                                    gridLines: {color: '"&gTheme.Chart_Dim&"'}
                                }],
                                yAxes: [{
                                    id: 'y-axis-0',
                                    type: 'linear',
                                    position: 'right',
                                    ticks: {
                                        beginAtZero: true,
                                        fontColor: '"&gTheme.Chart_Black&"',
                                        min: "& First(Sort(Filter(FE_Analysis, Line.Value = 't-line'.Selected.Value),OEE2,SortOrder.Ascending)).OEE2 - 5 &",
                                        max: "& Last(Sort(Filter(FE_Analysis, Line.Value = 't-line'.Selected.Value),OEE2,SortOrder.Ascending)).OEE2 + 5 &",
                                        stepSize: 5
                                    },
                                    gridLines: {color: '"&gTheme.Chart_Dim&"', zeroLineColor: '"& gTheme.Chart_Red &"'}
                                }]
                            },
                            plugins: {
                                datalabels: {
                                    color: '"&gTheme.Chart_Black&"',
                                    font: {size: 16},
                                    anchor: 'end',
                                    align: 'top',
                                    formatter: function(value, context) {
                                        return value + '%'; // Customize label text
                                    }
                                }
                            },
                            annotation: {
                                annotations: [{
                                    type: 'line',
                                    mode: 'horizontal',
                                    scaleID: 'y-axis-0',
                                    value: "& 59 &",
                                    borderColor: '"&gTheme.Chart_Accent&"',
                                    borderWidth: 2,
                                    borderDash: [5,5],
                                    label: {
                                        enabled: true,
                                        backgroundColor: '"&gTheme.Chart_Black&"',
                                        fontColor: '"&gTheme.Chart_White&"',
                                        position: 'left',
                                        content: '"& "59% Target" &"'
                                    }
                                }]
                            }
                        }
                    }

                    ")
                  FillPortions: =13
                  Height: =286
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Width: =Parent.Width * 0.95
                  X: =364
                  Y: =480
