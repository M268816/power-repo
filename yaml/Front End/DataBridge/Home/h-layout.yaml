- h-layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Fill: =gTheme.Background
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
    Children:
    - h-collect:
        Control: Classic/Button
        Properties:
          OnSelect: |-
            =Patch(rPopups,First(rPopups),{Visible: true, Value: 10, Display_Text:"Updating Variables", Popup:"loading"});
            /*Update Time*/
            Set(gTime,
                {
                    Now: Now(),
                    Today: Today()

                }
            );
            UpdateContext({
                lStartDate: DateAdd(gTime.Today, -1, TimeUnit.Hours),
                lEndDate: DateAdd(gTime.Today, 23, TimeUnit.Hours),
                lShift:
                    If(
                        Hour(gTime.Now) >= 23, "C",
                        Hour(gTime.Now) >= 15, "B",
                        Hour(gTime.Now) >= 7, "A",
                        "C"
                    )
            });
            UpdateContext({
                lCountOfDays: DateDiff(lStartDate,lEndDate)
            });

            Patch(rPopups,First(rPopups),{Value: 20, Display_Text:"Collecting Production Data"});
            /*Collect Production Data*/
            Clear(cProduction);
            ForAll(
                Filter(Sort(Roll_Data_Filtered_SPL, 'Date', SortOrder.Descending),
                    'Date' >= gTime.Today
                ),
                Collect(cProduction,
                    {
                        ID: ThisRecord.ID,
                        Side: Upper(ThisRecord.Pleater),
                        Shift: ThisRecord.Shift,
                        Lot: ThisRecord.Lot_No,
                        Catalog: ThisRecord.Catalog,
                        Pleats_Per_Pack: ThisRecord.PleatPerPack,
                        Pleat_Height: ThisRecord.Pleat_Height,
                        Date: ThisRecord.Date,
                        Unit_Starting: ThisRecord.'Begin Cart #',
                        Unit_Ending: ThisRecord.'End Cart #',
                        Amount_Built: ThisRecord.'End Cart #' - ThisRecord.'Begin Cart #' + 1,
                        Reject_Pleats: ThisRecord.Total_Reject_Pleats
                    }
                )
            );

            /*Collect Downtime Data*/
            Patch(rPopups,First(rPopups),{Value: 30, Display_Text:"Collecting Downtime Data"});
            Clear(cDowntime);
            ForAll(
                Filter(FE_Express_DT_Events,
                    'DateTime' >= lStartDate,
                    'DateTime' <= lEndDate
                ),
                Collect(cDowntime,
                    {
                        ID: ThisRecord.ID,
                        Line: ThisRecord.Pleater,
                        Shift: ThisRecord.' Shift',
                        DateTime: ThisRecord.DateTime,
                        Reason: ThisRecord.' Downtime Reason',
                        Downtime_Minutes: ThisRecord.' Downtime Minutes'
                    }
                )
            );

            Select('h-update');
          Text: ="collect"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - h-update:
        Control: Classic/Button
        Properties:
          OnSelect: |-
            =Patch(rPopups,First(rPopups),{Value: 40, Display_Text:"Checking Line Status"});

            UpdateContext({lLines:[
                "12", "GH", "NO", "WX",
                "34", "JK", "PQ", "YZ",
                "EF", "LM", "RS"
                ]});

            Clear(cKanban);
            ForAll(lLines,
                With({thisLine:ThisRecord.Value},
                    Collect(cKanban,
                        {
                            Line: thisLine,
                            Status:
                                If(
                                   IsEmpty(
                                    Filter(cProduction,
                                        Side in thisLine,
                                        'Date' >= gTime.Today,
                                        Shift = lShift
                                    )
                                   ),
                                   "Not Running",
                                   "Running" 
                                )
                        }
                    )
                )
            );

            Patch(rPopups,First(rPopups),{Value: 50, Display_Text:"Collecting TPS OEE"});
            With(
                {
                    thisRuntime:
                        CountRows(
                            Distinct(
                                Filter(cProduction, 'Date' >= gTime.Today),
                                Side
                            )
                        )
                        * 8
                        * CountRows(Distinct(Filter(cProduction, 'Date' >= gTime.Today),Shift)),
                    thisDowntime:
                        Sum(
                            Filter(cDowntime,
                                'DateTime' >= DateAdd(gTime.Today, -1, TimeUnit.Hours),
                                'DateTime' < DateAdd(gTime.Today, 23, TimeUnit.Hours),
                                Reason in gLists.Downtime_Reasons_Unplanned
                            ),
                            Downtime_Minutes
                        ),
                    thisTotaltime:
                        CountRows(
                            Distinct(
                                Filter(cProduction, 'Date' >= gTime.Today),
                                Side
                            )
                        ) * 24,
                    thisTotalUnits:
                        Sum(
                            Filter(cProduction,
                                'Date' >= DateAdd(gTime.Today, -1, TimeUnit.Hours),
                                'Date' < DateAdd(gTime.Today, 23, TimeUnit.Hours)
                            ),
                            Amount_Built + RoundUp((Reject_Pleats/Pleats_Per_Pack),0)
                        ),
                    thisGoodUnits:
                        Sum(
                            Filter(cProduction,
                                'Date' >= DateAdd(gTime.Today, -1, TimeUnit.Hours),
                                'Date' < DateAdd(gTime.Today, 23, TimeUnit.Hours)
                            ),
                            Amount_Built
                        ),
                    thisIdealTime:
                        120/
                        Min(
                            Filter(cProduction,
                                'Date' >= gTime.Today
                            ),
                            Pleats_Per_Pack
                        )/60
                },
                Set(rAvailability,
                    IfError(
                        (thisRuntime - thisDowntime) / thisTotaltime,
                        0
                    )
                );
                Set(rPerformance,
                    IfError(
                        (thisIdealTime * thisTotalUnits) / (thisRuntime - thisDowntime),
                        0
                    )
                );
                Set(rQuality,
                    IfError(
                        thisGoodUnits/thisTotalUnits,
                        0
                    )
                );
                Set(rOEE1, rAvailability * rPerformance * rQuality);
            );

            Patch(rPopups,First(rPopups),{Visible: false, Value: -1, Display_Text:"Finishing Up", Popup: ""});
          Text: ="update"
          AlignInContainer: =AlignInContainer.Start
          Visible: =false
    - h-header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =gTheme.Primary
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =gPadding
          LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =gPadding
          PaddingLeft: =gPadding
          PaddingRight: =gPadding
          PaddingTop: =gPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - h-logo:
            Control: Image
            Properties:
              Image: =If(gTheme.Mode = "Light", logo1, logo2)
              LayoutMinHeight: =10
              Width: ='h-n-title'.Width
        - h-title:
            Control: Label
            Properties:
              Text: =APP_NAME
              Color: =gTheme.Text_Light
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Size: =Self.Height / 3
        - h-mode:
            Control: Classic/Icon
            Variant: HalfFilledCircle
            Properties:
              OnSelect: =If(gTheme.Mode = "Light", Set(gTheme, gThemeMode.Dark),Set(gTheme, gThemeMode.Light))
              Color: =gTheme.Text_On_Dark
              Height: =10
              HoverColor: =gTheme.Text_On_Light
              Icon: =Icon.HalfFilledCircle
              LayoutMinHeight: =10
              PaddingBottom: =4
              PaddingLeft: =4
              PaddingRight: =4
              PaddingTop: =4
              Rotation: =If(gTheme.Mode = "Light", 0, 180)
              Width: =Self.Height
        - h-bugs:
            Control: Image
            Properties:
              OnSelect: =Navigate(Bugs,ScreenTransition.Fade)
              Image: =gIcons.Bug
              HoverFill: =gTheme.Pri_Complement
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
        - h-user-img:
            Control: Image
            Properties:
              Image: =User().Image
              Fill: =RGBA(0, 0, 0, 1)
              ImagePosition: =ImagePosition.Fill
              LayoutMinHeight: =10
              PaddingLeft: =
              RadiusBottomLeft: =Self.Width
              RadiusBottomRight: =Self.RadiusBottomLeft
              RadiusTopLeft: =Self.RadiusBottomLeft
              RadiusTopRight: =Self.RadiusBottomLeft
              Width: =Self.Height
    - h-main:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =11
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - h-navigation:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =gTheme.Midground
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =gPadding
              PaddingLeft: =gPadding
              PaddingRight: =gPadding
              PaddingTop: =gPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - h-n-title:
                Control: Label
                Properties:
                  Text: =App.ActiveScreen.Name
                  Align: =Align.Center
                  Color: =gTheme.Text_On_Light
                  LayoutMinWidth: =10
                  Size: =Self.Height / 3
            - h-n-separator-0:
                Control: Rectangle
                Properties:
                  Fill: =gTheme.Pri_Complement
                  Height: =Round(gPadding/2,0)
                  LayoutMinWidth: =10
                  Width: =10
            - h-n-gallery:
                Control: Gallery
                Variant: galleryVertical
                Properties:
                  Items: =cNavigation
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DelayItemLoading: =true
                  Layout: =Layout.Vertical
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LoadingSpinner: =LoadingSpinner.Data
                  TemplatePadding: =gPadding
                  TemplateSize: =40
                Children:
                - h-n-g-button:
                    Control: Classic/Button
                    Properties:
                      OnSelect: =Navigate(ThisItem.Screen,ScreenTransition.Fade)
                      Text: =ThisItem.Label
                      BorderThickness: =1
                      Color: =gTheme.Text_Dark
                      DisplayMode: =If(App.ActiveScreen.Name = ThisItem.Screen.Name, DisplayMode.Disabled, DisplayMode.Edit)
                      Fill: =gTheme.Accent
                      FontWeight: =FontWeight.Normal
                      Height: =Parent.TemplateHeight
                      RadiusBottomLeft: =Self.RadiusTopLeft
                      RadiusBottomRight: =Self.RadiusTopLeft
                      RadiusTopLeft: =100
                      RadiusTopRight: =Self.RadiusTopLeft
                      Size: =Self.Height / 4
                      Width: =Parent.TemplateWidth
            - h-n-legal:
                Control: Label
                Properties:
                  Text: |-
                    =
                    "MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                    &Char(13)&Char(13)&
                    "© 2025 EMD Millipore. All rights reserved."
                  Align: =Align.Center
                  Color: =gTheme.Text_On_Light
                  Height: =200
                  LayoutMinWidth: =10
                  Size: =Self.Height / 24
                  VerticalAlign: =VerticalAlign.Bottom
        - h-body:
            Control: GroupContainer
            Variant: verticalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =If(App.Width < Index(App.SizeBreakpoints,3).Value, 7, 11)
              LayoutAlignItems: =LayoutAlignItems.Center
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =gPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              LayoutOverflowY: =LayoutOverflow.Scroll
              PaddingBottom: =gPadding
              PaddingLeft: =gPadding
              PaddingRight: =gPadding
              PaddingTop: =gPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - h-APQ-parent:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  FillPortions: =0
                  Height: =Parent.Height * 0.3
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutGap: =gPadding * 2
                  LayoutJustifyContent: =LayoutJustifyContent.Center
                  LayoutMode: =LayoutMode.Auto
                  PaddingBottom: =gPadding
                  PaddingLeft: =gPadding
                  PaddingRight: =gPadding
                  PaddingTop: =gPadding
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                  Width: =Parent.Width * 0.65
                Children:
                - h-Availability:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      BorderColor: =gTheme.Sec_Complement
                      BorderThickness: =If(gTheme.Mode = "Light", 0, 1)
                      DropShadow: =DropShadow.Regular
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      LayoutMode: =LayoutMode.Auto
                    Children:
                    - h-a-title:
                        Control: Label
                        Properties:
                          Text: ="Availability"
                          Align: =Align.Center
                          Color: =gTheme.Text_On_Dark
                          Fill: =gTheme.Secondary
                          LayoutMinWidth: =10
                          Size: =Self.Height / 3
                    - h-a-chart:
                        Control: Image
                        Properties:
                          Image: |-
                            ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" &
                            With({thisData: Round(rAvailability*100,2)},
                                EncodeUrl(
                                    "{
                                        type: 'radialGauge',
                                        data: {
                                            datasets: [{
                                                data: ["& thisData &"],
                                                backgroundColor: getGradientFillHelper('horizontal', [
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"'
                                                ]),
                                            }]
                                        },
                                        options: {
                                            domain: [0, "& If(thisData <= 100, 100, thisData) &"],
                                            trackColor: '"& gTheme.Chart_White &"', 
                                            centerPercentage: 90,
                                            centerArea: {
                                                text: (val) => val + '%',
                                                fontColor: '"& gTheme.Chart_Black &"'
                                            },
                                        }
                                    }"
                                )
                            )
                          FillPortions: =1
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                - h-Performance:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      BorderColor: =gTheme.Sec_Complement
                      BorderThickness: =If(gTheme.Mode = "Light", 0, 1)
                      DropShadow: =DropShadow.Regular
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      LayoutMode: =LayoutMode.Auto
                    Children:
                    - h-p-title:
                        Control: Label
                        Properties:
                          Text: ="Performance"
                          Align: =Align.Center
                          Color: =gTheme.Text_On_Dark
                          Fill: =gTheme.Secondary
                          Size: =Self.Height / 3
                    - h-p-chart:
                        Control: Image
                        Properties:
                          Image: |-
                            ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" &
                            With({thisData: Round(rPerformance*100,2)},
                                EncodeUrl(
                                    "{
                                        type: 'radialGauge',
                                        data: {
                                            datasets: [{
                                                data: ["& thisData &"],
                                                backgroundColor: getGradientFillHelper('horizontal', [
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"'
                                                ]),
                                            }]
                                        },
                                        options: {
                                            domain: [0, "& If(thisData <= 100, 100, thisData) &"],
                                            trackColor: '"& gTheme.Chart_White &"', 
                                            centerPercentage: 90,
                                            centerArea: {
                                                text: (val) => val + '%',
                                                fontColor: '"& gTheme.Chart_Black &"'
                                            },
                                        }
                                    }"
                                )
                            )
                          FillPortions: =1
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                - h-Quality:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      BorderColor: =gTheme.Sec_Complement
                      BorderThickness: =If(gTheme.Mode = "Light", 0, 1)
                      DropShadow: =DropShadow.Regular
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      LayoutMode: =LayoutMode.Auto
                    Children:
                    - h-q-title:
                        Control: Label
                        Properties:
                          Text: ="Quality"
                          Align: =Align.Center
                          Color: =gTheme.Text_On_Dark
                          Fill: =gTheme.Secondary
                          Size: =Self.Height / 3
                    - h-q-chart:
                        Control: Image
                        Properties:
                          Image: |-
                            ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" &
                            With({thisData: Round(rQuality*100,2)},
                                EncodeUrl(
                                    "{
                                        type: 'radialGauge',
                                        data: {
                                            datasets: [{
                                                data: ["& thisData &"],
                                                backgroundColor: getGradientFillHelper('horizontal', [
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"'
                                                ]),
                                            }]
                                        },
                                        options: {
                                            domain: [0, "& If(thisData <= 100, 100, thisData) &"],
                                            trackColor: '"& gTheme.Chart_White &"', 
                                            centerPercentage: 90,
                                            centerArea: {
                                                text: (val) => val + '%',
                                                fontColor: '"& gTheme.Chart_Black &"'
                                            },
                                        }
                                    }"
                                )
                            )
                          FillPortions: =1
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
                - h-OEE1:
                    Control: GroupContainer
                    Variant: verticalAutoLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      BorderColor: =gTheme.Sec_Complement
                      BorderThickness: =If(gTheme.Mode = "Light", 0, 1)
                      DropShadow: =DropShadow.Regular
                      LayoutAlignItems: =LayoutAlignItems.Stretch
                      LayoutDirection: =LayoutDirection.Vertical
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      LayoutMode: =LayoutMode.Auto
                    Children:
                    - h-o-title:
                        Control: Label
                        Properties:
                          Text: ="TPS OEE"
                          Align: =Align.Center
                          Color: =gTheme.Text_On_Dark
                          Fill: =gTheme.Secondary
                          Size: =Self.Height / 3
                    - h-o-chart:
                        Control: Image
                        Properties:
                          Image: |-
                            ="https://quickchart.io/chart?width=" &Self.Width& "&height=" &Self.Height*0.90& "&c=" &
                            With({thisData: Round(rOEE1*100,2)},
                                EncodeUrl(
                                    "{
                                        type: 'radialGauge',
                                        data: {
                                            datasets: [{
                                                data: ["& thisData &"],
                                                backgroundColor: getGradientFillHelper('horizontal', [
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Blue &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"',
                                                    '"& gTheme.Chart_Red &"'
                                                ]),
                                            }]
                                        },
                                        options: {
                                            domain: [0, "& If(thisData <= 100, 100, thisData) &"],
                                            trackColor: '"& gTheme.Chart_White &"', 
                                            centerPercentage: 90,
                                            centerArea: {
                                                text: (val) => val + '%',
                                                fontColor: '"& gTheme.Chart_Black &"'
                                            },
                                        }
                                    }"
                                )
                            )
                          FillPortions: =1
                          LayoutMinHeight: =10
                          LayoutMinWidth: =10
            - h-kanban:
                Control: GroupContainer
                Variant: verticalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  BorderColor: =gTheme.Sec_Complement
                  BorderThickness: =If(gTheme.Mode = "Light", 0, 1)
                  DropShadow: =DropShadow.Regular
                  Fill: =gTheme.Midground
                  FillPortions: =0
                  Height: =Parent.Height * 0.6
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutMode: =LayoutMode.Auto
                  Width: =Parent.Width * 0.35
                Children:
                - h-k-title:
                    Control: Label
                    Properties:
                      Text: ="Kanban"
                      Align: =Align.Center
                      Color: =gTheme.Text_On_Dark
                      Fill: =gTheme.Secondary
                      LayoutMinWidth: =10
                      Size: =Self.Height / 3
                - h-k-gallery:
                    Control: Gallery
                    Variant: BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0
                    Properties:
                      Items: =cKanban
                      WrapCount: =4
                      DelayItemLoading: =true
                      LoadingSpinner: =LoadingSpinner.Data
                      TemplatePadding: =0
                      TemplateSize: =Parent.Width / 3
                    Children:
                    - h-k-gallery-status:
                        Control: Label
                        Properties:
                          OnSelect: =Select(Parent)
                          Text: =ThisItem.Status
                          Align: =Align.Center
                          Height: =Parent.TemplateHeight * 0.25
                          Size: =Self.Height / 3
                          Width: =Parent.TemplateWidth
                          Y: =Parent.TemplateHeight - Self.Height
                    - h-k-gallery-line:
                        Control: Label
                        Properties:
                          OnSelect: =Select(Parent)
                          Text: =ThisItem.Line
                          Align: =Align.Center
                          Fill: =If(ThisItem.Status = "Running", gTheme.Accent, gTheme.Deny)
                          Height: =Parent.TemplateHeight
                          Size: =Self.Height / 3
                          Width: =Parent.TemplateWidth
