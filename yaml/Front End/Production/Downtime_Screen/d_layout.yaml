- d_layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
    Children:
    - d_header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =varColor1
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =locPadding
          LayoutMinHeight: =1
          LayoutMinWidth: =1
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =locPadding
          PaddingLeft: =locPadding
          PaddingRight: =locPadding
          PaddingTop: =locPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
          Width: =Parent.Width
        Children:
        - d_collect:
            Control: Classic/Button
            Properties:
              OnSelect: |
                =UpdateContext({locLoading:{Visible: true, Value: 1, Text: "Starting"}});

                /*Set Shift*/
                If(
                    Hour(Now()) >= 23,
                    Set(varShiftSelect, "C Shift"),
                    Hour(Now()) >= 15,
                    Set(varShiftSelect, "B Shift"),
                    Hour(Now()) >= 7,
                    Set(varShiftSelect, "A Shift"),
                    Set(varShiftSelect, "C Shift")
                );

                /*Delegated Collection - Downtime*/
                UpdateContext({locLoading:{Visible: true, Value: 50, Text: "Collecting Downtime Data"}});
                Clear(collectDowntime);
                ForAll(
                    Filter(FE_Downtime,
                        Ended <= DateAdd(varNowDay, 23, TimeUnit.Hours),
                        Started >= DateAdd(varNowDay, -1, TimeUnit.Hours),
                        Line.Value = varProductionLine
                    ),
                    Collect(collectDowntime,
                        {
                            ID: ThisRecord.ID,
                            Line: ThisRecord.Line.Value,
                            Lot: ThisRecord.Lot,
                            Catalog: ThisRecord.Catalog,
                            Started: ThisRecord.Started,
                            Ended: ThisRecord.Ended,
                            Reason: ThisRecord.Reason.Value,
                            Total_Downtime: Value(ThisRecord.Total_Downtime),
                            Comments: ThisRecord.Comments,
                            Shift_Letter: ThisRecord.Shift_Letter,
                            Record_Editor: ThisRecord.Record_Editor,
                            Edit_Reason: ThisRecord.Edit_Reason
                        }
                    )
                );

                UpdateContext({locLoading:{Visible: true, Value: 100, Text: "Finishing Up"}});
                UpdateContext({locLoading:{Visible: false, Value: -1, Text: "Not Loading"}});
                Navigate(Hourly);
              Text: ="collect"
              Visible: =false
        - d_back:
            Control: Image
            Properties:
              OnSelect: =Navigate(Hourly);
              Image: =gblSVG.Back
              HoverFill: =ColorFade(varColorAccent, 75%)
              LayoutMinHeight: '=1   '
              RadiusBottomLeft: =Self.Height / 2
              RadiusBottomRight: =Self.Height / 2
              RadiusTopLeft: =Self.Height / 2
              RadiusTopRight: =Self.Height / 2
              Width: =Self.Height
        - d_logo:
            Control: Image
            Properties:
              Image: =LOGO_MSIG_SBlue_FIT_ALPHA
              LayoutMinHeight: =1
              Width: =Self.Height * 3
        - d_h_title:
            Control: Label
            Properties:
              Text: |-
                =If(
                    d_m_form.Mode = FormMode.New,
                    "Enter Downtime",
                    "Edit Downtime Entry ID #" & varDowntimeID
                )
              Align: =Align.Center
              Color: =RGBA(255, 255, 255, 1)
              FillPortions: =1
              Font: =Font.Verdana
              Height: =Parent.Height
              LayoutMinHeight: =1
              LayoutMinWidth: =1
              Size: =Self.Height / 3
              Width: =Parent.Width
              X: =Parent.Width - Parent.Width
              Y: =Parent.Height - Parent.Height
        - d_h_padding:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =0
              LayoutMinHeight: =10
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
              Width: =d_back.Width + d_logo.Width - d_submit.Width - d_cancel.Width - If(d_m_form.Mode = FormMode.Edit, d_delete.Width, 0)
        - d_submit:
            Control: Image
            Properties:
              OnSelect: |-
                =UpdateContext({
    
                    locSelectedEndTime:
                        DateTime(
                            Year(DateValue2.SelectedDate),
                            Month(DateValue2.SelectedDate),
                            Day(DateValue2.SelectedDate),
                            If(ampm2.Selected.Value = "PM", 12, 0) + Mod(Value(HourValue2.SelectedText.Value), 12),
                            Value(MinuteValue2.SelectedText.Value),
                            0
                        ),

                    locSelectedStartTime:
                        DateTime(
                            Year(DateValue1.SelectedDate),
                            Month(DateValue1.SelectedDate),
                            Day(DateValue1.SelectedDate),
                            If(ampm1.Selected.Value = "PM", 12, 0) + Mod(Value(HourValue1.SelectedText.Value), 12),
                            Value(MinuteValue1.SelectedText.Value),
                            0
                        )

                });

                /*Super Hacknied variable to check for overlapping Time, clear the collection*/
                Clear(hackFoundTime);

                /*Super Hacknied time check*/
                ForAll(
                    /*For all downtime data, filtered by current line*/
                    Filter(collectDowntime, Line = varProductionLine),
                    If(
                        Or(
                            /*If the selected times are between recorded times*/
                            And(
                                locSelectedStartTime >= DateTimeValue(Started),
                                locSelectedStartTime < TimeValue(Ended)
                            ),
                            /*Or if the the selected end time is between the recorded start and end time */
                            And(
                                locSelectedEndTime > DateTimeValue(Started),
                                locSelectedEndTime <= DateTimeValue(Ended)
                            ),
                            /*Or if the selected start time is between the recorded start and end time*/
                            And(
                                locSelectedStartTime >= DateTimeValue(Started),
                                locSelectedStartTime < DateTimeValue(Ended)
                            ),
                            /*Or the selected times are encompassing a recorded time*/
                            And(
                                locSelectedStartTime <= DateTimeValue(Started),
                                locSelectedEndTime >= DateTimeValue(Ended)
                            )
                        ),
                        
                        /*collect a true statement*/
                        Collect(hackFoundTime, {set: true}),
                        
                        /*collect a false statement*/
                        Collect(hackFoundTime, {set: false})
                    )
                );


                /*If anything in the hack is true then return true*/
                If(true in hackFoundTime, Set(varFoundTime, true), Set(varFoundTime, false));

                If(
                    /*If the strting hour is between an already reported time*/
                    And(d_m_form.Mode = FormMode.New, varFoundTime),
                    /*Show the error*/
                    UpdateContext({locPopups: {Visible: true, Value: "overlap"}});,

                    /*If in edit mode editor and reason is needed*/
                    And(d_m_form.Mode = FormMode.Edit, Or(DataCardValue7.Selected.DisplayName = Blank(), DataCardValue8.Text = "")),
                    /*Show the error*/
                    UpdateContext({locPopups: {Visible: true, Value: "editor"}});,
                    
                    /*Hour ended must be later than hour started*/
                    locSelectedEndTime <= locSelectedStartTime,
                    /*Show the error*/
                    UpdateContext({locPopups: {Visible: true, Value: "time"}});,
                    
                    /*If the sum of downtime exceeds total minutes for the selected time range*/
                    Sum(
                        Sum(
                            Filter(collectDowntime, Hour(Started) = Hour(Started_DataCard1.Update), Hour(Ended) = Hour(Started_DataCard1.Update)+1),
                            Total_Downtime*1
                        ),
                        DateDiff(Started_DataCard1.Update, Ended_DataCard1.Update, TimeUnit.Minutes)
                    )
                    <
                    Sum(
                        Filter(collectDowntime, Hour(Started) = Hour(Started_DataCard1.Update), Hour(Ended) = Hour(Started_DataCard1.Update)+1),
                        Total_Downtime*1
                    ),    
                    /*Show the error*/
                    UpdateContext({locPopups: {Visible: true, Value: "sum"}});,
                    
                    /*Otherwise, submit the form*/
                    SubmitForm(d_m_form);
                );
              Image: =gblSVG.Submit
              HoverFill: =varColorYes
              LayoutMinHeight: '=1   '
              RadiusBottomLeft: =Self.Height / 2
              RadiusBottomRight: =Self.Height / 2
              RadiusTopLeft: =Self.Height / 2
              RadiusTopRight: =Self.Height / 2
              Width: =Self.Height
        - d_cancel:
            Control: Image
            Properties:
              OnSelect: =ResetForm(d_m_form);
              Image: =gblSVG.Cancel
              HoverFill: =varColorNo
              LayoutMinHeight: '=1   '
              RadiusBottomLeft: =Self.Height / 2
              RadiusBottomRight: =Self.Height / 2
              RadiusTopLeft: =Self.Height / 2
              RadiusTopRight: =Self.Height / 2
              Width: =Self.Height
        - d_delete:
            Control: Image
            Properties:
              OnSelect: |-
                =UpdateContext({locPopups: {Visible: true, Value: "delete"}});
              Image: =gblSVG.Delete
              HoverFill: =varColor3
              LayoutMinHeight: '=1   '
              RadiusBottomLeft: =Self.Height / 2
              RadiusBottomRight: =Self.Height / 2
              RadiusTopLeft: =Self.Height / 2
              RadiusTopRight: =Self.Height / 2
              Visible: =d_m_form.Mode = FormMode.Edit
              Width: =Self.Height
    - d_body:
        Control: GroupContainer
        Variant: verticalAutoLayoutContainer
        Properties:
          FillPortions: =11
          LayoutDirection: =LayoutDirection.Vertical
          LayoutMinHeight: =1
          LayoutMinWidth: =1
          LayoutMode: =LayoutMode.Auto
        Children:
        - d_m_form:
            Control: Form
            Layout: vertical
            Properties:
              OnSuccess: |-
                =ResetForm(d_m_form);
                If(d_m_form.Mode = FormMode.Edit, Select(d_collect), Navigate(Hourly));
                Notify("Submission Success", NotificationType.Success);
              DataSource: =FE_Downtime
              DefaultMode: =varDowntimeMode
              Item: |-
                =If(
                    d_m_form.Mode = FormMode.Edit,
                    LookUp(FE_Downtime, varDowntimeID = ID)
                    )
              Height: =Parent.Height
              Width: =Parent.Width
              X: =1-1
              Y: =1-1
            Children:
            - Catalog_DataCard1:
                Control: TypedDataCard
                Variant: textualEditCard
                Properties:
                  DataField: ="Catalog"
                  Default: =ThisItem.Catalog
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Catalog)
                  MaxLength: =DataSourceInfo([@FE_Downtime], DataSourceInfo.MaxLength, Catalog)
                  Update: =DataCardValue10.Text
                  DisplayMode: =Parent.DisplayMode
                  Height: |-
                    =//If(d_m_form.Mode = FormMode.New, Parent.Height/4, Parent.Height/5)
                    Parent.Height * 0.03
                  Width: =683
                Children:
                - StarVisible9:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey12.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey12.Y
                - ErrorMessage9:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue10.Y
                - DataCardValue10:
                    Control: Classic/TextInput
                    Properties:
                      Default: =If(d_m_form.Mode = FormMode.New, varCatalog, Parent.Default)
                      DelayOutput: =true
                      MaxLength: =Parent.MaxLength
                      Tooltip: =Parent.DisplayName
                      Align: =Align.Center
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =If(d_m_form.Mode = FormMode.New, DisplayMode.View, DisplayMode.Edit)
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.5
                      PaddingLeft: =5
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
                      Size: =DataCardValue1.Size * 0.70
                      Width: =DataCardValue9.Width
                      X: =Parent.Width/2 - Self.Width/2
                      Y: =DataCardKey12.Height
                - DataCardKey12:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.450
                      Size: =DataCardKey1.Size * 0.70
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Lot_DataCard1:
                Control: TypedDataCard
                Variant: textualEditCard
                Properties:
                  DataField: ="Title"
                  Default: =ThisItem.Lot
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Lot)
                  MaxLength: =DataSourceInfo([@FE_Downtime],DataSourceInfo.MaxLength,Lot)
                  Update: =DataCardValue9.Text
                  DisplayMode: =Parent.DisplayMode
                  Height: |-
                    =//If(d_m_form.Mode = FormMode.New, Parent.Height/4, Parent.Height/5)
                    Parent.Height * 0.10
                  Width: =683
                  X: =1
                Children:
                - StarVisible8:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey11.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey11.Y
                - ErrorMessage8:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue9.Y
                - DataCardValue9:
                    Control: Classic/TextInput
                    Properties:
                      Default: =If(d_m_form.Mode = FormMode.New, varLot, Parent.Default)
                      DelayOutput: =true
                      MaxLength: =Parent.MaxLength
                      Tooltip: =Parent.DisplayName
                      Align: =Align.Center
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =If(d_m_form.Mode = FormMode.New, DisplayMode.View, DisplayMode.Edit)
                      Fill: =varColor5
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.5
                      PaddingLeft: =5
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
                      Size: =DataCardValue1.Size * 0.70
                      Width: =Parent.Width * 0.40
                      X: =Parent.Width/2 - Self.Width/2
                      Y: =DataCardKey11.Height
                - DataCardKey11:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.45
                      Size: =DataCardKey1.Size * 0.70
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Started_DataCard1:
                Control: TypedDataCard
                Variant: dateTimeEditCard
                Properties:
                  DataField: ="Started"
                  Default: |-
                    =If(
                        d_m_form.Mode = FormMode.Edit,
                        ThisItem.Started,
                        Switch(
                            varShiftSelect,
                            "A Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),7,0,0),
                            "B Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),4,0,0),
                            "C Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),23,0,0),
                            DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),0,0,0)
                        )
                    )
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Started)
                  Required: =true
                  Update: |-
                    =DateValue1.SelectedDate + 
                    Time(
                        If(
                            ampm1.Selected.Value = "PM", 
                            12, 
                            0
                            ) 
                        + Mod(
                            Value(HourValue1.Selected.Value), 
                            12
                            ), 
                        Value(MinuteValue1.Selected.Value),
                       0
                        )
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Width: =683
                  Y: =1
                Children:
                - ampm1:
                    Control: Classic/DropDown
                    Properties:
                      Default: "=Switch(\n    varShiftSelect,\n    \"A Shift\",\n    Switch(\n        Value(HourValue1.SelectedText.Value),\n        1, \"PM\",\n        2, \"PM\",\n        3, \"PM\",\n        12, \"PM\",\n        \"AM\"\n    ),\n        \n    \"B Shift\",\n    Switch(\n        Value(HourValue1.SelectedText.Value),\n        12, \"AM\",\n        \"PM\"\n    ),\n    \n    \"C Shift\",\n    Switch(\n        Value(HourValue1.SelectedText.Value),\n        11, \"PM\",\n        \"AM\"\n    )\n)"
                      Items: =["AM","PM"]
                      Tooltip: =Parent.DisplayName
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =DisplayMode.View
                      Fill: =If(d_m_form.Mode = FormMode.Edit, varColor4, RGBA(255, 255, 255, 1))
                      Font: =Font.Verdana
                      Height: =HourValue1.Height
                      Size: =DataCardValue1.Size
                      Width: =HourValue1.Width
                      X: =MinuteValue1.X + MinuteValue1.Width + Separator1.Width
                      Y: =HourValue1.Y
                - StarVisible3:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DateValue1.Height
                      Size: =DataCardKey1.Size
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      X: =DateValue1.X - Self.Width
                      Y: =DateValue1.Y
                - ErrorMessage3:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =HourValue1.Y
                - MinuteValue1:
                    Control: Classic/DropDown
                    Properties:
                      Default: =Text(Minute(Parent.Default),"00")
                      Items: =["00","05","10","15","20","25","30","35","40","45","50","55"]
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =HourValue1.Height
                      PaddingBottom: =5
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      PaddingRight: =5
                      PaddingTop: =5
                      Size: =DataCardValue1.Size
                      Width: =HourValue1.Width
                      X: =HourValue1.X + HourValue1.Width + Separator1.Width
                      Y: =HourValue1.Y
                - Separator1:
                    Control: Label
                    Properties:
                      Text: =":"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      FontWeight: =FontWeight.Bold
                      Height: =HourValue1.Height
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Width: =10
                      Wrap: =false
                      X: =HourValue1.X + HourValue1.Width
                      Y: =HourValue1.Y
                - HourValue1:
                    Control: Classic/DropDown
                    Properties:
                      Default: =Text(If(Mod(Hour(Parent.Default), 12) = 0, 12, Mod(Hour(Parent.Default), 12)),"00")
                      Items: |-
                        =Switch(
                            varShiftSelect,
                            "A Shift",
                            ["07","08","09","10","11","12","01","02"],
                            "B Shift",
                            ["03","04","05","06","07","08","09","10"],
                            "C Shift",
                            ["11","12","01","02","03","04","05","06"],
                            ["01","02","03","04","05","06","07","08","09","10","11","12"]
                        )
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DateValue1.Height
                      PaddingBottom: =5
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      PaddingRight: =5
                      PaddingTop: =5
                      Size: =DataCardValue1.Size
                      Width: =DateValue1.Width / 2
                      X: =DateValue1.X + DateValue1.Width + 10
                      Y: =DateValue1.Y
                - DateValue1:
                    Control: Classic/DatePicker
                    Properties:
                      DefaultDate: |-
                        =If(
                            d_m_form.Mode = FormMode.Edit,
                            Parent.Default,
                            Switch(
                                varShiftSelect,
                                "C Shift",
                                If(
                                    HourValue1.SelectedText.Value = "11",
                                    DateAdd(locNowDay, -1, TimeUnit.Days),
                                    locNowDay
                                ),
                                locNowDay
                            )
                        )
                      EndYear: =Year(Today())+100
                      StartYear: =1899
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =Parent.DisplayMode.View
                      Fill: =If(d_m_form.Mode = FormMode.Edit, varColor4, RGBA(255, 255, 255, 1))
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      IconBackground: =varColor1
                      IconFill: =varColorAccent
                      IsEditable: =true
                      PaddingBottom: =0
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      Size: =DataCardValue1.Size
                      Width: =Parent.Width * 0.30
                      X: =Parent.Width/2 - (Self.Width*2.5)/2
                      Y: =DataCardKey3.Y + DataCardKey3.Height + 5
                - DataCardKey3:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Ended_DataCard1:
                Control: TypedDataCard
                Variant: dateTimeEditCard
                Properties:
                  DataField: ="Ended"
                  Default: |-
                    =If(
                        d_m_form.Mode = FormMode.Edit,
                        ThisItem.Ended,
                        Switch(
                            varShiftSelect,
                            "A Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),8,0,0),
                            "B Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),5,0,0),
                            "C Shift", DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),0,0,0),
                            DateTime(Year(locNowDay),Month(locNowDay),Day(locNowDay),0,0,0)
                        )
                    )
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Ended)
                  Required: =true
                  Update: |-
                    =DateValue2.SelectedDate + 
                    Time(
                        If(
                            ampm2.Selected.Value = "PM", 
                            12, 
                            0
                            ) 
                        + Mod(
                            Value(HourValue2.Selected.Value), 
                            12
                            ), 
                        Value(MinuteValue2.Selected.Value),
                       0
                        )
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Width: =683
                  X: =1
                  Y: =1
                Children:
                - Label1:
                    Control: Label
                    Properties:
                      Text: =
                      Font: =Font.Verdana
                      X: =40
                      Y: =40
                - ampm2:
                    Control: Classic/DropDown
                    Properties:
                      Default: "=/*Check the selected time per varShiftSelect and change*/\nSwitch(\n    varShiftSelect,\n    \"A Shift\",\n    Switch(\n        Value(HourValue2.SelectedText.Value),\n        1, \"PM\",\n        2, \"PM\",\n        3, \"PM\",\n        12, \"PM\",\n        \"AM\"\n    ),\n        \n    \"B Shift\",\n    Switch(\n        Value(HourValue2.SelectedText.Value),\n        12, \"AM\",\n        \"PM\"\n    ),\n    \n    \"C Shift\",\n    Switch(\n        Value(HourValue2.SelectedText.Value),\n        11, \"PM\",\n        \"AM\"\n    )\n)"
                      Items: =["AM","PM"]
                      Tooltip: =Parent.DisplayName
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =DisplayMode.View
                      Fill: =If(d_m_form.Mode = FormMode.Edit, varColor4, RGBA(255, 255, 255, 1))
                      Font: =Font.Verdana
                      Height: =HourValue2.Height
                      Size: =DataCardValue1.Size
                      Width: =HourValue2.Width
                      X: =MinuteValue2.X + MinuteValue2.Width + Separator2.Width
                      Y: =HourValue2.Y
                - StarVisible4:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DateValue2.Height
                      Size: =DataCardKey1.Size
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      X: =DateValue2.X - Self.Width
                      Y: =DateValue2.Y
                - ErrorMessage4:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =HourValue2.Y
                - MinuteValue2:
                    Control: Classic/DropDown
                    Properties:
                      Default: =Text(Minute(Parent.Default),"00")
                      Items: =["00","05","10","15","20","25","30","35","40","45","50","55"]
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =HourValue2.Height
                      PaddingBottom: =5
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      PaddingRight: =5
                      PaddingTop: =5
                      Size: =DataCardValue1.Size
                      Width: =HourValue2.Width
                      X: =HourValue2.X + HourValue2.Width + Separator2.Width
                      Y: =HourValue2.Y
                - Separator2:
                    Control: Label
                    Properties:
                      Text: =":"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      FontWeight: =FontWeight.Bold
                      Height: =HourValue2.Height
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Width: =10
                      Wrap: =false
                      X: =HourValue2.X + HourValue2.Width
                      Y: =HourValue2.Y
                - HourValue2:
                    Control: Classic/DropDown
                    Properties:
                      Default: =Text(If(Mod(Hour(Parent.Default), 12) = 0, 12, Mod(Hour(Parent.Default), 12)),"00")
                      Items: |-
                        =Switch(
                            varShiftSelect,
                            "A Shift",
                            ["07","08","09","10","11","12","01","02","03"],
                            "B Shift",
                            ["03","04","05","06","07","08","09","10","11"],
                            "C Shift",
                            ["11","12","01","02","03","04","05","06","07"],
                            ["01","02","03","04","05","06","07","08","09","10","11","12"]
                        )
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DateValue2.Height
                      PaddingBottom: =5
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      PaddingRight: =5
                      PaddingTop: =5
                      Size: =DataCardValue1.Size
                      Width: =DateValue2.Width / 2
                      X: =DateValue2.X + DateValue2.Width + 10
                      Y: =DateValue2.Y
                - DateValue2:
                    Control: Classic/DatePicker
                    Properties:
                      DefaultDate: |-
                        =If(
                            d_m_form.Mode = FormMode.Edit,
                            Parent.Default,
                            Switch(
                                varShiftSelect,
                                "C Shift",
                                If(
                                    HourValue2.SelectedText.Value = "11",
                                    DateAdd(locNowDay, -1, TimeUnit.Days),
                                    locNowDay
                                ),
                                locNowDay
                            )
                        )
                      EndYear: =Year(Today())+100
                      StartYear: =1899
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =Parent.DisplayMode.View
                      Fill: =If(d_m_form.Mode = FormMode.Edit, varColor4, RGBA(255, 255, 255, 1))
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      IconBackground: =varColor1
                      IconFill: =varColorAccent
                      IsEditable: =true
                      PaddingBottom: =0
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      Size: =DataCardValue1.Size
                      Width: =Parent.Width * 0.30
                      X: =Parent.Width/2 - (Self.Width*2.5)/2
                      Y: =DataCardKey4.Y + DataCardKey4.Height + 5
                - DataCardKey4:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Line_DataCard1:
                Control: TypedDataCard
                Variant: comboBoxEditCard
                Properties:
                  DataField: ="Line"
                  Default: =ThisItem.Line
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Line)
                  Required: =true
                  Update: =DataCardValue1.Selected
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Width: =683
                  Y: =2
                Children:
                - DataCardAlignedValue:
                    Control: Label
                    Properties:
                      Text: =DataCardValue1.Selected.Value
                      Align: =Align.Center
                      Height: =Parent.Height * 0.4
                      Size: =Self.Height / 3
                      Width: =Self.Size * Len(Self.Text)
                      X: =Center(Parent.Width, Self.Width)
                      Y: =DataCardKey1.Y + DataCardKey1.Height
                - StarVisible1:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      Size: =DataCardKey1.Size
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      X: =DataCardValue1.X - Self.Width
                      Y: =DataCardValue1.Y
                - ErrorMessage1:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue1.Y
                - DataCardValue1:
                    Control: Classic/ComboBox
                    Properties:
                      DefaultSelectedItems: =If(d_m_form.Mode = FormMode.New, LookUp(Choices([@FE_Downtime].Line), varProductionLine = Value), Parent.Default)
                      DisplayFields: =["Value"]
                      IsSearchable: =false
                      Items: =Choices([@FE_Downtime].Line)
                      SearchFields: =["Value"]
                      SelectMultiple: =false
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =DisplayMode.View
                      Fill: =If(d_m_form.Mode = FormMode.Edit, varColor4, varColor5)
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.4
                      Size: =Self.Height / 3
                      Visible: =false
                      Width: =Self.Size * Len(Self.Selected.Value)
                      X: =Center(Parent.Width, Self.Width)
                      Y: =DataCardKey1.Y + DataCardKey1.Height
                - DataCardKey1:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.30
                      Size: =Self.Height / 2.5
                      Width: =Parent.Width
                      Wrap: =false
                      X: =1-1
                      Y: =1-1
            - Reason_DataCard1:
                Control: TypedDataCard
                Variant: comboBoxEditCard
                Properties:
                  DataField: ="Reason"
                  Default: =ThisItem.Reason
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Reason)
                  Required: =true
                  Update: =DataCardValue2.Selected
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Width: =683
                  X: =1
                  Y: =2
                Children:
                - HelpMessage:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: |-
                        =If(
                            IsBlank(DataCardValue2.Selected.Value),
                            Blank(),
                            Concatenate("This Reason is for: ", First(Filter(d_h_r_gallery.AllItems, reason = DataCardValue2.Selected.Value)).description)
                        )
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =Parent.Height * 0.2
                      Size: =Self.Height / 4
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width
                      Y: =DataCardValue2.Y + DataCardValue2.Height + 5
                - d_h_b_help:
                    Control: Classic/Icon
                    Variant: Cancel
                    Properties:
                      OnSelect: |-
                        =UpdateContext({locPopups: {Visible: true, Value: "help"}});
                      Color: =Color.Black
                      Fill: =RGBA(0,0,0,0)
                      Height: =DataCardValue2.Height / 2
                      Icon: =Icon.QuestionMark
                      Width: =Self.Height
                      X: =DataCardValue2.Width + DataCardValue2.X + Parent.Width * 0.02
                      Y: =(DataCardValue2.Y + DataCardValue2.Height/2) - Self.Height/2
                - StarVisible2:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =StarVisible1.Height
                      Size: =DataCardKey1.Size
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      X: =DataCardValue2.X - Self.Width
                      Y: =StarVisible1.Y
                - ErrorMessage2:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue2.Y
                - DataCardValue2:
                    Control: Classic/ComboBox
                    Properties:
                      DefaultSelectedItems: =Parent.Default
                      DisplayFields: =["Value"]
                      IsSearchable: =false
                      Items: |-
                        =Filter(Choices([@FE_Downtime].Reason),
                            Not(
                                Value = "Engineering DT" ||
                                Value = "Engineering Verifications" ||
                                Value = "Other" ||
                                Value = "Preventive Maintenance - Planned" ||
                                Value = "Planned Downtime" ||
                                Value = "Short Staffed Over Target" ||
                                Value = "Short Staffed Under Target" ||
                                Value = "Waiting For Parts" ||
                                Value = "Waiting on Labels"
                                )
                        )
                      SearchFields: =["Value"]
                      SelectMultiple: =false
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      Size: =Self.Height / 5
                      Width: =Min(Max(Self.Size*20, Len(Self.Selected.Value) * Self.Size), Self.Size * 40)
                      X: =Parent.Width/2 - Self.Width/2
                      Y: =DataCardValue1.Y
                - DataCardKey2:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Comments_DataCard1:
                Control: TypedDataCard
                Variant: textualEditCard
                Properties:
                  DataField: ="Comments"
                  Default: =ThisItem.Comments
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Comments)
                  MaxLength: =DataSourceInfo([@FE_Downtime], DataSourceInfo.MaxLength, Comments)
                  Update: =DataCardValue4.Text
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Width: =683
                  WidthFit: =true
                  Y: =3
                Children:
                - StarVisible5:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey6.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey6.Y
                - ErrorMessage5:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue4.Y
                - DataCardValue4:
                    Control: Classic/TextInput
                    Properties:
                      Default: =Parent.Default
                      DelayOutput: =true
                      MaxLength: =Parent.MaxLength
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height * 1.2
                      Mode: =TextMode.MultiLine
                      PaddingLeft: =5
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
                      Size: =DataCardValue1.Size * 0.75
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardKey6.Y + DataCardKey6.Height + 5
                - DataCardKey6:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      Align: =Align.Center
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =Parent.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Edit_Person_DataCard1:
                Control: TypedDataCard
                Variant: comboBoxEditCard
                Properties:
                  DataField: ="Edit_Person"
                  Default: =ThisItem.Record_Editor
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Record_Editor)
                  Update: =DataCardValue7.Selected
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Visible: =If(d_m_form.Mode = FormMode.New, false, true)
                  Width: =683
                  Y: =4
                Children:
                - StarVisible6:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey9.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey9.Y
                - ErrorMessage6:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue7.Y
                - DataCardValue7:
                    Control: Classic/ComboBox
                    Properties:
                      DefaultSelectedItems: =Parent.Default
                      DisplayFields: =["DisplayName","Email","Picture"]
                      IsSearchable: =false
                      Items: =Choices([@FE_Downtime].Record_Editor)
                      SearchFields: =["Claims"]
                      SelectMultiple: =false
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      ChevronBackground: =varColor1
                      ChevronFill: =varColorAccent
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      Size: =Self.Height / 4
                      Width: =Min(Max(Self.Size*20, Len(Self.Selected.DisplayName) * Self.Size), Self.Size * 40)
                      X: =Parent.Width/2 - Self.Width/2
                      Y: =DataCardValue1.Y
                - DataCardKey9:
                    Control: Label
                    Properties:
                      Text: ="Editor"
                      Align: =Align.Center
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Edit_Reason_DataCard1:
                Control: TypedDataCard
                Variant: textualEditCard
                Properties:
                  DataField: ="Edit_Reason"
                  Default: =ThisItem.Edit_Reason
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Edit_Reason)
                  MaxLength: =DataSourceInfo([@FE_Downtime], DataSourceInfo.MaxLength, Edit_Reason)
                  Update: =DataCardValue8.Text
                  DisplayMode: =Parent.DisplayMode
                  Height: =If(d_m_form.Mode = FormMode.New, (Parent.Height - Catalog_DataCard1.Height)/3, (Parent.Height - Catalog_DataCard1.Height)/4)
                  Visible: =If(d_m_form.Mode = FormMode.New, false, true)
                  Width: =683
                  X: =1
                  Y: =3
                Children:
                - StarVisible7:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Font: =Font.Verdana
                      Height: =DataCardKey10.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey10.Y
                - ErrorMessage7:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: '=DataCardValue8.Y '
                - DataCardValue8:
                    Control: Classic/TextInput
                    Properties:
                      Default: =Parent.Default
                      DelayOutput: =true
                      MaxLength: =Parent.MaxLength
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =Parent.DisplayMode
                      Font: =Font.Verdana
                      Height: =DataCardValue1.Height
                      Mode: =TextMode.MultiLine
                      PaddingLeft: =5
                      RadiusBottomLeft: =0
                      RadiusBottomRight: =0
                      RadiusTopLeft: =0
                      RadiusTopRight: =0
                      Size: =DataCardValue1.Size * 0.75
                      Width: =Parent.Width * 0.75
                      X: =Parent.Width/2 - Self.Width/2
                      Y: =DataCardKey10.Y + DataCardKey10.Height + 5
                - DataCardKey10:
                    Control: Label
                    Properties:
                      Text: ="Reason for editing the record."
                      Align: =Align.Center
                      AutoHeight: =true
                      Font: =Font.Verdana
                      Height: =DataCardKey1.Height
                      Size: =DataCardKey1.Size
                      Width: =DataCardKey1.Width
                      Wrap: =false
                      X: =DataCardKey1.X
                      Y: =DataCardKey1.Y
            - Shift_Letter_DataCard1:
                Control: TypedDataCard
                Variant: comboBoxEditCard
                Properties:
                  DataField: ="Shift_Letter"
                  Default: |-
                    ={
                        Value:
                            Switch(varShiftSelect,
                            "A Shift", "A",
                            "B Shift", "B",
                            "C Shift", "C",
                            "A"
                        )
                    }
                  DisplayName: =DataSourceInfo([@FE_Downtime],DataSourceInfo.DisplayName,Shift_Letter)
                  Required: =true
                  Update: =DataCardValue31.Selected
                  DisplayMode: =Parent.DisplayMode
                  Height: =50
                  Visible: =false
                  Width: =683
                  X: =1
                  Y: =4
                Children:
                - StarVisible10:
                    Control: Label
                    Properties:
                      Text: ="*"
                      Align: =Align.Center
                      Height: =DataCardKey38.Height
                      Visible: =And(Parent.Required, Parent.DisplayMode=DisplayMode.Edit)
                      Width: =30
                      Wrap: =false
                      Y: =DataCardKey38.Y
                - ErrorMessage38:
                    Control: Label
                    Properties:
                      Live: =Live.Assertive
                      Text: =Parent.Error
                      AutoHeight: =true
                      Height: =10
                      PaddingBottom: =0
                      PaddingLeft: =0
                      PaddingRight: =0
                      PaddingTop: =0
                      Visible: =Parent.DisplayMode=DisplayMode.Edit
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardValue31.Y + DataCardValue31.Height
                - DataCardValue31:
                    Control: Classic/ComboBox
                    Properties:
                      DefaultSelectedItems: =Parent.Default
                      DisplayFields: =["Value"]
                      Items: =Choices([@FE_Downtime].Shift_Letter)
                      SearchFields: =["Value"]
                      SelectMultiple: =false
                      Tooltip: =Parent.DisplayName
                      BorderColor: =If(IsBlank(Parent.Error), Parent.BorderColor, Color.Red)
                      DisplayMode: =Parent.DisplayMode
                      PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                      Width: =Parent.Width - 60
                      X: =30
                      Y: =DataCardKey38.Y + DataCardKey38.Height + 5
                - DataCardKey38:
                    Control: Label
                    Properties:
                      Text: =Parent.DisplayName
                      AutoHeight: =true
                      Height: =34
                      Width: =Parent.Width - 60
                      Wrap: =false
                      X: =30
                      Y: =10
