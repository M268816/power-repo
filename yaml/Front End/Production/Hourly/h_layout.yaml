- h_layout:
    Control: GroupContainer
    Variant: verticalAutoLayoutContainer
    Properties:
      DropShadow: =DropShadow.None
      Height: =Parent.Height
      LayoutAlignItems: =LayoutAlignItems.Stretch
      LayoutDirection: =LayoutDirection.Vertical
      LayoutGap: =
      LayoutMode: =LayoutMode.Auto
      RadiusBottomLeft: =0
      RadiusBottomRight: =0
      RadiusTopLeft: =0
      RadiusTopRight: =0
      Width: =Parent.Width
      X: =
    Children:
    - h_header:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          Fill: =varColor1
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =locPadding * 2
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          PaddingBottom: =locPadding
          PaddingLeft: =locPadding
          PaddingRight: =locPadding
          PaddingTop: =locPadding
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - h_collect:
            Control: Classic/Button
            Properties:
              OnSelect: "=UpdateContext({locLoading:{Visible: true, Value: 1, Text: \"Starting\"}});\n\n/*Set Shift*/\nIf(\n    Hour(Now()) >= 23,\n    Set(varShiftSelect, \"C Shift\"),\n    Hour(Now()) >= 15,\n    Set(varShiftSelect, \"B Shift\"),\n    Hour(Now()) >= 7,\n    Set(varShiftSelect, \"A Shift\")\n);\n\n/*Delegated Collection - Downtime*/\nUpdateContext({locLoading:{Visible: true, Value: 5, Text: \"Collecting Downtime Data\"}});\nIf(\n    /*Check for Updates*/\n    Or(\n        First(Sort(Filter(FE_Downtime, Line.Value = varProductionLine), ID, SortOrder.Descending)).ID <> First(Sort(collectDowntime, ID, SortOrder.Descending)).ID,\n        First(collectDowntime).Line <> varProductionLine\n    ),\n\n    Clear(collectDowntime);\n    ForAll(\n        Filter(FE_Downtime,\n            Ended <= DateAdd(varNowDay, 23, TimeUnit.Hours),\n            Started >= DateAdd(varNowDay, -1, TimeUnit.Hours),\n            Line.Value = varProductionLine\n        ),\n        Collect(collectDowntime,\n            {\n                ID: ThisRecord.ID,\n                Line: ThisRecord.Line.Value,\n                Lot: ThisRecord.Lot,\n                Catalog: ThisRecord.Catalog,\n                Started: ThisRecord.Started,\n                Ended: ThisRecord.Ended,\n                Reason: ThisRecord.Reason.Value,\n                Total_Downtime: Value(ThisRecord.Total_Downtime),\n                Comments: ThisRecord.Comments,\n                Shift_Letter: ThisRecord.Shift_Letter,\n                Record_Editor: ThisRecord.Record_Editor,\n                Edit_Reason: ThisRecord.Edit_Reason\n            }\n        )\n    );\n);\n\n/*Delegated Collection - Production*/\nUpdateContext({locLoading:{Visible: true, Value: 10, Text: \"Collecting Production Data\"}});\nIf(\n    /*Check for Updates*/\n    Or(\n        First(Sort(Filter(FE_Production, Line.Value = varProductionLine), ID, SortOrder.Descending)).ID <> First(Sort(collectProduction, ID, SortOrder.Descending)).ID,\n        First(collectProduction).Line <> varProductionLine\n    ),\n    \n    Clear(collectProduction);\n    ForAll(\n        Filter(FE_Production,\n            Hour_Ending <= DateAdd(varNowDay, 23, TimeUnit.Hours),\n            Hour_Starting >= DateAdd(varNowDay, -1, TimeUnit.Hours),\n            Line.Value = varProductionLine\n        ),\n        Collect(collectProduction,\n            {\n                ID: ThisRecord.ID,\n                Lot: ThisRecord.Lot,\n                Catalog: ThisRecord.Catalog,\n                Line: ThisRecord.Line.Value,\n                Hour_Starting: ThisRecord.Hour_Starting,\n                Hour_Ending: ThisRecord.Hour_Ending,\n                Unit_Starting: ThisRecord.Unit_Starting,\n                Unit_Ending: ThisRecord.Unit_Ending,\n                Amount_Built: Round(Value(ThisRecord.Amount_Built),0),\n                Hourly_Goal: ThisRecord.Hourly_Goal,\n                QA_Units: ThisRecord.QA_Units,\n                Reject_Units: ThisRecord.Reject_Units,\n                Quality: ThisRecord.Quality,\n                Safety: ThisRecord.Safety,\n                Shift_Letter: ThisRecord.Shift_Letter,\n                Record_Editor: ThisRecord.Record_Editor,\n                Edit_Reason: ThisRecord.Edit_Reason\n            }\n        )\n    );\n);\n\nSelect(h_update);"
              Text: ="collect"
              Visible: =false
        - h_update:
            Control: Classic/Button
            Properties:
              OnSelect: "=UpdateContext({locLoading:{Visible: true, Value: 15, Text: \"Updating\"}});\n\n/*Today and Now function updates*/\nSet(varNow, Now());\nSet(varNowDay, Today());\n\n/*Set Shift*/\nIf(\n    Hour(varNow) >= 23,\n    Set(varShiftSelect, \"C Shift\"),\n    Hour(varNow) >= 15,\n    Set(varShiftSelect, \"B Shift\"),\n    Hour(varNow) >= 7,\n    Set(varShiftSelect, \"A Shift\"),\n    Set(varShiftSelect, \"C Shift\")\n);\n\n/*Create and reset Schema for displaying hourly informaiton*/\nUpdateContext({locLoading:{Visible: true, Value: 25, Text: \"Creating Hour By Hour Table\"}});\nClearCollect(\n    collectHourlySchema,\n    {\n        SCH_Hour_Starting: DateAdd(DateTime(Year(Now()),Month(Now()),Day(Now()),0,0,0), -1, TimeUnit.Hours),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),0,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),0,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),1,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),1,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),2,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),2,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),3,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),3,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),4,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),4,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),5,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),5,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),6,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),6,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),7,0,0),\n        SCH_Shift_Letter: {Value: \"C\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),7,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),8,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),8,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),9,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),9,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),10,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),10,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),11,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),11,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),12,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),12,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),13,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),13,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),14,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),14,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),15,0,0),\n        SCH_Shift_Letter: {Value: \"A\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),15,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),16,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),16,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),17,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),17,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),18,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),18,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),19,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),19,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),20,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),20,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),21,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),21,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),22,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    },\n    {\n        SCH_Hour_Starting: DateTime(Year(Now()),Month(Now()),Day(Now()),22,0,0),\n        SCH_Hour_Ending: DateTime(Year(Now()),Month(Now()),Day(Now()),23,0,0),\n        SCH_Shift_Letter: {Value: \"B\"}\n    }\n);\n\n/*Join Schema (on visible) and Local Unit Data*/\nUpdateContext({locLoading:{Visible: true, Value: 30, Text: \"Joining production data into Hourly Tables\"}});\nClearCollect(collectJoinedUnitDisplay,\n    // Iterate through all source records and join to destination collection\n    ForAll(\n        // Iterate through the source collection\n        collectHourlySchema,\n        { \n            // Columns to appear in dataset\n            ID: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).ID,\n            Catalog: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Catalog,\n            Lot: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Lot,\n            Line: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Line,\n            Hour_Starting: ThisRecord.SCH_Hour_Starting,\n            Hour_Ending: ThisRecord.SCH_Hour_Ending,\n            Unit_Starting: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Unit_Starting,\n            Unit_Ending: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Unit_Ending,\n            Amount_Built: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Amount_Built,\n            Goal: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Hourly_Goal,\n            Reject_Units: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Reject_Units,\n            Quality: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Quality,\n            Safety: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Safety,\n            Shift_Letter: ThisRecord.SCH_Shift_Letter,\n            Record_Editor: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Record_Editor,\n            Edit_Reason: LookUp(collectProduction, SCH_Hour_Ending = Hour_Ending).Edit_Reason\n        }\n    )\n);\n\n/*Join Schema (on visible) and Local Downtime Data*/\nUpdateContext({locLoading:{Visible: true, Value: 80, Text: \"Joining downtime data into Hourly Tables\"}});\nClearCollect(collectJoinedDowntimeDisplay,\n    // Iterate through all source records and join to destination collection\n    ForAll(\n\n        // Iterate through the source collection\n        collectHourlySchema,\n        { \n            // Columns to appear in dataset\n            ID:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting, \n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).ID,\n\n            Line:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Line,\n\n            Lot:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Lot,\n            \n            Catalog:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Catalog,\n            \n            Started: ThisRecord.SCH_Hour_Starting,\n            Ended: ThisRecord.SCH_Hour_Ending,\n\n            Reason:\n                First(\n                    Sort(\n                        Sort(\n                            AddColumns(\n                                Filter(\n                                    collectDowntime,\n                                    /*Both the...*/\n                                    And(\n                                        /*Time and total downtime must be...*/\n                                        Or(\n                                            /*Either the end time is between than the start and end schema hour*/\n                                            And(\n                                                Ended <= SCH_Hour_Ending,\n                                                Ended > SCH_Hour_Starting\n                                            ),\n                                            /*Or the start time is between the start and end schema hour*/\n                                            And(\n                                                Started >= SCH_Hour_Starting,\n                                                Started < SCH_Hour_Ending\n                                            ),\n                                            /*Or the time passes through this hour*/\n                                            And(\n                                                Started < SCH_Hour_Starting,\n                                                Ended > SCH_Hour_Starting\n                                            )\n                                        )\n                                    )\n                                ),\n                                Time_Calc,\n                                If(\n                                    And(\n                                        Started >= SCH_Hour_Starting,\n                                        Ended <= SCH_Hour_Ending\n                                    ),\n                                    Total_Downtime,\n                                    Total_Downtime -\n                                    If(\n                                        Started < SCH_Hour_Starting,\n                                        DateDiff(Started, SCH_Hour_Starting, TimeUnit.Minutes),\n                                        0\n                                    ) +\n                                    If(\n                                        Ended > SCH_Hour_Ending,\n                                        DateDiff(Ended, SCH_Hour_Ending, TimeUnit.Minutes),\n                                        0\n                                    )\n                                )\n                            ),\n                            Time_Calc,\n                            SortOrder.Descending\n                        ),\n                        Total_Downtime,\n                        SortOrder.Descending\n                    )\n                ).Reason,\n            \n            Total_Downtime:\n                If(                   \n                    !IsBlank(\n                        LookUp(\n                            collectDowntime,\n                            Or(\n                                /*Either the end time is between than the start and end schema hour*/\n                                And(\n                                    Ended <= SCH_Hour_Ending,\n                                    Ended > SCH_Hour_Starting\n                                ),\n                                /*Or the start time is between the start and end schema hour*/\n                                And(\n                                    Started >= SCH_Hour_Starting,\n                                    Started < SCH_Hour_Ending\n                                ),\n                                /*Or the time passes through this hour*/\n                                And(\n                                    Started < SCH_Hour_Starting,\n                                    Ended > SCH_Hour_Starting\n                                )\n                            )\n                        )\n                    ),\n\n                    Sum(\n                        Filter(\n                            collectDowntime,\n                            Or(\n                                /*Either the end time is between than the start and end schema hour*/\n                                And(\n                                    Ended <= SCH_Hour_Ending,\n                                    Ended > SCH_Hour_Starting\n                                ),\n                                /*Or the start time is between the start and end schema hour*/\n                                And(\n                                    Started >= SCH_Hour_Starting,\n                                    Started < SCH_Hour_Ending\n                                ),\n                                /*Or the time passes through this hour*/\n                                And(\n                                    Started < SCH_Hour_Starting,\n                                    Ended > SCH_Hour_Starting\n                                )\n                            )\n                        ),\n                        /*Difference between endtime and start time*/\n                        DateDiff(\n                            /*Find the max starting time for that hour*/\n                            Max(\n                                Started,\n                                DateTime(\n                                    Year(Started),Month(SCH_Hour_Starting),Day(SCH_Hour_Starting),\n                                    Hour(SCH_Hour_Starting),0,0\n                                )\n                            ),\n                            /*Find the min ending time for that hour*/\n                            Min(\n                                Ended,\n                                DateTime(\n                                    Year(Ended),Month(SCH_Hour_Ending),Day(SCH_Hour_Ending),\n                                    Hour(SCH_Hour_Ending),0,0\n                                )\n                            ),\n                            TimeUnit.Minutes\n                        )\n                    )\n                ),\n            \n            Comments:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Comments,\n\n            Shift_Letter: ThisRecord.SCH_Shift_Letter,\n\n            Edit_Person:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Record_Editor,\n\n            Edit_Reason:\n                LookUp(\n                    collectDowntime,\n                    /*Both the...*/\n                    And(\n                        /*Time and total downtime must be...*/\n                        Or(\n                            /*Either the end time is between than the start and end schema hour*/\n                            And(\n                                Ended <= SCH_Hour_Ending,\n                                Ended > SCH_Hour_Starting\n                            ),\n                            /*Or the start time is between the start and end schema hour*/\n                            And(\n                                Started >= SCH_Hour_Starting,\n                                Started < SCH_Hour_Ending\n                            ),\n                            /*Or the time passes through this hour*/\n                            And(\n                                Started < SCH_Hour_Starting,\n                                Ended > SCH_Hour_Starting\n                            )\n                        ),\n                        /*The total downtime must equal the greatest downtime within the hours*/\n                        Value(Total_Downtime) = Max(Value(Total_Downtime))\n                    )\n                ).Edit_Reason\n        }\n    )\n);\n\n/* Stop Loading Prompt */\nUpdateContext({locLoading:{Visible: true, Value: 95, Text: \"Finishing Up\"}});\n/*Garbage Collecting*/\n\n/*End*/\nUpdateContext({locLoading:{Visible: true, Value: 100, Text: \"Completed\"}});\nUpdateContext({locLoading:{Visible: false, Value: -1, Text: \"Not Loading\"}});"
              Text: ="update"
              FillPortions: =1
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Visible: =false
        - h_logo:
            Control: Image
            Properties:
              Image: =LOGO_MSIG_SBlue_FIT_ALPHA
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Width: =Self.Height * 3
        - h_h_title:
            Control: Text
            Properties:
              Align: ='TextCanvas.Align'.Center
              FontColor: =varColor5
              Size: =24
              Text: ="Daily Management System for " & varProductionLine
              VerticalAlign: ='TextCanvas.VerticalAlign'.Middle
              FillPortions: =5
              LayoutMinHeight: =10
              LayoutMinWidth: =10
        - h_h_padding:
            Control: GroupContainer
            Variant: manualLayoutContainer
            Properties:
              FillPortions: =0
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              Width: =h_logo.Width - h_h_n_bugs.Width = h_h_n_pallet.Width
        - h_h_n_pallet:
            Control: Image
            Properties:
              OnSelect: |-
                =UpdateContext({locPopups: {Visible: true, Value: "pallet"}});
              Image: =gblSVG.Pallet
              Height: =Parent.Height * 0.75
              HoverBorderColor: =ColorFade(varColorYes, 20%)
              HoverFill: =ColorFade(varColorAccent, 75%)
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              RadiusBottomLeft: =Self.Width/2
              RadiusBottomRight: =Self.Width/2
              RadiusTopLeft: =Self.Width/2
              RadiusTopRight: =Self.Width/2
              Width: =Self.Height
              Y: =Parent.Height/2 - Self.Height/2
        - h_h_n_bugs:
            Control: Image
            Properties:
              OnSelect: =Navigate(Bugs)
              Image: =gblSVG.Bug
              Height: =Parent.Height * 0.75
              HoverBorderColor: =ColorFade(varColorYes, 20%)
              HoverFill: =ColorFade(varColorAccent, 75%)
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              RadiusBottomLeft: =Self.Width/2
              RadiusBottomRight: =Self.Width/2
              RadiusTopLeft: =Self.Width/2
              RadiusTopRight: =Self.Width/2
              Width: =Self.Height
              X: =Parent.Width * 0.99 - Self.Width
              Y: =Parent.Height/2 - Self.Height/2
    - h_body:
        Control: GroupContainer
        Variant: horizontalAutoLayoutContainer
        Properties:
          AlignInContainer: =AlignInContainer.SetByContainer
          DropShadow: =DropShadow.None
          FillPortions: =11
          LayoutAlignItems: =LayoutAlignItems.Stretch
          LayoutGap: =
          LayoutMinHeight: =10
          LayoutMinWidth: =10
          LayoutMode: =LayoutMode.Auto
          RadiusBottomLeft: =0
          RadiusBottomRight: =0
          RadiusTopLeft: =0
          RadiusTopRight: =0
        Children:
        - h_nav:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              Fill: =varColor3
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutDirection: =LayoutDirection.Vertical
              LayoutGap: =locPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =locPadding
              PaddingLeft: =locPadding
              PaddingRight: =locPadding
              PaddingTop: =locPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - h_n_shift:
                Control: Classic/DropDown
                Properties:
                  OnChange: =Set(varShiftSelect, Self.SelectedText.Value);
                  Default: |-
                    =If(
                        !IsBlankOrError(varShiftSelect),
                        varShiftSelect,
                        "All"
                    )
                  Items: =["All", "A Shift", "B Shift", "C Shift"]
                  BorderThickness: =0
                  ChevronBackground: =varColor1
                  ChevronFill: =varColorAccent
                  ChevronHoverBackground: =ColorFade(Self.ChevronBackground, -20%)
                  ChevronHoverFill: =ColorFade(Self.ChevronFill, -20%)
                  Fill: =varColor5
                  FillPortions: =1
                  FocusedBorderThickness: =0
                  Height: =Parent.Height
                  HoverFill: =ColorFade(Self.Fill, -20%)
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  SelectionFill: |-
                    =//RGBA(56, 96, 178, 1)
                    varColor3
                  Size: =Self.Height / 3.5
                  Width: =Parent.Width
                  X: =Parent.Width/2 - Self.Width/2
                  Y: =Parent.Height - Parent.Height
            - h_n_seperator_0:
                Control: Rectangle
                Properties:
                  Height: =1
                  LayoutMinWidth: =10
            - h_n_change:
                Control: Classic/Button
                Properties:
                  OnSelect: |-
                    =Set(varShiftSelect, "Null");

                    Set(varOperator_1, Blank());
                    Set(varOperator_2, Blank());
                    Set(varOperator_3, Blank());
                    Set(varOperator_4, Blank());
                    Set(varOperator_5, Blank());

                    Navigate(Operators, ScreenTransition.UnCover);
                  Text: ="Change Operators"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Home", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =2
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Height / 8
            - h_n_hourly:
                Control: Classic/Button
                Properties:
                  OnSelect: "=/*Set the time*/\nSet(varNow, Now());\n\n/*Check for lot, catalog, and operator change times then navigate to hourly inputs*/\nIf(\n    /*check for lots and catalog through check made in color change on cat and lot fields*/\n    Or(\n        IsBlank(varLot),\n        IsBlank(varCatalog)\n    ),\n    UpdateContext({locPopups: {Visible: true, Value: \"error\"}}),\n    \n    /*check against line and time stored in collectNotifyTimes*/\n    And(\n        Hour(varNow) in LookUp(collectNotifyTimes, varProductionLine in line.Value).hour,\n        /*Time must be within 10 minutes before and after the checked Hour.*/\n        varNow > DateAdd(DateTime(Year(varNow),Month(varNow),Day(varNow),Hour(varNow),Minute(0),Second(0)), -10, TimeUnit.Minutes),\n        varNow < DateAdd(DateTime(Year(varNow),Month(varNow),Day(varNow),Hour(varNow),Minute(0),Second(0)), 10,TimeUnit.Minutes)\n\n    ),\n    UpdateContext({locPopups: {Visible: true, Value: \"ops\"}}),\n\n    /*Else set the form to 'new'*/\n    Set(varUnitMode, FormMode.New);\n    Navigate(Units);\n    \n);"
                  Text: ="Hourly Input"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Home", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =2
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Height / 8
            - h_n_downtime:
                Control: Classic/Button
                Properties:
                  OnSelect: "=If(\n    Or(\n        IsBlank(varLot),\n        IsBlank(varCatalog)\n    ),\n    \n    UpdateContext({locPopups:{Visible: true, Value: \"error\"}}),\n    \n    Set(varDowntimeMode,FormMode.New);\n        Navigate(Downtime_Screen);\n);"
                  Text: ="Downtime Input"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Home", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =2
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Height / 8
            - h_n_materials:
                Control: Classic/Button
                Properties:
                  OnSelect: =Navigate(Materials)
                  Text: ="Order Materials"
                  Color: =varColor0
                  DisplayMode: =If(App.ActiveScreen.Name = "Home", DisplayMode.Disabled, DisplayMode.Edit)
                  Fill: =varColorAccent
                  FillPortions: =2
                  FontWeight: =FontWeight.Normal
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  Size: =Self.Height / 8
            - h_n_seperator_1:
                Control: Rectangle
                Properties:
                  Height: =1
                  LayoutMinWidth: =10
            - h_n_footer:
                Control: GroupContainer
                Variant: manualLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  DropShadow: =DropShadow.None
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  RadiusBottomLeft: =0
                  RadiusBottomRight: =0
                  RadiusTopLeft: =0
                  RadiusTopRight: =0
                Children:
                - h_n_f_text:
                    Control: Text
                    Properties:
                      Align: ='TextCanvas.Align'.Center
                      Size: =Self.Height / 7
                      Text: ="MilliporeSigma is the U.S. and Canada Life Science business of Merck KGaA, Darmstadt, Germany."
                      VerticalAlign: ='TextCanvas.VerticalAlign'.Bottom
                      Height: =Parent.Height
                      Width: =Parent.Width
        - h_main:
            Control: GroupContainer
            Variant: horizontalAutoLayoutContainer
            Properties:
              AlignInContainer: =AlignInContainer.SetByContainer
              DropShadow: =DropShadow.None
              FillPortions: =9
              LayoutAlignItems: =LayoutAlignItems.Stretch
              LayoutGap: =locPadding
              LayoutMinHeight: =10
              LayoutMinWidth: =10
              LayoutMode: =LayoutMode.Auto
              PaddingBottom: =locPadding
              PaddingLeft: =locPadding
              PaddingRight: =locPadding
              PaddingTop: =locPadding
              RadiusBottomLeft: =0
              RadiusBottomRight: =0
              RadiusTopLeft: =0
              RadiusTopRight: =0
            Children:
            - h_overview:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  AlignInContainer: =AlignInContainer.SetByContainer
                  Fill: =varColor4
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutDirection: =LayoutDirection.Vertical
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                Children:
                - h_o_goal_title:
                    Control: Label
                    Properties:
                      Text: ="Hourly Goal"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =varColor0
                      Fill: =RGBA(0,0,0,0)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*10
                - h_o_goal:
                    Control: Label
                    Properties:
                      Text: =varHourlyGoal
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =Color.Black
                      Fill: =ColorFade(varColor4, 50%)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*9
                - h_o_total_title:
                    Control: Label
                    Properties:
                      Text: ="Total Units"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =varColor0
                      Fill: =RGBA(0,0,0,0)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*8
                - h_o_total:
                    Control: Label
                    Properties:
                      Text: "=/* Daily Goal Tracking*/\n\n/*Find sum of 'actual' column from filtered collection*/\nSum(\n    /*The Filtered local unit data*/\n    Filter(\n        collectProduction,\n        \n        /*Filter by todays date*/\n        Text(Hour_Ending, DateTimeFormat.ShortDate) = Text(Today(),DateTimeFormat.ShortDate),\n        \n        /*Filter by selected line*/\n        Line = varProductionLine,\n        \n        /*Filter with a switch, by selected shift*/\n        Switch(varShiftSelect,\n            \"A Shift\",\n            Shift_Letter.Value = \"A\",\n            \"B Shift\",\n            Shift_Letter.Value = \"B\",\n            \"C Shift\",\n            Shift_Letter.Value = \"C\",\n            Shift_Letter.Value = Shift_Letter.Value\n            )\n        ),\n    /*Sum the 'actual' column*/\n    Amount_Built*1\n    )\n\n/*Concatenate*/\n& \" / \" & \n\n/*Find sum of 'goal' column from filtered collection*/\nSum(\n    /*The Filtered local unit data*/\n    Filter(\n        collectProduction,\n        \n        /*Filter by todays date*/\n        Text(Hour_Ending, DateTimeFormat.ShortDate) = Text(Today(),DateTimeFormat.ShortDate),\n        \n        /*Filter by selected line*/\n        Line = varProductionLine,\n        \n        /*Filter with a switch, by selected shift*/\n        Switch(varShiftSelect,\n            \"A Shift\",\n            Shift_Letter.Value = \"A\",\n            \"B Shift\",\n            Shift_Letter.Value = \"B\",\n            \"C Shift\",\n            Shift_Letter.Value = \"C\",\n            Shift_Letter.Value = Shift_Letter.Value\n            )\n        ),\n    /*Sum the 'goal' column*/\n    Hourly_Goal\n    )"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =Color.Black
                      Fill: =ColorFade(varColor4, 50%)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*7
                - h_o_average_title:
                    Control: Label
                    Properties:
                      Text: ="Average"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =varColor0
                      Fill: =RGBA(0,0,0,0)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*6
                - h_o_average:
                    Control: Label
                    Properties:
                      Text: |-
                        =IfError(
                            Round(
                                Average(
                                    Filter(
                                        collectProduction,
                                        DateValue(Hour_Ending) = DateValue(Today()),
                                        Line = varProductionLine,
                                        Switch(varShiftSelect,
                                            "A Shift",
                                            Shift_Letter.Value = "A",
                                            "B Shift",
                                            Shift_Letter.Value = "B",
                                            "C Shift",
                                            Shift_Letter.Value = "C",
                                            Shift_Letter.Value = Shift_Letter.Value
                                        )
                                    ),
                                    Amount_Built
                                ),
                                0
                            ),
                            "0"
                        )
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =Color.Black
                      Fill: =ColorFade(varColor4, 50%)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: |
                        =Parent.Height - Self.Height*5
                - h_o_rejects_title:
                    Control: Label
                    Properties:
                      Text: ="Total Rejects"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =varColor0
                      Fill: =RGBA(0,0,0,0)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Visible: =false
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*4
                - h_o_rejects:
                    Control: Label
                    Properties:
                      Text: |-
                        =IfError(
                            Sum(
                                Filter(
                                    collectProduction,
                                    DateValue(Hour_Ending) = DateValue(Today()),
                                    Line = varProductionLine,
                                    Switch(varShiftSelect,
                                        "A Shift",
                                        Shift_Letter.Value = "A",
                                        "B Shift",
                                        Shift_Letter.Value = "B",
                                        "C Shift",
                                        Shift_Letter.Value = "C",
                                        "All",
                                        Shift_Letter.Value = Shift_Letter.Value
                                        )
                                    ),
                                Reject_Units
                                ),
                            "ERROR"
                            )
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =Color.Black
                      Fill: =ColorFade(varColor4, 50%)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Visible: =false
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height*3
                - h_o_downtime_title:
                    Control: Label
                    Properties:
                      Text: ="Downtime"
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =varColor0
                      Fill: =RGBA(0,0,0,0)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: |
                        =Parent.Height - Self.Height*2
                - h_o_downtime:
                    Control: Label
                    Properties:
                      Text: |-
                        =IfError(
                            Sum(
                                Filter(
                                    collectDowntime,
                                    DateValue(Ended) >= (DateValue(DateAdd(Today(),-1,TimeUnit.Hours))),
                                    Line = varProductionLine,
                                    Switch(varShiftSelect,
                                        "A Shift",
                                        Shift_Letter.Value = "A",
                                        "B Shift",
                                        Shift_Letter.Value = "B",
                                        "C Shift",
                                        Shift_Letter.Value = "C",
                                        "All",
                                        Shift_Letter.Value = Shift_Letter.Value
                                    )
                                ),
                                Total_Downtime
                            ),
                            "SUM ERROR"
                        )
                      Align: =Align.Center
                      BorderColor: =Color.Black
                      Color: =Color.Black
                      Fill: =ColorFade(varColor4, 50%)
                      FillPortions: =1
                      Font: =Font.Verdana
                      Height: =Parent.Height/10
                      LayoutMinHeight: =10
                      LayoutMinWidth: =10
                      Size: =Self.Height / 6
                      Width: =Parent.Width
                      Y: =Parent.Height - Self.Height
            - h_section_2:
                Control: GroupContainer
                Variant: horizontalAutoLayoutContainer
                Properties:
                  DropShadow: =DropShadow.None
                  Fill: =varColor5
                  FillPortions: =9
                  Height: =Parent.Height - Self.Y - Parent.Width * 0.01
                  LayoutAlignItems: =LayoutAlignItems.Stretch
                  LayoutGap: |-
                    =If(
                        locDowntimeExpanded,
                        0,
                        Parent.Width * 0.01
                    )
                  LayoutMinHeight: =10
                  LayoutMinWidth: =10
                  LayoutMode: =LayoutMode.Auto
                  RadiusBottomLeft: =8
                  RadiusBottomRight: =8
                  RadiusTopLeft: =8
                  RadiusTopRight: =8
                  Width: =Parent.Width - Self.X - Parent.Width * 0.01
                  X: =1
                  Y: =1
                Children:
                - h_units:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.None
                      Fill: =varColor5
                      Height: =Parent.Height - Self.Y - Parent.Width * 0.01
                      LayoutMinWidth: =0
                      RadiusBottomLeft: =8
                      RadiusBottomRight: =8
                      RadiusTopLeft: =8
                      RadiusTopRight: =8
                      Visible: =!locDowntimeExpanded
                      Width: =(Parent.Width - Self.X - Parent.Width * 0.02) / 2
                      Y: =1
                    Children:
                    - h_u_gallery:
                        Control: Gallery
                        Variant: BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0
                        Properties:
                          OnSelect: "=//SelectedState;\nIf(\n    /*If the selected ID is blank*/\n    IsBlankOrError(h_u_gallery.Selected.ID),\n    \n    /*Also check if*/\n    If(\n        /*The catalog and lot are entered correctly*/\n        Or(\n            IsBlank(varLot),\n            IsBlank(varCatalog)\n        ),\n\n        /*Show error if the lot and cat are empty*/\n        UpdateContext({locPopups: {Visible: true, Value: \"error\"}}),\n\n        /*Else set the unit form to new, the id to Blank, and navigate*/\n        Set(varUnitMode, FormMode.New);\n            Set(varSelectedUnitID, Blank());\n                Navigate(Units);\n    ),\n    \n    /*If the ID is not blank change the unit form to edit, set the ID, and navigate*/\n    Set(varUnitMode, FormMode.Edit);\n            Set(varSelectedUnitID, h_u_gallery.Selected.ID);\n                Navigate(Units);\n);"
                          Items: |-
                            =/*Filter Joined collection on shift letter, sort not needed as it is built into the joined collection*/
                            Filter(
                                collectJoinedUnitDisplay,
                                Switch(varShiftSelect,
                                    "A Shift",
                                    Shift_Letter.Value = "A",
                                    "B Shift",
                                    Shift_Letter.Value = "B",
                                    "C Shift",
                                    Shift_Letter.Value = "C",
                                    "All",
                                    Shift_Letter.Value = Shift_Letter.Value
                                )
                            )
                          BorderColor: =RGBA(0, 0, 0, 1)
                          DelayItemLoading: =true
                          Height: =Parent.Height - Self.Y
                          Layout: =Layout.Vertical
                          LoadingSpinner: =LoadingSpinner.Data
                          ShowScrollbar: =false
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 8
                          Transition: =Transition.Push
                          Width: =Parent.Width
                          X: =1-1
                          Y: =h_u_header.Y + h_u_header.Height
                        Children:
                        - h_u_gallery_layout:
                            Control: GroupContainer
                            Variant: horizontalAutoLayoutContainer
                            Properties:
                              DropShadow: =DropShadow.None
                              Height: =Parent.TemplateHeight - h_u_g_seperator.Height
                              LayoutMode: =LayoutMode.Auto
                              RadiusBottomLeft: =0
                              RadiusBottomRight: =0
                              RadiusTopLeft: =0
                              RadiusTopRight: =0
                              Width: =Parent.TemplateWidth
                              X: =1-1
                              Y: =1-1
                            Children:
                            - h_u_g_time_layout:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =Parent.Height
                                  LayoutMinWidth: =0
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - h_u_g_hour_starting:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_u_gallery)
                                      Text: =TimeValue(ThisItem.Hour_Starting)
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =h_u_g_hour_ending.Height
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =h_u_g_hour_ending.X
                                      Y: =h_u_g_hour_ending.Y + Self.Height
                                - h_u_g_hour_ending:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_u_gallery)
                                      Text: =TimeValue(ThisItem.Hour_Ending)
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor3
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =(Parent.Height - h_u_g_seperator.Height)/2
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =1-1
                                      Y: =1-1
                            - h_u_g_lot_layout:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =Parent.Height
                                  LayoutMinWidth: =0
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - h_u_g_catalog:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_u_gallery)
                                      Text: =ThisItem.Catalog
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =h_u_g_hour_ending.Height
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_u_g_hour_ending.Size
                                      Width: =Parent.Width
                                      X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 1)
                                      Y: =h_u_g_hour_ending.Y + Self.Height
                                - h_u_g_lot:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_u_gallery)
                                      Text: =ThisItem.Lot
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =(Parent.Height - h_u_g_seperator.Height)/2
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_u_g_hour_ending.Size
                                      Width: =Parent.Width
                                      X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 1)
                                      Y: =1-1
                            - h_u_g_built:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_u_gallery)
                                  Text: =ThisItem.Amount_Built
                                  Align: =Align.Center
                                  BorderColor: |-
                                    =If(
                                        ThisItem.Amount_Built = 0,
                                        varColor4,
                                        ThisItem.Amount_Built = Blank(),
                                        varColor4,
                                        Value(ThisItem.Amount_Built) <= Value(varHourlyGoal),
                                        varColorNo,
                                        Value(ThisItem.Amount_Built) >= Value(varHourlyGoal),
                                        varColorYes,
                                        varColor4
                                    )
                                  Color: |-
                                    =If(
                                        ThisItem.Amount_Built = 0,
                                        varColor0,
                                        ThisItem.Amount_Built = Blank(),
                                        varColor0,
                                        Value(ThisItem.Amount_Built) <= Value(varHourlyGoal),
                                        varColor5,
                                        Value(ThisItem.Amount_Built) >= Value(varHourlyGoal),
                                        varColor5,
                                        varColor0
                                    )
                                  Fill: |-
                                    =If(
                                        /*If the build amount is zero or has not been calculated*/
                                        ThisItem.Amount_Built = 0,
                                        varColor4,
                                        ThisItem.Amount_Built = Blank(),
                                        varColor4,
                                        /*If the build amount is less than 80% goal*/
                                        Value(ThisItem.Amount_Built) < Value(ThisItem.Goal) * 0.80,
                                        varColorNo,
                                        /*If the build amount is between 80% and 100% Goal*/
                                        And(
                                            Value(ThisItem.Amount_Built) >= Value(ThisItem.Goal) * 0.80,
                                            Value(ThisItem.Amount_Built) < Value(ThisItem.Goal)
                                        ),
                                        varColor1,
                                        /*If the built amount equals or is greater than goal*/
                                        Value(ThisItem.Amount_Built) >= Value(ThisItem.Goal),
                                        varColorYes,
                                        varColor4
                                    )
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  PaddingRight: =0
                                  Size: =h_section_2.Width / 100
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 2)
                                  Y: =1-1
                            - h_u_g_goal:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_u_gallery)
                                  Text: |-
                                    =If(
                                        Value(ThisItem.Goal) = 0,
                                        0,
                                        ThisItem.Goal
                                        )
                                  Align: =Align.Center
                                  Color: =Color.Black
                                  Fill: =varColor4
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Size: =h_section_2.Width / 100
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 2)
                                  Y: =1-1
                            - h_u_g_unit_starting:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_u_gallery)
                                  Text: =ThisItem.Unit_Starting
                                  Align: =Align.Center
                                  Color: =Color.Black
                                  Fill: =varColor4
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Size: =h_section_2.Width / 100
                                  Visible: =locUnitsExpanded
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 3)
                                  Y: =1-1
                            - h_u_g_unit_ending:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_u_gallery)
                                  Text: =ThisItem.Unit_Ending
                                  Align: =Align.Center
                                  Color: =Color.Black
                                  Fill: =varColor4
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Size: =h_section_2.Width / 100
                                  Visible: =locUnitsExpanded
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 4)
                                  Y: =1-1
                        - h_u_g_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Parent.TemplateHeight * 0.02
                              Fill: =varColorAccent
                              Height: =Parent.TemplateHeight * 0.05
                              Width: =Parent.Width
                              X: =1-1
                              Y: =Parent.TemplateHeight - Self.Height
                    - h_u_header:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          DropShadow: =DropShadow.None
                          Height: =Parent.Height * 0.05
                          LayoutMode: =LayoutMode.Auto
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width
                          X: =1-1
                          Y: =h_u_title.Height + h_u_title.Y
                        Children:
                        - h_u_h_time:
                            Control: Label
                            Properties:
                              Text: ="Time"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                        - h_u_h_lot:
                            Control: Label
                            Properties:
                              Text: ="Lot"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                        - h_u_h_built:
                            Control: Label
                            Properties:
                              Text: ="Built"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                        - h_u_h_goal:
                            Control: Label
                            Properties:
                              Text: ="Goal"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                        - h_u_h_starting:
                            Control: Label
                            Properties:
                              Text: ="Starting Unit"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                              Visible: =If(h_downtime.Visible, false, true)
                        - h_u_h_ending:
                            Control: Label
                            Properties:
                              Text: ="Ending Unit"
                              Align: =Align.Center
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Width / 12
                              Visible: =If(h_downtime.Visible, false, true)
                    - h_u_title:
                        Control: Label
                        Properties:
                          Text: ="Unit Entries"
                          Align: =Align.Center
                          BorderColor: =Color.Black
                          Color: =RGBA(255, 255, 255, 1)
                          Fill: =varColor2
                          Font: =Font.Verdana
                          Height: =Parent.Height * 0.08
                          Size: =Self.Height / 2.5
                          Width: =Parent.Width
                          X: =1-1
                          Y: =1-1
                    - h_u_view_toggle:
                        Control: Classic/Icon
                        Variant: ExpandView
                        Properties:
                          OnSelect: =UpdateContext({locUnitsExpanded:!locUnitsExpanded});
                          Color: =varColorAccent
                          Height: =h_u_title.Height
                          Icon: |-
                            =If(
                                locUnitsExpanded,
                                Icon.CollapseView,
                                Icon.ExpandView
                            )
                          PaddingBottom: =Self.Width * 0.05
                          PaddingLeft: =Self.Width * 0.05
                          PaddingRight: =Self.Width * 0.05
                          PaddingTop: =Self.Width * 0.05
                          Width: =Self.Height
                          X: =Parent.Width - Self.Width
                          Y: =1-1
                - h_downtime:
                    Control: GroupContainer
                    Variant: manualLayoutContainer
                    Properties:
                      AlignInContainer: =AlignInContainer.SetByContainer
                      DropShadow: =DropShadow.None
                      Fill: =varColor5
                      Height: =h_units.Height
                      LayoutMinWidth: =0
                      RadiusBottomLeft: =8
                      RadiusBottomRight: =8
                      RadiusTopLeft: =8
                      RadiusTopRight: =8
                      Visible: =!locUnitsExpanded
                      Width: =h_units.Width
                      Y: =h_units.Y
                    Children:
                    - h_d_gallery:
                        Control: Gallery
                        Variant: galleryVertical
                        Properties:
                          OnSelect: "=SelectedState;\n  If(\n      IsBlankOrError(h_d_gallery.Selected.ID),\n      \n      If(\n          Or(\n              IsBlank(h_lot.Text),\n              IsBlank(h_catalog.Text),\n              h_catalog.Fill = varColorNo,\n              h_lot.Fill = varColorNo\n          ),\n\n          UpdateContext({locPopups: {Visible: true, Value: \"error\"}}),\n      \n          Set(varDowntimeMode, FormMode.New);\n              Set(varDowntimeID, Blank());\n                  Navigate(Downtime_Screen);\n      ),\n      \n      Set(varDowntimeMode, FormMode.Edit);\n          Set(varDowntimeID, h_d_gallery.Selected.ID);\n              Navigate(Downtime_Screen);\n  );"
                          Items: |-
                            =Sort(
                                /*Filter Joined Collection on Shift letter*/
                                Filter(
                                    If(
                                        locShowAllDowntime,
                                        collectDowntime,
                                        collectJoinedDowntimeDisplay
                                    ),
                                    DateTimeValue(Started) >= DateAdd(Today(),-1,TimeUnit.Hours),
                                    Switch(varShiftSelect,
                                        "A Shift",
                                        Shift_Letter.Value = "A",
                                        "B Shift",
                                        Shift_Letter.Value = "B",
                                        "C Shift",
                                        Shift_Letter.Value = "C",
                                        "All",
                                        Shift_Letter.Value = Shift_Letter.Value
                                    )
                                ),     
                                Ended,
                                SortOrder.Ascending
                            )
                          DelayItemLoading: =true
                          Height: =Parent.Height - Self.Y
                          Layout: =Layout.Vertical
                          LoadingSpinner: =LoadingSpinner.Data
                          ShowScrollbar: =false
                          TemplatePadding: =0
                          TemplateSize: =Self.Height / 8
                          Transition: =Transition.Push
                          Width: =Parent.Width
                          X: =1-1
                          Y: =h_d_header.Height + h_d_header.Y
                        Children:
                        - h_d_g_layout:
                            Control: GroupContainer
                            Variant: horizontalAutoLayoutContainer
                            Properties:
                              DropShadow: =DropShadow.None
                              Height: =Parent.TemplateHeight - h_d_g_seperator.Height
                              LayoutMode: =LayoutMode.Auto
                              RadiusBottomLeft: =0
                              RadiusBottomRight: =0
                              RadiusTopLeft: =0
                              RadiusTopRight: =0
                              Width: =Parent.Width
                              X: =1-1
                              Y: =1-1
                            Children:
                            - h_d_g_time_layout:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =Parent.Height
                                  LayoutMinWidth: =0
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - h_d_g_started:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_d_gallery)
                                      Text: =TimeValue(ThisItem.Started)
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =h_d_g_ended.Height
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =h_d_g_ended.X
                                      Y: =h_d_g_ended.Y + Self.Height
                                - h_d_g_ended:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_d_gallery)
                                      Text: =TimeValue(ThisItem.Ended)
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor3
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =(Parent.Height - h_u_g_seperator.Height)/2
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =1-1
                                      Y: =1-1
                            - h_d_g_lot_layout:
                                Control: GroupContainer
                                Variant: verticalAutoLayoutContainer
                                Properties:
                                  DropShadow: =DropShadow.None
                                  LayoutDirection: =LayoutDirection.Vertical
                                  LayoutMinHeight: =Parent.Height
                                  LayoutMinWidth: =0
                                  LayoutMode: =LayoutMode.Auto
                                  RadiusBottomLeft: =0
                                  RadiusBottomRight: =0
                                  RadiusTopLeft: =0
                                  RadiusTopRight: =0
                                Children:
                                - h_d_g_catalog:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_d_gallery)
                                      Text: =ThisItem.Catalog
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =h_u_g_hour_ending.Height
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 1)
                                      Y: =h_u_g_hour_ending.Y + Self.Height
                                - h_d_g_lot:
                                    Control: Label
                                    Properties:
                                      OnSelect: =Select(h_d_gallery)
                                      Text: =ThisItem.Lot
                                      Align: =Align.Center
                                      Color: =Color.Black
                                      Fill: =varColor4
                                      FillPortions: =1
                                      Font: =Font.Verdana
                                      Height: =(Parent.Height - h_u_g_seperator.Height)/2
                                      LayoutMinHeight: =0
                                      LayoutMinWidth: =Parent.Width/11
                                      Size: =h_section_2.Width / 100
                                      Width: =Parent.Width
                                      X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 1)
                                      Y: =1-1
                            - h_d_g_total:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_d_gallery)
                                  Text: =ThisItem.Total_Downtime
                                  Align: =Align.Center
                                  Color: =If(Value(Self.Text) >= 48, Color.White, Color.Black)
                                  Fill: =If(Value(Self.Text) >= 48, varColorNo, varColor4)
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Size: =h_section_2.Width / 100
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 2)
                                  Y: =1-1
                            - h_d_g_reason:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_d_gallery)
                                  Text: =ThisItem.Reason
                                  Align: =Align.Center
                                  Color: =Color.Black
                                  Fill: =varColor4
                                  FillPortions: =1
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Size: =h_section_2.Width / 100
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 2)
                                  Y: =1-1
                            - h_d_g_comments:
                                Control: Label
                                Properties:
                                  OnSelect: =Select(h_d_gallery)
                                  Text: =ThisItem.Comments
                                  Align: =Align.Center
                                  Color: =Color.Black
                                  Fill: =varColor4
                                  FillPortions: =3
                                  Font: =Font.Verdana
                                  Height: =Parent.Height
                                  LayoutMinWidth: =0
                                  Overflow: =Overflow.Scroll
                                  Size: =h_section_2.Width / 100
                                  Visible: =locDowntimeExpanded
                                  Width: =Parent.Width / 11
                                  X: =h_u_g_hour_ending.X + (h_u_g_hour_ending.Width * 2)
                                  Y: =1-1
                        - h_d_g_seperator:
                            Control: Rectangle
                            Properties:
                              OnSelect: =Select(Parent);
                              Fill: =varColorAccent
                              Height: =h_d_gallery.TemplateHeight * 0.05
                              Width: =h_d_gallery.TemplateWidth
                              X: =1-1
                              Y: =h_d_gallery.TemplateHeight - Self.Height
                    - h_d_header:
                        Control: GroupContainer
                        Variant: horizontalAutoLayoutContainer
                        Properties:
                          DropShadow: =DropShadow.None
                          Height: =Parent.Height * 0.05
                          LayoutMode: =LayoutMode.Auto
                          RadiusBottomLeft: =0
                          RadiusBottomRight: =0
                          RadiusTopLeft: =0
                          RadiusTopRight: =0
                          Width: =Parent.Width
                          X: =1-1
                          Y: =h_d_title.Y + h_d_title.Height
                        Children:
                        - h_d_h_time:
                            Control: Label
                            Properties:
                              Text: ="Time"
                              Align: =Align.Center
                              BorderColor: =Color.Black
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =Parent.Height
                              LayoutMinWidth: =0
                              Size: =Self.Height / 3
                              Width: =Parent.Width/5
                              Y: =h_d_title.Height
                        - h_d_h_lot:
                            Control: Label
                            Properties:
                              Text: ="Lot"
                              Align: =Align.Center
                              BorderColor: =Color.Black
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =h_d_h_time.Height
                              LayoutMinWidth: =0
                              Size: =h_d_h_time.Size
                              Width: =Parent.Width/5
                              Y: =h_d_title.Height
                        - h_d_h_total:
                            Control: Label
                            Properties:
                              Text: ="Downtime Total"
                              Align: =Align.Center
                              BorderColor: =Color.Black
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =h_d_h_time.Height
                              LayoutMinWidth: =0
                              Size: =h_d_h_time.Size
                              Width: =Parent.Width/5
                              Y: =h_d_title.Height
                        - h_d_h_reason:
                            Control: Label
                            Properties:
                              Text: ="Downtime Reason"
                              Align: =Align.Center
                              BorderColor: =Color.Black
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =1
                              Font: =Font.Verdana
                              Height: =h_d_h_time.Height
                              LayoutMinWidth: =0
                              Size: =h_d_h_time.Size
                              Width: =Parent.Width/5
                              X: =h_d_h_total.X + h_d_h_total.Width
                              Y: =h_d_title.Height
                        - h_d_h_comments:
                            Control: Label
                            Properties:
                              Text: ="Comments"
                              Align: =Align.Center
                              BorderColor: =Color.Black
                              Color: =varColor0
                              Fill: =varColor3
                              FillPortions: =3
                              Font: =Font.Verdana
                              Height: =h_d_h_time.Height
                              LayoutMinWidth: =0
                              Size: =h_d_h_time.Size
                              Visible: =locDowntimeExpanded
                              Width: =Parent.Width/5
                              X: =h_d_h_time.X + h_d_h_time.Width
                              Y: =h_d_title.Height
                    - h_d_title:
                        Control: Label
                        Properties:
                          Text: ="Downtime Entries"
                          Align: =Align.Center
                          BorderColor: =Color.Black
                          Color: =RGBA(255, 255, 255, 1)
                          Fill: =varColor2
                          Font: =Font.Verdana
                          Height: =Parent.Height * 0.08
                          Size: =Self.Height / 2.5
                          Width: =Parent.Width
                          X: =1-1
                          Y: =1-1
                    - h_d_view_toggle:
                        Control: Classic/Icon
                        Variant: ExpandView
                        Properties:
                          OnSelect: =UpdateContext({locDowntimeExpanded:!locDowntimeExpanded});
                          Color: =varColorAccent
                          Height: =h_u_title.Height
                          Icon: |-
                            =If(
                                locDowntimeExpanded,
                                Icon.CollapseView,
                                Icon.ExpandView
                            )
                          PaddingBottom: =Self.Width * 0.05
                          PaddingLeft: =Self.Width * 0.05
                          PaddingRight: =Self.Width * 0.05
                          PaddingTop: =Self.Width * 0.05
                          Width: =Self.Height
                          X: =Parent.Width - Self.Width
                          Y: =1-1
                    - h_d_view_button:
                        Control: Classic/Button
                        Properties:
                          OnSelect: |-
                            =UpdateContext({locShowAllDowntime: !locShowAllDowntime});
                          Text: |-
                            =If(
                                locShowAllDowntime,
                                "Show Top Hourly",
                                "Show All"
                            )
                          Color: =varColor0
                          Fill: =varColorAccent
                          Font: =Font.Verdana
                          Height: =h_d_title.Height  * 0.80
                          HoverColor: =varColor0
                          HoverFill: =ColorFade(Self.Fill, -30%)
                          Size: |-
                            =If(
                                locShowAllDowntime,
                                Self.Width / 10,
                                Self.Width / 8
                            )
                          Width: =h_section_2.Width * 0.08
                          X: =Parent.Width * 0.02
                          Y: =h_d_title.Height / 2 - Self.Height / 2
